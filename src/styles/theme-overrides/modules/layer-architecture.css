/**
 * CSS层级架构控制器
 * 解决循环卡片黑底黑字问题的核心架构
 */

/* =============================================================================
   CSS层级定义 - 从低到高优先级
   ============================================================================= */

@layer 
  theme-reset,        /* 重置样式 */
  main-app,          /* 主程序暗灰色系 */
  universal-ui,      /* Universal UI保护 */
  loop-cards,        /* 循环卡片白底黑字 */
  final-overrides;   /* 最终覆盖层 */

/* =============================================================================
   重置层 - 清理冲突样式
   ============================================================================= */

@layer theme-reset {
  /* 重置可能造成冲突的全局样式 */
  * {
    /* 移除可能的强制暗色样式 */
    background-color: initial !important;
    color: initial !important;
    border-color: initial !important;
  }
  
  /* 重置body基础样式 */
  body {
    background-color: var(--main-app-bg, #1f2937) !important;
    color: var(--main-app-text, #e5e7eb) !important;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
  }
}

/* =============================================================================
   主程序层 - 暗灰色系默认主题
   ============================================================================= */

@layer main-app {
  /* CSS变量定义 */
  :root {
    --main-app-bg: #1f2937;
    --main-app-bg-secondary: #374151;
    --main-app-text: #e5e7eb;
    --main-app-text-secondary: #9ca3af;
    --main-app-border: #374151;
    --main-app-hover: #4b5563;
  }
  
  /* 主应用容器样式 */
  body,
  #root,
  .ant-app {
    background-color: var(--main-app-bg) !important;
    color: var(--main-app-text) !important;
  }
  
  /* Ant Design组件默认暗色主题 */
  .ant-card:not(.step-card):not(.loop-card),
  .ant-table:not(.step-card .ant-table):not(.loop-card .ant-table),
  .ant-list:not(.step-card .ant-list):not(.loop-card .ant-list) {
    background-color: var(--main-app-bg-secondary) !important;
    color: var(--main-app-text) !important;
    border-color: var(--main-app-border) !important;
  }
  
  /* 表单控件 */
  .ant-input:not(.step-card .ant-input):not(.loop-card .ant-input),
  .ant-select:not(.step-card .ant-select):not(.loop-card .ant-select) {
    background-color: var(--main-app-bg-secondary) !important;
    color: var(--main-app-text) !important;
    border-color: var(--main-app-border) !important;
  }
  
  /* 按钮 */
  .ant-btn:not(.step-card .ant-btn):not(.loop-card .ant-btn) {
    background-color: var(--main-app-bg-secondary) !important;
    color: var(--main-app-text) !important;
    border-color: var(--main-app-border) !important;
  }
  
  .ant-btn:not(.step-card .ant-btn):not(.loop-card .ant-btn):hover {
    background-color: var(--main-app-hover) !important;
    border-color: var(--main-app-hover) !important;
  }
}

/* =============================================================================
   Universal UI保护层
   ============================================================================= */

@layer universal-ui {
  /* 保护Universal UI模态框 */
  .universal-page-finder,
  .xml-inspector-modal,
  .universal-page-finder *,
  .xml-inspector-modal * {
    background-color: var(--main-app-bg) !important;
    color: var(--main-app-text) !important;
  }
  
  .universal-page-finder .ant-table,
  .xml-inspector-modal .ant-table {
    background-color: var(--main-app-bg-secondary) !important;
  }
  
  .universal-page-finder .ant-table-thead > tr > th,
  .xml-inspector-modal .ant-table-thead > tr > th {
    background-color: var(--main-app-bg) !important;
    color: var(--main-app-text) !important;
  }
}

/* =============================================================================
   循环卡片层 - 最高优先级白底黑字
   ============================================================================= */

@layer loop-cards {
  /* CSS变量定义 */
  :root {
    --loop-card-bg: #ffffff;
    --loop-card-text: #333333;
    --loop-card-border: #e1e4e8;
    --loop-card-hover: #f6f8fa;
    --loop-card-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  
  /* 核心循环卡片选择器 - 覆盖所有可能的类名 */
  .step-card,
  .loop-card,
  .loop-step-card,
  .draggable-step-card,
  .smart-step-card,
  [data-loop-badge],
  [data-step-type="loop"],
  [data-component="loop-card"],
  .ant-card.step-card,
  .ant-card.loop-card {
    background-color: var(--loop-card-bg) !important;
    color: var(--loop-card-text) !important;
    border: 1px solid var(--loop-card-border) !important;
    border-radius: 8px !important;
    box-shadow: var(--loop-card-shadow) !important;
  }
  
  /* 循环卡片内的所有子元素 */
  .step-card *,
  .loop-card *,
  .loop-step-card *,
  .draggable-step-card *,
  .smart-step-card *,
  [data-loop-badge] *,
  [data-step-type="loop"] *,
  [data-component="loop-card"] * {
    color: var(--loop-card-text) !important;
  }
  
  /* 循环卡片内的Ant Design组件 */
  .step-card .ant-card,
  .step-card .ant-card-head,
  .step-card .ant-card-body,
  .loop-card .ant-card,
  .loop-card .ant-card-head,
  .loop-card .ant-card-body {
    background-color: var(--loop-card-bg) !important;
    color: var(--loop-card-text) !important;
    border-color: var(--loop-card-border) !important;
  }
  
  /* 循环卡片内的按钮 */
  .step-card .ant-btn,
  .loop-card .ant-btn {
    background-color: transparent !important;
    color: var(--loop-card-text) !important;
    border-color: var(--loop-card-border) !important;
  }
  
  .step-card .ant-btn:hover,
  .loop-card .ant-btn:hover {
    background-color: var(--loop-card-hover) !important;
    border-color: var(--loop-card-border) !important;
  }
  
  /* 循环卡片内的图标 */
  .step-card .anticon,
  .loop-card .anticon {
    color: var(--loop-card-text) !important;
  }
  
  /* 循环卡片内的标签 */
  .step-card .ant-tag,
  .loop-card .ant-tag {
    background-color: var(--loop-card-hover) !important;
    color: var(--loop-card-text) !important;
    border-color: var(--loop-card-border) !important;
  }
  
  /* 循环卡片悬停效果 */
  .step-card:hover,
  .loop-card:hover {
    background-color: var(--loop-card-hover) !important;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
  }
}

/* =============================================================================
   最终覆盖层 - 处理特殊情况
   ============================================================================= */

@layer final-overrides {
  /* 确保循环卡片内的文本始终可见 */
  .step-card,
  .loop-card,
  .step-card *,
  .loop-card * {
    /* 强制文本颜色 */
    color: #333333 !important;
    /* 确保背景透明度正常 */
    opacity: 1 !important;
  }
  
  /* 特殊处理某些可能被强制暗色的元素 */
  .step-card [style*="background"],
  .loop-card [style*="background"] {
    background-color: var(--loop-card-bg) !important;
  }
  
  .step-card [style*="color"],
  .loop-card [style*="color"] {
    color: var(--loop-card-text) !important;
  }
}

/* =============================================================================
   调试模式
   ============================================================================= */

@media (max-width: 0px) {
  /* 这个媒体查询永远不会生效，仅用于调试时临时启用 */
  .step-card,
  .loop-card {
    border: 3px solid red !important;
    outline: 2px solid blue !important;
  }
}

/* 调试信息 */
html[data-debug="true"] .step-card::before,
html[data-debug="true"] .loop-card::before {
  content: "LOOP CARD - WHITE THEME";
  position: absolute;
  top: -20px;
  left: 0;
  background: red;
  color: white;
  padding: 2px 6px;
  font-size: 10px;
  font-weight: bold;
  z-index: 10000;
  border-radius: 3px;
}