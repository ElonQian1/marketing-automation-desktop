{
  "statistics": {
    "detectionDate": "2025-10-18T10:52:44.621Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/components/universal-ui/views/grid-view/panels/node-detail/responsive/utils/index.ts": {
            "lines": 67,
            "tokens": 601,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/performance/performanceUtils.ts": {
            "lines": 227,
            "tokens": 1931,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/performance/EventSeparation.ts": {
            "lines": 163,
            "tokens": 1050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/performance/DragThreshold.ts": {
            "lines": 126,
            "tokens": 887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/performance/DragBehaviorOptimizer.ts": {
            "lines": 209,
            "tokens": 1136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/drag/useHeaderDrag.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/toolbar-actions/useToolbarActions.ts": {
            "lines": 156,
            "tokens": 1318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/toolbar-actions/ToolbarActionManager.ts": {
            "lines": 173,
            "tokens": 1434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/toolbar-actions/index.ts": {
            "lines": 26,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/strategy-configurator/index.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/utils/HiddenElementParentFinder.ts": {
            "lines": 282,
            "tokens": 2550,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/responsive/utils.ts": {
            "lines": 263,
            "tokens": 1785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/responsive/index.ts": {
            "lines": 53,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/responsive/hooks.ts": {
            "lines": 274,
            "tokens": 2613,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 402,
            "percentage": 16.79,
            "percentageTokens": 15.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/responsive/constants.ts": {
            "lines": 191,
            "tokens": 1793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/hooks/useInteractiveScoring.ts": {
            "lines": 186,
            "tokens": 1598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/hooks/index.ts": {
            "lines": 6,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/enhanced-field-selector/index.ts": {
            "lines": 39,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/enhanced-field-selector/fieldDefinitions.ts": {
            "lines": 372,
            "tokens": 3359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/element-presets/types.ts": {
            "lines": 20,
            "tokens": 174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/element-presets/registry_optimized.ts": {
            "lines": 65,
            "tokens": 587,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/element-presets/registry.ts": {
            "lines": 196,
            "tokens": 2010,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 468,
            "percentage": 20.41,
            "percentageTokens": 23.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/element-discovery/utils/elementCardUtils.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/logic/confirmBulkDelete.ts": {
            "lines": 6,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/hooks/useTxtImportRecords.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/hooks/useTxtImportActions.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/hooks/useRecordsManager.ts": {
            "lines": 188,
            "tokens": 1567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/hooks/index.ts": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/components/index.ts": {
            "lines": 6,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/utils/SmartDragDetector.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useViewportHeight.ts": {
            "lines": 117,
            "tokens": 1110,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useToolbarManager.ts": {
            "lines": 231,
            "tokens": 2246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useStaticDragFix.ts": {
            "lines": 110,
            "tokens": 814,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useSmartDrag.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useLayoutVersions.ts": {
            "lines": 236,
            "tokens": 2440,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 67,
            "percentage": 2.12,
            "percentageTokens": 2.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useLayoutPerformance.ts": {
            "lines": 212,
            "tokens": 1937,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useHandleOnlyDrag.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useHandleDrag.ts": {
            "lines": 336,
            "tokens": 3315,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 146,
            "duplicatedTokens": 1708,
            "percentage": 43.45,
            "percentageTokens": 51.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useGridDragGuards.ts": {
            "lines": 193,
            "tokens": 1589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useDragRestore.ts": {
            "lines": 287,
            "tokens": 2488,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 196,
            "percentage": 5.57,
            "percentageTokens": 7.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useDragHealthCheck.ts": {
            "lines": 290,
            "tokens": 2541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useDraggableOptimized.ts": {
            "lines": 305,
            "tokens": 3094,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 192,
            "duplicatedTokens": 1965,
            "percentage": 62.95,
            "percentageTokens": 63.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useDraggable.ts": {
            "lines": 229,
            "tokens": 2316,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 114,
            "duplicatedTokens": 1225,
            "percentage": 49.78,
            "percentageTokens": 52.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useDragFixer.ts": {
            "lines": 261,
            "tokens": 2218,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useDragDiagnostic.ts": {
            "lines": 201,
            "tokens": 1824,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/useDragConflictResolver.ts": {
            "lines": 194,
            "tokens": 1679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/index.ts": {
            "lines": 19,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/drag-conflict-demo.ts": {
            "lines": 112,
            "tokens": 100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/types.ts": {
            "lines": 17,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/index.ts": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-columns/index.ts": {
            "lines": 14,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/index.ts": {
            "lines": 35,
            "tokens": 259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/resizable-table/index.ts": {
            "lines": 9,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/enhanced-import/index.ts": {
            "lines": 10,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/bulk-actions/index.ts": {
            "lines": 9,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/types.ts": {
            "lines": 89,
            "tokens": 622,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/titleHelpers.ts": {
            "lines": 37,
            "tokens": 517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/index.ts": {
            "lines": 98,
            "tokens": 679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/helpers.ts": {
            "lines": 464,
            "tokens": 4210,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 34,
            "duplicatedTokens": 404,
            "percentage": 7.33,
            "percentageTokens": 9.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/elementToStepHelper.ts": {
            "lines": 642,
            "tokens": 5501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/step-editor/components/index.ts": {
            "lines": 12,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/step-form/types/index.ts": {
            "lines": 93,
            "tokens": 826,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/step-form/handlers/StepSaveHandler.ts": {
            "lines": 159,
            "tokens": 1375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/step-form/handlers/FormHandler.ts": {
            "lines": 98,
            "tokens": 825,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/page-finder/types/index.ts": {
            "lines": 75,
            "tokens": 594,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/page-finder/handlers/SnapshotHandler.ts": {
            "lines": 95,
            "tokens": 739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/page-finder/handlers/ElementSelectionHandler.ts": {
            "lines": 61,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/types/index.ts": {
            "lines": 45,
            "tokens": 309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/semi-auto/useSemiAutoTasks.ts": {
            "lines": 463,
            "tokens": 5107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/semi-auto/types.ts": {
            "lines": 153,
            "tokens": 1199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/hooks/useTaskTemplates.ts": {
            "lines": 226,
            "tokens": 2093,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/hooks/useTaskManagement.ts": {
            "lines": 244,
            "tokens": 2397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/hooks/usePrecheckEvaluator.ts": {
            "lines": 209,
            "tokens": 1700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/hooks/index.ts": {
            "lines": 26,
            "tokens": 171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/components/index.ts": {
            "lines": 6,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/hooks/useMonitoringData.ts": {
            "lines": 81,
            "tokens": 751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/hooks/index.ts": {
            "lines": 7,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/components/index.ts": {
            "lines": 8,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/types/enhancedTypes.ts": {
            "lines": 42,
            "tokens": 286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/services/monitoringService.ts": {
            "lines": 64,
            "tokens": 581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/hooks/useIndustryMonitoring.ts": {
            "lines": 27,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/hooks/index.ts": {
            "lines": 8,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/components/index.ts": {
            "lines": 10,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/account-monitoring/hooks/index.ts": {
            "lines": 10,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/account-monitoring/components/index.ts": {
            "lines": 9,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/domain/public/selector/StrategyContracts.ts": {
            "lines": 253,
            "tokens": 1417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/domain/public/selector/AnalysisContracts.ts": {
            "lines": 7,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/step-card-system/types/step-card-system-types.ts": {
            "lines": 178,
            "tokens": 1221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/utils/validation/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/utils/validation/csvValidation.ts": {
            "lines": 496,
            "tokens": 4181,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 201,
            "percentage": 3.02,
            "percentageTokens": 4.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/utils/formatting/index.ts": {
            "lines": 174,
            "tokens": 1509,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 13,
            "duplicatedTokens": 211,
            "percentage": 7.47,
            "percentageTokens": 13.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/utils/data-processing/index.ts": {
            "lines": 290,
            "tokens": 2625,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 253,
            "percentage": 8.97,
            "percentageTokens": 9.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/utils/analytics/index.ts": {
            "lines": 271,
            "tokens": 2537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/uniqueness/types/index.ts": {
            "lines": 148,
            "tokens": 877,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 113,
            "percentage": 13.51,
            "percentageTokens": 12.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/uniqueness/core/ValidationEngine.ts": {
            "lines": 322,
            "tokens": 2581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/uniqueness/core/SimilarityAnalyzer.ts": {
            "lines": 243,
            "tokens": 2272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/uniqueness/core/ConflictDetector.ts": {
            "lines": 293,
            "tokens": 2363,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/utils/RiskAssessmentEngine.ts": {
            "lines": 173,
            "tokens": 1361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/utils/RecommendationGenerator.ts": {
            "lines": 263,
            "tokens": 2209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/types/index.ts": {
            "lines": 179,
            "tokens": 1176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/strategies/ResolutionAdaptabilityAnalyzer.ts": {
            "lines": 221,
            "tokens": 1903,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/strategies/DeviceCompatibilityAnalyzer.ts": {
            "lines": 182,
            "tokens": 1513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/core/StabilityAssessmentEngine.ts": {
            "lines": 368,
            "tokens": 3240,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 246,
            "percentage": 5.43,
            "percentageTokens": 7.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/calculators/StabilityScoreCalculator.ts": {
            "lines": 140,
            "tokens": 911,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/region-scoped/strategies/RegionContainerAnalyzer.ts": {
            "lines": 249,
            "tokens": 2211,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 41,
            "duplicatedTokens": 322,
            "percentage": 16.47,
            "percentageTokens": 14.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/region-scoped/calculators/RegionCalculator.ts": {
            "lines": 349,
            "tokens": 3463,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 99,
            "duplicatedTokens": 937,
            "percentage": 28.37,
            "percentageTokens": 27.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/strategies/SiblingStrategy.ts": {
            "lines": 430,
            "tokens": 3666,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 113,
            "duplicatedTokens": 1154,
            "percentage": 26.28,
            "percentageTokens": 31.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/strategies/MultiNeighborStrategy.ts": {
            "lines": 599,
            "tokens": 5426,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 48,
            "duplicatedTokens": 521,
            "percentage": 8.01,
            "percentageTokens": 9.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/strategies/index.ts": {
            "lines": 24,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/strategies/DistanceConstraintStrategy.ts": {
            "lines": 556,
            "tokens": 5042,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 61,
            "duplicatedTokens": 629,
            "percentage": 10.97,
            "percentageTokens": 12.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/strategies/DirectNeighborStrategy.ts": {
            "lines": 229,
            "tokens": 1909,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 78,
            "percentage": 2.62,
            "percentageTokens": 4.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/strategies/DirectionalStrategy.ts": {
            "lines": 334,
            "tokens": 2833,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 34,
            "duplicatedTokens": 322,
            "percentage": 10.18,
            "percentageTokens": 11.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/calculators/NeighborXPathBuilder.ts": {
            "lines": 183,
            "tokens": 1760,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 468,
            "percentage": 21.86,
            "percentageTokens": 26.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/calculators/NeighborFinder.ts": {
            "lines": 248,
            "tokens": 2121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/neighbor-relative/calculators/index.ts": {
            "lines": 11,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/strategies/XPathDirectStrategy.ts": {
            "lines": 122,
            "tokens": 903,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 25,
            "duplicatedTokens": 316,
            "percentage": 20.49,
            "percentageTokens": 34.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/strategies/index.ts": {
            "lines": 13,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/strategies/HierarchyPathStrategy.ts": {
            "lines": 293,
            "tokens": 2372,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 86,
            "percentage": 2.39,
            "percentageTokens": 3.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/strategies/ElementIndexStrategy.ts": {
            "lines": 169,
            "tokens": 1350,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 78,
            "percentage": 3.55,
            "percentageTokens": 5.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/strategies/CombinationFallbackStrategy.ts": {
            "lines": 319,
            "tokens": 2926,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 74,
            "percentage": 1.88,
            "percentageTokens": 2.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/strategies/AbsolutePositionStrategy.ts": {
            "lines": 110,
            "tokens": 846,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 78,
            "percentage": 5.45,
            "percentageTokens": 9.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/calculators/PositionCalculator.ts": {
            "lines": 112,
            "tokens": 1014,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/calculators/IndexCalculator.ts": {
            "lines": 96,
            "tokens": 720,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/stats/contactStatsService.ts": {
            "lines": 24,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/industry/batchIndustryService.ts": {
            "lines": 68,
            "tokens": 612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/index.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/result/index.ts": {
            "lines": 5,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/useResizableLayout.ts": {
            "lines": 166,
            "tokens": 1536,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/index.ts": {
            "lines": 54,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/useNumberPoolTable.ts": {
            "lines": 115,
            "tokens": 1053,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/NumberPoolTableColumns.ts": {
            "lines": 155,
            "tokens": 1221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/index.ts": {
            "lines": 35,
            "tokens": 188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/useGridLayout.ts": {
            "lines": 108,
            "tokens": 1071,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/index.ts": {
            "lines": 93,
            "tokens": 1047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/useDeviceAssignmentState.ts": {
            "lines": 181,
            "tokens": 2697,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/index.ts": {
            "lines": 5,
            "tokens": 38,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/columns/useColumnSettings.ts": {
            "lines": 110,
            "tokens": 1260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/themes/styles.ts": {
            "lines": 242,
            "tokens": 1418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/hooks/useIndustryOptions.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/hooks/useDebouncedValue.ts": {
            "lines": 15,
            "tokens": 156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/hooks/useBatchIndustry.ts": {
            "lines": 52,
            "tokens": 624,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/hooks/useBatchData.ts": {
            "lines": 99,
            "tokens": 1317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils/screenGeometry.ts": {
            "lines": 76,
            "tokens": 1081,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 84,
            "percentage": 6.58,
            "percentageTokens": 7.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils/elementTransform.ts": {
            "lines": 40,
            "tokens": 481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils/coordinateTransform.ts": {
            "lines": 210,
            "tokens": 1565,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 84,
            "percentage": 2.38,
            "percentageTokens": 5.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils/coordinateCalibration.ts": {
            "lines": 261,
            "tokens": 1718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils/categorization.ts": {
            "lines": 44,
            "tokens": 642,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 281,
            "percentage": 45.45,
            "percentageTokens": 43.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils/calibrationStorage.ts": {
            "lines": 247,
            "tokens": 1849,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils/appAnalysis.ts": {
            "lines": 53,
            "tokens": 909,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 106,
            "percentage": 24.53,
            "percentageTokens": 11.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/types/visual-types.ts": {
            "lines": 27,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/hooks/useVisualViewPreferences.ts": {
            "lines": 278,
            "tokens": 2084,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/hooks/useParsedVisualElements.ts": {
            "lines": 5,
            "tokens": 38,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/hooks/useFilteredVisualElements.ts": {
            "lines": 91,
            "tokens": 933,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/constants/categories.ts": {
            "lines": 16,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/utils/treeBuilder.ts": {
            "lines": 187,
            "tokens": 1537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/utils/filterUtils.ts": {
            "lines": 174,
            "tokens": 1410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/utils/elementUtils.ts": {
            "lines": 211,
            "tokens": 1972,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/hooks/useVirtualRender.ts": {
            "lines": 110,
            "tokens": 1037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/hooks/useTreeState.ts": {
            "lines": 146,
            "tokens": 1335,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 115,
            "percentage": 8.22,
            "percentageTokens": 8.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/presets/usePresets.ts": {
            "lines": 38,
            "tokens": 485,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 357,
            "percentage": 71.05,
            "percentageTokens": 73.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/presets/presets.ts": {
            "lines": 32,
            "tokens": 276,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 195,
            "percentage": 59.38,
            "percentageTokens": 70.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/hooks/useScrcpyPresets.ts": {
            "lines": 69,
            "tokens": 732,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 46,
            "duplicatedTokens": 552,
            "percentage": 66.67,
            "percentageTokens": 75.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/embedded/useWsConnection.ts": {
            "lines": 33,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/embedded/useWebCodecsDecoder.ts": {
            "lines": 38,
            "tokens": 483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/embedded/useInputController.ts": {
            "lines": 17,
            "tokens": 207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/embedded/useCanvasRenderer.ts": {
            "lines": 24,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/embedded/types.ts": {
            "lines": 17,
            "tokens": 132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/utils/bounds.ts": {
            "lines": 26,
            "tokens": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/services/smartRecommendationEnhancer.ts": {
            "lines": 344,
            "tokens": 3217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/services/childElementAnalyzer.ts": {
            "lines": 425,
            "tokens": 3467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/index.ts": {
            "lines": 13,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/integration/GridInspectorIntegration.ts": {
            "lines": 287,
            "tokens": 1701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/hooks/useXPathNavigator.ts": {
            "lines": 40,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/hooks/useXmlParsing.ts": {
            "lines": 42,
            "tokens": 438,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/hooks/useSearchAndMatch.ts": {
            "lines": 113,
            "tokens": 1491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/hooks/useResizableSplit.ts": {
            "lines": 49,
            "tokens": 585,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/hooks/usePanelSync.ts": {
            "lines": 68,
            "tokens": 649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/hooks/useMatchingSelection.ts": {
            "lines": 43,
            "tokens": 530,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/hooks/useGridElementView.ts": {
            "lines": 275,
            "tokens": 2565,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 126,
            "percentage": 3.27,
            "percentageTokens": 4.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/index.ts": {
            "lines": 11,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/utils/elementCardUtils.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/utils/boundaryDetector.ts": {
            "lines": 247,
            "tokens": 2296,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 33,
            "duplicatedTokens": 337,
            "percentage": 13.36,
            "percentageTokens": 14.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/services/xmlStructureParser.ts": {
            "lines": 636,
            "tokens": 5501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/services/PureXmlStructureAnalyzer.ts": {
            "lines": 417,
            "tokens": 3712,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 125,
            "percentage": 2.64,
            "percentageTokens": 3.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/services/LocalArchitectureAnalyzer.ts": {
            "lines": 443,
            "tokens": 4227,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 125,
            "percentage": 2.48,
            "percentageTokens": 2.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/services/hierarchyBuilder.ts": {
            "lines": 620,
            "tokens": 5517,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 95,
            "percentage": 0.97,
            "percentageTokens": 1.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/services/elementAnalyzer.ts": {
            "lines": 361,
            "tokens": 2902,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/hooks/useElementVisualization.ts": {
            "lines": 251,
            "tokens": 2483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/hooks/useArchitectureTree.ts": {
            "lines": 242,
            "tokens": 2091,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 95,
            "percentage": 2.48,
            "percentageTokens": 4.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/components/index.ts": {
            "lines": 15,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/step-editor/index.ts": {
            "lines": 8,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/step-form/index.ts": {
            "lines": 28,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/page-finder/index.ts": {
            "lines": 28,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal-native/index.ts": {
            "lines": 6,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/index.ts": {
            "lines": 26,
            "tokens": 160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/loop-management/useLoopManagement.ts": {
            "lines": 78,
            "tokens": 591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/loop-management/LoopManager.ts": {
            "lines": 199,
            "tokens": 1440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/loop-management/loopConfigs.ts": {
            "lines": 83,
            "tokens": 580,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 112,
            "percentage": 19.28,
            "percentageTokens": 19.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/loop-management/index.ts": {
            "lines": 12,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/contact-import/useContactImport.ts": {
            "lines": 41,
            "tokens": 313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/contact-import/index.ts": {
            "lines": 6,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/contact-import/ContactImportManager.ts": {
            "lines": 46,
            "tokens": 319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/contact-import/contactActionConfigs.ts": {
            "lines": 32,
            "tokens": 244,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 207,
            "percentage": 81.25,
            "percentageTokens": 84.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/shared/types/monitoringTypes.ts": {
            "lines": 86,
            "tokens": 569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/shared/hooks/usePagination.ts": {
            "lines": 104,
            "tokens": 984,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/shared/hooks/useFilter.ts": {
            "lines": 108,
            "tokens": 1017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/shared/hooks/useDeviceStatus.ts": {
            "lines": 49,
            "tokens": 387,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/shared/hooks/useDataExport.ts": {
            "lines": 98,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/shared/hooks/index.ts": {
            "lines": 11,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/index.ts": {
            "lines": 17,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/types.ts": {
            "lines": 78,
            "tokens": 551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/index.ts": {
            "lines": 18,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/DataAnalysisEngine.ts": {
            "lines": 249,
            "tokens": 2856,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/safety-protection/index.ts": {
            "lines": 13,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/reply-management/index.ts": {
            "lines": 12,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/index.ts": {
            "lines": 9,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/index.ts": {
            "lines": 13,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/follow-executor/index.ts": {
            "lines": 12,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/types.ts": {
            "lines": 233,
            "tokens": 1822,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/index.ts": {
            "lines": 20,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/DuplicationRuleManager.ts": {
            "lines": 406,
            "tokens": 3239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/DuplicationDetector.ts": {
            "lines": 468,
            "tokens": 4486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/data-filter/index.ts": {
            "lines": 10,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/analytics-reporting/types.ts": {
            "lines": 348,
            "tokens": 2544,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/analytics-reporting/AnalyticsService.ts": {
            "lines": 505,
            "tokens": 4572,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/account-monitoring/index.ts": {
            "lines": 12,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/utils/validators.ts": {
            "lines": 32,
            "tokens": 440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/services/AuthorizationService.ts": {
            "lines": 337,
            "tokens": 2877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/types/universal-analysis-step-card.ts": {
            "lines": 65,
            "tokens": 394,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 236,
            "percentage": 58.46,
            "percentageTokens": 59.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/types/AnalysisStepCard.ts": {
            "lines": 65,
            "tokens": 394,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 236,
            "percentage": 58.46,
            "percentageTokens": 59.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/hooks/universal-use-step-card-analysis.ts": {
            "lines": 27,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/index.ts": {
            "lines": 61,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/infrastructure/__tests__/event-acknowledgment-service.test.ts": {
            "lines": 209,
            "tokens": 2131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/infrastructure/__tests__/analysis-health-service.test.ts": {
            "lines": 267,
            "tokens": 2276,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 178,
            "percentage": 8.24,
            "percentageTokens": 7.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/infrastructure/adapters/LegacySmartProvider.ts": {
            "lines": 242,
            "tokens": 1743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/infrastructure/adapters/HeuristicProvider.ts": {
            "lines": 284,
            "tokens": 2117,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 96,
            "percentage": 3.52,
            "percentageTokens": 4.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/__tests__/use-intelligent-analysis-workflow-contract.test.ts": {
            "lines": 415,
            "tokens": 4091,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/__tests__/analysis-workflow-contracts.test.ts": {
            "lines": 298,
            "tokens": 2731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/step-card-system/index.ts": {
            "lines": 54,
            "tokens": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/application/usecases/GenerateSmartStrategyUseCase.ts": {
            "lines": 188,
            "tokens": 1459,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 96,
            "percentage": 5.32,
            "percentageTokens": 6.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/application/ports/StrategyProvider.ts": {
            "lines": 53,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/application/compat/LegacyManualAdapter.ts": {
            "lines": 276,
            "tokens": 2129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/template-management/services/prospecting-template-service.ts": {
            "lines": 462,
            "tokens": 3569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-generation/templates/TaskTemplateManager.ts": {
            "lines": 682,
            "tokens": 5481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-generation/state/TaskStateManager.ts": {
            "lines": 634,
            "tokens": 5303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-generation/engines/TaskGenerationEngine.ts": {
            "lines": 710,
            "tokens": 6128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-execution/executors/TaskExecutors.ts": {
            "lines": 770,
            "tokens": 6119,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 220,
            "percentage": 3.12,
            "percentageTokens": 3.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/types/index.ts": {
            "lines": 114,
            "tokens": 744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/services/TaskGenerator.ts": {
            "lines": 229,
            "tokens": 1983,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 60,
            "duplicatedTokens": 488,
            "percentage": 26.2,
            "percentageTokens": 24.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/services/prospecting-task-query-service.ts": {
            "lines": 183,
            "tokens": 1612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/services/prospecting-task-manager.ts": {
            "lines": 267,
            "tokens": 2284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/services/prospecting-task-executor-service.ts": {
            "lines": 492,
            "tokens": 4020,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 240,
            "percentage": 6.91,
            "percentageTokens": 5.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/services/prospecting-task-engine-service.ts": {
            "lines": 185,
            "tokens": 1286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/services/prospecting-enhanced-executor-service.ts": {
            "lines": 429,
            "tokens": 3338,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 240,
            "percentage": 7.93,
            "percentageTokens": 7.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/hooks/useTaskEngine.ts": {
            "lines": 362,
            "tokens": 3462,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/index.ts": {
            "lines": 14,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/utils/type-mappings.ts": {
            "lines": 71,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/utils/index.ts": {
            "lines": 29,
            "tokens": 177,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/types/core.ts": {
            "lines": 464,
            "tokens": 2884,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 65,
            "duplicatedTokens": 453,
            "percentage": 14.01,
            "percentageTokens": 15.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/services/prospecting-backend-validation-service.ts": {
            "lines": 401,
            "tokens": 3265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/constants/index.ts": {
            "lines": 619,
            "tokens": 4661,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 79,
            "percentage": 0.97,
            "percentageTokens": 1.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/reporting/services/prospecting-reporting-service.ts": {
            "lines": 907,
            "tokens": 7792,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-limit/types/index.ts": {
            "lines": 99,
            "tokens": 607,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-limit/services/RecordManager.ts": {
            "lines": 230,
            "tokens": 1875,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 239,
            "percentage": 11.3,
            "percentageTokens": 12.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-limit/services/RateLimiter.ts": {
            "lines": 187,
            "tokens": 1666,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-limit/services/prospecting-rate-limit-service.ts": {
            "lines": 250,
            "tokens": 1778,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-limit/services/DedupChecker.ts": {
            "lines": 265,
            "tokens": 2145,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 239,
            "percentage": 9.81,
            "percentageTokens": 11.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-limit/hooks/useRateLimit.ts": {
            "lines": 423,
            "tokens": 3894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-control/services/prospecting-rate-control-service.ts": {
            "lines": 909,
            "tokens": 7620,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/candidate-pool/types/index.ts": {
            "lines": 31,
            "tokens": 196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/candidate-pool/services/prospecting-candidate-pool-service.ts": {
            "lines": 263,
            "tokens": 2281,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 79,
            "percentage": 2.28,
            "percentageTokens": 3.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/candidate-pool/hooks/useCandidatePool.ts": {
            "lines": 441,
            "tokens": 4244,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 112,
            "percentage": 1.81,
            "percentageTokens": 2.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/audit-system/services/prospecting-audit-service.ts": {
            "lines": 723,
            "tokens": 5834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/application/system/SystemLifecycleManager.ts": {
            "lines": 265,
            "tokens": 2098,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/application/system/SystemConfigurationManager.ts": {
            "lines": 222,
            "tokens": 1749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/application/system/ServiceRegistry.ts": {
            "lines": 219,
            "tokens": 1451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/utils/index.ts": {
            "lines": 119,
            "tokens": 637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/utils/elementUtils.ts": {
            "lines": 328,
            "tokens": 2479,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/utils/calculationUtils.ts": {
            "lines": 330,
            "tokens": 2409,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 108,
            "percentage": 1.82,
            "percentageTokens": 4.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/utils/boundsParser.ts": {
            "lines": 240,
            "tokens": 2041,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 187,
            "percentage": 5,
            "percentageTokens": 9.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/types/index.ts": {
            "lines": 79,
            "tokens": 439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/types/geometry.ts": {
            "lines": 97,
            "tokens": 506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/types/element.ts": {
            "lines": 101,
            "tokens": 664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/types/device.ts": {
            "lines": 129,
            "tokens": 709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/types/constants.ts": {
            "lines": 153,
            "tokens": 1010,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/element-utils/XPathGenerator.ts": {
            "lines": 304,
            "tokens": 2614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/element-utils/ElementValidator.ts": {
            "lines": 207,
            "tokens": 1543,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/bounds/BoundsCalculator.ts": {
            "lines": 164,
            "tokens": 1401,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 351,
            "percentage": 20.73,
            "percentageTokens": 25.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/uniqueness/index.ts": {
            "lines": 107,
            "tokens": 530,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/types/ScoringTypes.ts": {
            "lines": 626,
            "tokens": 3088,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 36,
            "duplicatedTokens": 262,
            "percentage": 5.75,
            "percentageTokens": 8.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/types/index.ts": {
            "lines": 45,
            "tokens": 198,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/stability-assessment/index.ts": {
            "lines": 161,
            "tokens": 1023,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/siblings/SiblingRelativeAnalyzer.ts": {
            "lines": 426,
            "tokens": 3675,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 97,
            "percentage": 3.05,
            "percentageTokens": 2.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/region-scoped/types.ts": {
            "lines": 128,
            "tokens": 676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/region-scoped/index.ts": {
            "lines": 281,
            "tokens": 2140,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 31,
            "duplicatedTokens": 263,
            "percentage": 11.03,
            "percentageTokens": 12.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index-fallback/IndexFallbackAnalyzer.ts": {
            "lines": 246,
            "tokens": 1852,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/container/StableContainerRecognizer.ts": {
            "lines": 421,
            "tokens": 3146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/utils/validation.ts": {
            "lines": 34,
            "tokens": 333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/utils/file.ts": {
            "lines": 16,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/utils/dialog.ts": {
            "lines": 16,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/shared/industryOptions.ts": {
            "lines": 84,
            "tokens": 943,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/index.ts": {
            "lines": 5,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/VcfImportStrategyService.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/vcfBatchRegistrationService.ts": {
            "lines": 61,
            "tokens": 432,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/vcfActions.ts": {
            "lines": 43,
            "tokens": 500,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/unclassifiedService.ts": {
            "lines": 14,
            "tokens": 181,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/txtImportRecordService.ts": {
            "lines": 110,
            "tokens": 855,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/sourcePathsStorage.ts": {
            "lines": 30,
            "tokens": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/sessionImportService.ts": {
            "lines": 295,
            "tokens": 4236,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 872,
            "percentage": 18.31,
            "percentageTokens": 20.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/numberIdsService.ts": {
            "lines": 26,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/importRouter.ts": {
            "lines": 49,
            "tokens": 381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/exportService.ts": {
            "lines": 125,
            "tokens": 1988,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/deviceMetricsService.ts": {
            "lines": 21,
            "tokens": 198,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/deviceContactMetrics.ts": {
            "lines": 24,
            "tokens": 237,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 129,
            "percentage": 29.17,
            "percentageTokens": 54.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/deviceBatchBinding.ts": {
            "lines": 22,
            "tokens": 166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/contactNumberService.ts": {
            "lines": 371,
            "tokens": 4660,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 346,
            "percentage": 3.77,
            "percentageTokens": 7.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/services/batchExecutor.ts": {
            "lines": 113,
            "tokens": 1252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/providers/types.ts": {
            "lines": 52,
            "tokens": 506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/providers/index.ts": {
            "lines": 5,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useWorkbenchData.ts": {
            "lines": 131,
            "tokens": 1165,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 121,
            "percentage": 9.92,
            "percentageTokens": 10.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useWorkbenchActions.ts": {
            "lines": 348,
            "tokens": 3762,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useSourceFolders.ts": {
            "lines": 41,
            "tokens": 442,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useReasonGroups.ts": {
            "lines": 24,
            "tokens": 315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useLocalStorageState.ts": {
            "lines": 42,
            "tokens": 449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useExportOptions.ts": {
            "lines": 24,
            "tokens": 189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useDeviceOperations.ts": {
            "lines": 172,
            "tokens": 1593,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 282,
            "percentage": 13.95,
            "percentageTokens": 17.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/useContactImportState.ts": {
            "lines": 176,
            "tokens": 1647,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 121,
            "percentage": 7.39,
            "percentageTokens": 7.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/hooks/index.ts": {
            "lines": 8,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/strategy-labels.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/types.ts": {
            "lines": 15,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/index.ts": {
            "lines": 5,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/services/ImportStrategyExecutor.ts": {
            "lines": 354,
            "tokens": 2670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/services/ImportErrorHandler.ts": {
            "lines": 119,
            "tokens": 776,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/config/xiaomiStrategies.ts": {
            "lines": 39,
            "tokens": 279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/config/honorStrategies.ts": {
            "lines": 95,
            "tokens": 559,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/config/genericStrategies.ts": {
            "lines": 54,
            "tokens": 376,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/config/deviceBrands.ts": {
            "lines": 147,
            "tokens": 1026,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/domain/entities/index.ts": {
            "lines": 44,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/domain/entities/ImportConfiguration.ts": {
            "lines": 208,
            "tokens": 947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/domain/entities/Device.ts": {
            "lines": 179,
            "tokens": 800,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/domain/entities/Contact.ts": {
            "lines": 119,
            "tokens": 519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/types/DialogTypes.ts": {
            "lines": 120,
            "tokens": 658,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/services/ImportAutomationService.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/handlers/ParallelExecutor.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/handlers/ParallelClickHandler.ts": {
            "lines": 205,
            "tokens": 1584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/handlers/DialogClickHandler.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/engines/AutomationEngine.ts": {
            "lines": 291,
            "tokens": 2439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/detectors/VCardConfirmDetector.ts": {
            "lines": 155,
            "tokens": 1144,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 174,
            "percentage": 10.32,
            "percentageTokens": 15.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/detectors/DialogDetectorFactory.ts": {
            "lines": 89,
            "tokens": 614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/detectors/BaseDetector.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/detectors/AppSelectorDetector.ts": {
            "lines": 151,
            "tokens": 1122,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 174,
            "percentage": 10.6,
            "percentageTokens": 15.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/detectors/AppChooserDetector.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/usecases/ContactImporterUseCase.ts": {
            "lines": 594,
            "tokens": 4861,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 92,
            "percentage": 1.85,
            "percentageTokens": 1.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/types/ValidationTypes.ts": {
            "lines": 342,
            "tokens": 1569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/types/index.ts": {
            "lines": 93,
            "tokens": 471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/types/ImportResult.ts": {
            "lines": 172,
            "tokens": 743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/types/ImportProgress.ts": {
            "lines": 223,
            "tokens": 998,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/types/ImportEvent.ts": {
            "lines": 363,
            "tokens": 1634,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/types/FileTypes.ts": {
            "lines": 363,
            "tokens": 1661,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/repositories/index.ts": {
            "lines": 9,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/repositories/IDiagnosticRepository.ts": {
            "lines": 63,
            "tokens": 260,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 241,
            "percentage": 88.89,
            "percentageTokens": 92.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/repositories/IDeviceRepository.ts": {
            "lines": 58,
            "tokens": 280,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 51,
            "duplicatedTokens": 261,
            "percentage": 87.93,
            "percentageTokens": 93.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/repositories/IAdbRepository.ts": {
            "lines": 81,
            "tokens": 359,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 74,
            "duplicatedTokens": 340,
            "percentage": 91.36,
            "percentageTokens": 94.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/entities/index.ts": {
            "lines": 9,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/entities/DiagnosticResult.ts": {
            "lines": 205,
            "tokens": 1434,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 198,
            "duplicatedTokens": 1415,
            "percentage": 96.59,
            "percentageTokens": 98.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/entities/Device.ts": {
            "lines": 161,
            "tokens": 1101,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 154,
            "duplicatedTokens": 1082,
            "percentage": 95.65,
            "percentageTokens": 98.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/entities/AdbConnection.ts": {
            "lines": 115,
            "tokens": 731,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 108,
            "duplicatedTokens": 712,
            "percentage": 93.91,
            "percentageTokens": 97.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/usecases/index.ts": {
            "lines": 8,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/types/index.ts": {
            "lines": 8,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/services/index.ts": {
            "lines": 10,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/services/DiagnosticManagementService.ts": {
            "lines": 139,
            "tokens": 996,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/services/DeviceManagementService.ts": {
            "lines": 97,
            "tokens": 711,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 56,
            "duplicatedTokens": 449,
            "percentage": 57.73,
            "percentageTokens": 63.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/services/ConnectionManagementService.ts": {
            "lines": 107,
            "tokens": 744,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 135,
            "percentage": 17.76,
            "percentageTokens": 18.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/services/adb-application-service.ts": {
            "lines": 178,
            "tokens": 1336,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 232,
            "percentage": 15.17,
            "percentageTokens": 17.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/xpath-monitor/index.ts": {
            "lines": 14,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/VisualViewUtils.ts": {
            "lines": 138,
            "tokens": 1094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/utils.ts": {
            "lines": 212,
            "tokens": 2331,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 23,
            "duplicatedTokens": 319,
            "percentage": 10.85,
            "percentageTokens": 13.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/index.ts": {
            "lines": 28,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/utils.ts": {
            "lines": 124,
            "tokens": 1221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/types.ts": {
            "lines": 109,
            "tokens": 772,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/index.ts": {
            "lines": 29,
            "tokens": 208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/index.ts": {
            "lines": 5,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/list-view/utils.ts": {
            "lines": 260,
            "tokens": 2228,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 95,
            "percentage": 2.69,
            "percentageTokens": 4.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/list-view/index.ts": {
            "lines": 23,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/utils.ts": {
            "lines": 313,
            "tokens": 4931,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 68,
            "duplicatedTokens": 1141,
            "percentage": 21.73,
            "percentageTokens": 23.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/useGridHotkeys.ts": {
            "lines": 41,
            "tokens": 443,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/types.ts": {
            "lines": 33,
            "tokens": 268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/snapshotResolver.ts": {
            "lines": 104,
            "tokens": 1539,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 181,
            "percentage": 5.77,
            "percentageTokens": 11.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/prefs.ts": {
            "lines": 71,
            "tokens": 816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/matchingCache.ts": {
            "lines": 39,
            "tokens": 391,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/locatorAdvisor.ts": {
            "lines": 86,
            "tokens": 1319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/history.ts": {
            "lines": 63,
            "tokens": 948,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/fieldDocs.ts": {
            "lines": 47,
            "tokens": 717,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/exporters.ts": {
            "lines": 40,
            "tokens": 581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/cache-view/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/resizable/index.ts": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/shared/utils/sorting.ts": {
            "lines": 58,
            "tokens": 682,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/utils/stepNaming.ts": {
            "lines": 75,
            "tokens": 754,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/utils/reorder.ts": {
            "lines": 13,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/utils/flowHelpers.ts": {
            "lines": 17,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/services/flowTemplates.ts": {
            "lines": 77,
            "tokens": 1149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/hooks/useStepDragAndDrop.ts": {
            "lines": 41,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/hooks/useScriptValidation.ts": {
            "lines": 23,
            "tokens": 278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/hooks/useScriptBuilderState.ts": {
            "lines": 43,
            "tokens": 556,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/hooks/useLoopPairing.ts": {
            "lines": 66,
            "tokens": 917,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/hooks/useAutoStepName.ts": {
            "lines": 32,
            "tokens": 271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/utils/sortElements.ts": {
            "lines": 42,
            "tokens": 422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/types/index.ts": {
            "lines": 118,
            "tokens": 882,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 126,
            "percentage": 7.63,
            "percentageTokens": 14.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/hooks/usePageFinderModal.ts": {
            "lines": 432,
            "tokens": 3753,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 220,
            "percentage": 5.56,
            "percentageTokens": 5.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/index.ts": {
            "lines": 22,
            "tokens": 174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/services/stepXmlCacheLoader.ts": {
            "lines": 86,
            "tokens": 760,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/services/pickByAttributes.ts": {
            "lines": 34,
            "tokens": 482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/services/localStepLoader.ts": {
            "lines": 72,
            "tokens": 618,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/services/loadContext.ts": {
            "lines": 19,
            "tokens": 228,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/services/distributedStepLoader.ts": {
            "lines": 105,
            "tokens": 937,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/services/directXmlLoader.ts": {
            "lines": 98,
            "tokens": 797,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/hooks/usePageFinderState.ts": {
            "lines": 55,
            "tokens": 613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/hooks/usePageFinderSourceLoader.ts": {
            "lines": 73,
            "tokens": 746,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/hooks/usePageFinderSelection.ts": {
            "lines": 86,
            "tokens": 907,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/hooks/usePageFinderSearch.ts": {
            "lines": 52,
            "tokens": 603,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/hooks/usePageFinderCategories.ts": {
            "lines": 40,
            "tokens": 447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/utils/index.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/utils/dragConfigFactory.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/utils/DragBehaviorOptimizer.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/hooks/useDraggableGrid.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/utils/zIndexManager.ts": {
            "lines": 224,
            "tokens": 1664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/utils/UIElementAdapter.ts": {
            "lines": 112,
            "tokens": 1017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/utils/popoverPositioning.ts": {
            "lines": 569,
            "tokens": 5690,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/utils/performanceMonitor.ts": {
            "lines": 301,
            "tokens": 2427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/utils/advancedUserExperience.ts": {
            "lines": 291,
            "tokens": 2311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/strategy-analysis/index.ts": {
            "lines": 12,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/strategies/popoverCleanupStrategy.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/state/popoverStateSync.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/popover-management/index.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hooks/usePopoverManager.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hooks/usePopoverLifecycleManager.ts": {
            "lines": 184,
            "tokens": 1368,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hooks/useGlobalInteractionManager.ts": {
            "lines": 202,
            "tokens": 1595,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hierarchy/types.ts": {
            "lines": 86,
            "tokens": 453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hierarchy/ElementQualityScorer.ts": {
            "lines": 262,
            "tokens": 2190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hierarchy/ElementHierarchyAnalyzer.ts": {
            "lines": 570,
            "tokens": 5045,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 18,
            "duplicatedTokens": 245,
            "percentage": 3.16,
            "percentageTokens": 4.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hierarchy/ElementHierarchyAnalyzer.test.ts": {
            "lines": 179,
            "tokens": 1240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/hierarchy/ElementBoundsAnalyzer.ts": {
            "lines": 226,
            "tokens": 2076,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 13,
            "duplicatedTokens": 165,
            "percentage": 5.75,
            "percentageTokens": 7.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/useElementDiscovery.ts": {
            "lines": 711,
            "tokens": 6851,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 21,
            "duplicatedTokens": 292,
            "percentage": 2.95,
            "percentageTokens": 4.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/types.ts": {
            "lines": 82,
            "tokens": 681,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/index.ts": {
            "lines": 63,
            "tokens": 362,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/core/interactionManager.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/components/tokens.ts": {
            "lines": 16,
            "tokens": 112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/alternative-selection/AlternativeElementFinder.ts": {
            "lines": 318,
            "tokens": 2443,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/theme-advanced/index.ts": {
            "lines": 14,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/types/index.ts": {
            "lines": 260,
            "tokens": 1496,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/tokens/index.ts": {
            "lines": 384,
            "tokens": 2808,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/hooks/useThemeUtils.ts": {
            "lines": 240,
            "tokens": 2581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/hooks/useThemeManager.ts": {
            "lines": 310,
            "tokens": 2914,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/hooks/useSystemTheme.ts": {
            "lines": 191,
            "tokens": 1416,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/hooks/index.ts": {
            "lines": 14,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/components/index.ts": {
            "lines": 15,
            "tokens": 120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/types/index.ts": {
            "lines": 393,
            "tokens": 2316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/hooks/useStepManagement.ts": {
            "lines": 471,
            "tokens": 3989,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/hooks/useScriptExecution.ts": {
            "lines": 451,
            "tokens": 3876,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/hooks/useScriptBuilderState.ts": {
            "lines": 471,
            "tokens": 3911,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 218,
            "percentage": 6.79,
            "percentageTokens": 5.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/hooks/index.ts": {
            "lines": 26,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/index.ts": {
            "lines": 25,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/types/index.ts": {
            "lines": 259,
            "tokens": 1337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/hooks/usePageAnalyzerState.ts": {
            "lines": 226,
            "tokens": 1962,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/hooks/useElementTree.ts": {
            "lines": 203,
            "tokens": 1913,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 115,
            "percentage": 5.91,
            "percentageTokens": 6.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/index.ts": {
            "lines": 9,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/strategies/ImmediateUpdateStrategy.ts": {
            "lines": 47,
            "tokens": 360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/strategies/IDeviceUpdateStrategy.ts": {
            "lines": 53,
            "tokens": 184,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/strategies/DebounceUpdateStrategy.ts": {
            "lines": 124,
            "tokens": 1133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/logger/DeviceWatchingLogger.ts": {
            "lines": 134,
            "tokens": 1381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/cache/XPathPrecompilerCache.ts": {
            "lines": 103,
            "tokens": 779,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/cache/xpath-precompiler-cache.ts": {
            "lines": 388,
            "tokens": 2890,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 29,
            "duplicatedTokens": 466,
            "percentage": 7.47,
            "percentageTokens": 16.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/cache/XmlReuseManager.ts": {
            "lines": 420,
            "tokens": 3242,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 228,
            "percentage": 3.33,
            "percentageTokens": 7.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/cache/index.ts": {
            "lines": 180,
            "tokens": 1088,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/shared/constants/__tests__/events.test.ts": {
            "lines": 86,
            "tokens": 901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/utils/ElementEnhancer.ts": {
            "lines": 312,
            "tokens": 2859,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 109,
            "percentage": 1.92,
            "percentageTokens": 3.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/utils/CacheManager.ts": {
            "lines": 171,
            "tokens": 1295,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 204,
            "percentage": 7.02,
            "percentageTokens": 15.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/generators/VisualViewDataGenerator.ts": {
            "lines": 264,
            "tokens": 2335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/generators/TreeViewDataGenerator.ts": {
            "lines": 139,
            "tokens": 1158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/generators/ListViewDataGenerator.ts": {
            "lines": 216,
            "tokens": 1751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/components/index.ts": {
            "lines": 6,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/useWorkflowIntegrations.ts": {
            "lines": 114,
            "tokens": 1272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/useStepForm.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/useSmartScriptBuilder.ts": {
            "lines": 390,
            "tokens": 3748,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/useScriptPersistence.ts": {
            "lines": 172,
            "tokens": 1930,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/useIntelligentStepCardIntegration.ts": {
            "lines": 218,
            "tokens": 2012,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/xmlSnapshotHelper.ts": {
            "lines": 88,
            "tokens": 857,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/titleBuilder.ts": {
            "lines": 22,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/stepUtils.ts": {
            "lines": 90,
            "tokens": 883,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/normalizeSteps.ts": {
            "lines": 96,
            "tokens": 1252,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 459,
            "percentage": 32.29,
            "percentageTokens": 36.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/matchingHelpers.ts": {
            "lines": 186,
            "tokens": 1479,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/index.ts": {
            "lines": 20,
            "tokens": 182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/executeScript.ts": {
            "lines": 181,
            "tokens": 1612,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 96,
            "percentage": 6.08,
            "percentageTokens": 5.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/elementLocatorBuilder.ts": {
            "lines": 90,
            "tokens": 954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/contentDescSanitizer.ts": {
            "lines": 27,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/constants.ts": {
            "lines": 549,
            "tokens": 4237,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 319,
            "percentage": 7.65,
            "percentageTokens": 7.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/index.ts": {
            "lines": 10,
            "tokens": 134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/types/enhancedTypes.ts": {
            "lines": 133,
            "tokens": 969,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 51,
            "duplicatedTokens": 413,
            "percentage": 38.35,
            "percentageTokens": 42.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/services/timeFilterEnhancement.ts": {
            "lines": 161,
            "tokens": 1660,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 71,
            "duplicatedTokens": 989,
            "percentage": 44.1,
            "percentageTokens": 59.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/services/monitoringService.ts": {
            "lines": 458,
            "tokens": 4905,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 122,
            "duplicatedTokens": 1402,
            "percentage": 26.64,
            "percentageTokens": 28.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/utils/detailNormalize.ts": {
            "lines": 128,
            "tokens": 2309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/components/index.ts": {
            "lines": 6,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/index.ts": {
            "lines": 15,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/types/AppLaunchTestTypes.ts": {
            "lines": 68,
            "tokens": 505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/logUtils.ts": {
            "lines": 46,
            "tokens": 419,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/index.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/exporters.ts": {
            "lines": 28,
            "tokens": 408,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 180,
            "percentage": 35.71,
            "percentageTokens": 44.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/useAuthWizard.ts": {
            "lines": 144,
            "tokens": 2021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/types.ts": {
            "lines": 110,
            "tokens": 1021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/index.ts": {
            "lines": 24,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/vcf-sessions/services/vcf-session-service.ts": {
            "lines": 47,
            "tokens": 498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/utils/selection-hash.ts": {
            "lines": 189,
            "tokens": 1586,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 102,
            "percentage": 3.17,
            "percentageTokens": 6.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/types/unified-step-card-types.ts": {
            "lines": 352,
            "tokens": 3112,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 144,
            "percentage": 1.99,
            "percentageTokens": 4.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/types/intelligent-analysis-types.ts": {
            "lines": 293,
            "tokens": 1634,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/tests/StrategySystem.test.ts": {
            "lines": 266,
            "tokens": 2680,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/test/strategy-system-test.ts": {
            "lines": 149,
            "tokens": 955,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 219,
            "percentage": 14.77,
            "percentageTokens": 22.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/test/strategy-switching-test.ts": {
            "lines": 182,
            "tokens": 1391,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 116,
            "percentage": 6.04,
            "percentageTokens": 8.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/test/complete-workflow-test.ts": {
            "lines": 279,
            "tokens": 2228,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/styles/step-card-theme.ts": {
            "lines": 537,
            "tokens": 2657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/stores/inspectorStore.ts": {
            "lines": 778,
            "tokens": 6011,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 27,
            "duplicatedTokens": 273,
            "percentage": 3.47,
            "percentageTokens": 4.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/services/mock-analysis-backend.ts": {
            "lines": 388,
            "tokens": 3388,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/infrastructure/event-acknowledgment-service.ts": {
            "lines": 168,
            "tokens": 1358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/infrastructure/analysis-health-service.ts": {
            "lines": 192,
            "tokens": 1439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/useStepStrategy.ts": {
            "lines": 303,
            "tokens": 2441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/use-step-card-actions.ts": {
            "lines": 330,
            "tokens": 3096,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 144,
            "percentage": 2.12,
            "percentageTokens": 4.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/use-intelligent-analysis-workflow.ts": {
            "lines": 590,
            "tokens": 5477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/use-intelligent-analysis-real.ts": {
            "lines": 392,
            "tokens": 2711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/domain/fallback-strategy-generator.ts": {
            "lines": 326,
            "tokens": 2435,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 102,
            "percentage": 1.84,
            "percentageTokens": 4.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/adapters/step-card-adapter.ts": {
            "lines": 120,
            "tokens": 980,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/utils/serializer.ts": {
            "lines": 382,
            "tokens": 3186,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 204,
            "percentage": 7.85,
            "percentageTokens": 6.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/ui/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/types/index.ts": {
            "lines": 309,
            "tokens": 1844,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/stores/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/services/script-management-service.ts": {
            "lines": 334,
            "tokens": 2644,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/hooks/useScriptManager.ts": {
            "lines": 413,
            "tokens": 3611,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 62,
            "duplicatedTokens": 578,
            "percentage": 15.01,
            "percentageTokens": 16.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/domain/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/application/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/api/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/template-management/index.ts": {
            "lines": 18,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/index.ts": {
            "lines": 39,
            "tokens": 218,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/stores/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/services/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/reporting/index.ts": {
            "lines": 14,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/reporting/DailyReportGenerator.ts": {
            "lines": 980,
            "tokens": 9953,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-limit/index.ts": {
            "lines": 15,
            "tokens": 82,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-control/index.ts": {
            "lines": 19,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/hooks/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/domain/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/demo/PreciseAcquisitionDemo.ts": {
            "lines": 732,
            "tokens": 5756,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/demo/integration-test.ts": {
            "lines": 191,
            "tokens": 1574,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/demo/index.ts": {
            "lines": 88,
            "tokens": 140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/comment-collection/index.ts": {
            "lines": 45,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/candidate-pool/index.ts": {
            "lines": 11,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/audit-system/index.ts": {
            "lines": 22,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/audit/AuditLogManager.ts": {
            "lines": 618,
            "tokens": 5671,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 190,
            "percentage": 1.94,
            "percentageTokens": 3.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/application/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/api/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/utils/loopUtils.ts": {
            "lines": 243,
            "tokens": 2023,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/utils/LoopExecutionEngine.ts": {
            "lines": 308,
            "tokens": 2353,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/types/index.ts": {
            "lines": 194,
            "tokens": 1035,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/hooks/useLoopControl.ts": {
            "lines": 306,
            "tokens": 2637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/validation/OfflineValidationSystem.ts": {
            "lines": 559,
            "tokens": 4684,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 17,
            "duplicatedTokens": 248,
            "percentage": 3.04,
            "percentageTokens": 5.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/utils/EngineFactory.ts": {
            "lines": 46,
            "tokens": 260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/types/StrategyTypes.ts": {
            "lines": 415,
            "tokens": 2211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/types/StrategyPlanTypes.ts": {
            "lines": 305,
            "tokens": 1420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/types/index.ts": {
            "lines": 50,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/types/DecisionTypes.ts": {
            "lines": 180,
            "tokens": 882,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/types/AnalysisTypes.ts": {
            "lines": 537,
            "tokens": 2608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/tests/integration.test.ts": {
            "lines": 319,
            "tokens": 2414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/shared/index.ts": {
            "lines": 42,
            "tokens": 281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/UniquenessValidator.ts": {
            "lines": 634,
            "tokens": 4637,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 113,
            "percentage": 3.15,
            "percentageTokens": 2.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/StrategyScorer.ts": {
            "lines": 574,
            "tokens": 4670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/StabilityAssessment.ts": {
            "lines": 58,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/ScoreWeightConfig.ts": {
            "lines": 387,
            "tokens": 2790,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 36,
            "duplicatedTokens": 262,
            "percentage": 9.3,
            "percentageTokens": 9.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/PerformanceMetrics.ts": {
            "lines": 552,
            "tokens": 4581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/scoring/index.ts": {
            "lines": 225,
            "tokens": 1746,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/plan/StrategyPlanFactory.ts": {
            "lines": 390,
            "tokens": 3212,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 127,
            "percentage": 2.56,
            "percentageTokens": 3.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/plan/index.ts": {
            "lines": 49,
            "tokens": 166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/optimization/RegionLimitedSearchOptimizer.ts": {
            "lines": 643,
            "tokens": 5712,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 36,
            "duplicatedTokens": 404,
            "percentage": 5.6,
            "percentageTokens": 7.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/i18n/index.ts": {
            "lines": 68,
            "tokens": 342,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/i18n/ElementTextDictionary.ts": {
            "lines": 265,
            "tokens": 2041,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/fallback/ControlledFallbackMechanism.ts": {
            "lines": 545,
            "tokens": 4258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/engines/EnhancedStrategyDecisionEngine.ts": {
            "lines": 422,
            "tokens": 3096,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/core/StrategyDecisionEngine.ts": {
            "lines": 708,
            "tokens": 5516,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 102,
            "percentage": 0.85,
            "percentageTokens": 1.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/core/ElementContextAnalyzer.ts": {
            "lines": 663,
            "tokens": 6158,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 28,
            "duplicatedTokens": 360,
            "percentage": 4.22,
            "percentageTokens": 5.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/core/ElementAnalyzer.ts": {
            "lines": 383,
            "tokens": 2907,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/core/ConfidenceCalculator.ts": {
            "lines": 452,
            "tokens": 3774,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/SelfAnchorAnalyzer.ts": {
            "lines": 410,
            "tokens": 3036,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/RegionScopedAnalyzer.ts": {
            "lines": 987,
            "tokens": 8598,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 124,
            "duplicatedTokens": 1063,
            "percentage": 12.56,
            "percentageTokens": 12.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/ParentClickableAnalyzer.ts": {
            "lines": 719,
            "tokens": 5940,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 285,
            "percentage": 4.31,
            "percentageTokens": 4.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/NeighborRelativeAnalyzer.ts": {
            "lines": 184,
            "tokens": 1470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/index.ts": {
            "lines": 105,
            "tokens": 853,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/ChildAnchorAnalyzer.ts": {
            "lines": 551,
            "tokens": 4630,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/analyzers/BaseAnalyzer.ts": {
            "lines": 288,
            "tokens": 2103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-matching/integration/EnhancedMatchingHelper.ts": {
            "lines": 444,
            "tokens": 3812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-matching/analyzer/HierarchyAnalyzer.ts": {
            "lines": 309,
            "tokens": 2716,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/drag-sort/utils/dragUtils.ts": {
            "lines": 208,
            "tokens": 1944,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/drag-sort/types/index.ts": {
            "lines": 171,
            "tokens": 954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/drag-sort/hooks/useDragSort.ts": {
            "lines": 228,
            "tokens": 2050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/types/index.ts": {
            "lines": 540,
            "tokens": 3090,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/services/index.ts": {
            "lines": 34,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/services/dedup-safety-check-service.ts": {
            "lines": 526,
            "tokens": 4077,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/services/dedup-rate-limit-service.ts": {
            "lines": 508,
            "tokens": 4428,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 42,
            "duplicatedTokens": 382,
            "percentage": 8.27,
            "percentageTokens": 8.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/services/dedup-deduplication-service.ts": {
            "lines": 515,
            "tokens": 4129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/services/dedup-circuit-breaker-service.ts": {
            "lines": 563,
            "tokens": 3811,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/hooks/useSafetyControl.ts": {
            "lines": 415,
            "tokens": 3938,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 28,
            "duplicatedTokens": 412,
            "percentage": 6.75,
            "percentageTokens": 10.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/hooks/index.ts": {
            "lines": 8,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/index.ts": {
            "lines": 11,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/__tests__/sessionImportService.spec.ts": {
            "lines": 110,
            "tokens": 1444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/utils/vcf.ts": {
            "lines": 20,
            "tokens": 152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/utils/filename.ts": {
            "lines": 51,
            "tokens": 700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/utils/exportTypes.ts": {
            "lines": 13,
            "tokens": 142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/utils/csv.ts": {
            "lines": 61,
            "tokens": 1015,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 42,
            "duplicatedTokens": 616,
            "percentage": 68.85,
            "percentageTokens": 60.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/utils/assignmentValidation.ts": {
            "lines": 41,
            "tokens": 612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/constants.ts": {
            "lines": 31,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/types/index.ts": {
            "lines": 272,
            "tokens": 1933,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/strategies/contact-strategy-import.ts": {
            "lines": 472,
            "tokens": 3875,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 152,
            "duplicatedTokens": 1188,
            "percentage": 32.2,
            "percentageTokens": 30.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/stores/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/services/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/parsers/VcfParser.ts": {
            "lines": 435,
            "tokens": 3478,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/parsers/IContactParser.ts": {
            "lines": 227,
            "tokens": 1539,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/types.ts": {
            "lines": 92,
            "tokens": 601,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/strategies.ts": {
            "lines": 89,
            "tokens": 807,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/index.ts": {
            "lines": 30,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/hooks/useUnifiedContactImport.ts": {
            "lines": 328,
            "tokens": 2884,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 182,
            "percentage": 5.49,
            "percentageTokens": 6.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/hooks/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/domain/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/devices/IDeviceManager.ts": {
            "lines": 395,
            "tokens": 3208,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 385,
            "percentage": 11.9,
            "percentageTokens": 12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/types.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/permissionDialogHook.ts": {
            "lines": 21,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/index.ts": {
            "lines": 59,
            "tokens": 377,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/automation/automationBridge.ts": {
            "lines": 25,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/api/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/adapters/UnifiedAdbDeviceManager.ts": {
            "lines": 315,
            "tokens": 2697,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 385,
            "percentage": 14.92,
            "percentageTokens": 14.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-automation/utils/vcfGenerator.ts": {
            "lines": 119,
            "tokens": 1060,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 92,
            "percentage": 9.24,
            "percentageTokens": 8.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-automation/utils/contactImporter.ts": {
            "lines": 157,
            "tokens": 1087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-automation/types/index.ts": {
            "lines": 88,
            "tokens": 608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-automation/templates/contactWorkflowTemplates.ts": {
            "lines": 208,
            "tokens": 2028,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/ui/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/stores/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/services/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/hooks/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/index.ts": {
            "lines": 8,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/index.ts": {
            "lines": 10,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/api/index.ts": {
            "lines": 5,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/smart-script/repositories/ISmartScriptRepository.ts": {
            "lines": 42,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/precise-acquisition/entities/WatchTarget.ts": {
            "lines": 344,
            "tokens": 2815,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/precise-acquisition/entities/Task.ts": {
            "lines": 538,
            "tokens": 4279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/precise-acquisition/entities/index.ts": {
            "lines": 42,
            "tokens": 396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/precise-acquisition/entities/Comment.ts": {
            "lines": 409,
            "tokens": 3463,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 238,
            "percentage": 6.85,
            "percentageTokens": 6.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/precise-acquisition/entities/AuditLog.ts": {
            "lines": 435,
            "tokens": 3268,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 79,
            "percentage": 1.38,
            "percentageTokens": 2.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/utils/index.ts": {
            "lines": 33,
            "tokens": 309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/services/PageAnalysisDomainService.ts": {
            "lines": 509,
            "tokens": 4367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/repositories/IUiMatcherRepository.ts": {
            "lines": 44,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/repositories/IPageAnalysisRepository.ts": {
            "lines": 111,
            "tokens": 619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/entities/UIElement.ts": {
            "lines": 286,
            "tokens": 2770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/entities/PageInfo.ts": {
            "lines": 119,
            "tokens": 972,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/entities/PageAnalysis.ts": {
            "lines": 258,
            "tokens": 2186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/marketing/services/CandidateCsvValidator.ts": {
            "lines": 141,
            "tokens": 1834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/marketing/repositories/IWatchTargetRepository.ts": {
            "lines": 11,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/marketing/repositories/ITagWhitelistRepository.ts": {
            "lines": 8,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/marketing/entities/WatchTarget.ts": {
            "lines": 22,
            "tokens": 207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/marketing/entities/TagWhitelist.ts": {
            "lines": 37,
            "tokens": 349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/inspector/utils/xpath.ts": {
            "lines": 32,
            "tokens": 303,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 131,
            "percentage": 28.13,
            "percentageTokens": 43.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/inspector/services/ILocatorService.ts": {
            "lines": 8,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/inspector/repositories/IStepRepository.ts": {
            "lines": 10,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/inspector/repositories/ISessionRepository.ts": {
            "lines": 10,
            "tokens": 95,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/inspector/entities/Step.ts": {
            "lines": 17,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/inspector/entities/NodeLocator.ts": {
            "lines": 17,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/inspector/entities/AnalysisSession.ts": {
            "lines": 16,
            "tokens": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/distributed-script/services/DistributedScriptManager.ts": {
            "lines": 200,
            "tokens": 1636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/distributed-script/entities/DistributedStep.ts": {
            "lines": 37,
            "tokens": 268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/distributed-script/entities/DistributedScript.ts": {
            "lines": 41,
            "tokens": 285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/device/repositories/IDeviceMetricsRepository.ts": {
            "lines": 6,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/contact-import/dialog-automation/types.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/contact-import/dialog-automation/ParallelClickProcessor.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/contact-import/dialog-automation/index.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/contact-import/dialog-automation/DialogDetector.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/contact-automation/repositories/IContactAutomationRepository.ts": {
            "lines": 34,
            "tokens": 259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/services/DeviceManagerService.ts": {
            "lines": 261,
            "tokens": 2154,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 69,
            "duplicatedTokens": 470,
            "percentage": 26.44,
            "percentageTokens": 21.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/services/ConnectionService.ts": {
            "lines": 371,
            "tokens": 2715,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 59,
            "duplicatedTokens": 424,
            "percentage": 15.9,
            "percentageTokens": 15.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/services/adb-diagnostic-service.ts": {
            "lines": 320,
            "tokens": 2511,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 230,
            "percentage": 10,
            "percentageTokens": 9.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/repositories/IDiagnosticRepository.ts": {
            "lines": 60,
            "tokens": 252,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 241,
            "percentage": 93.33,
            "percentageTokens": 95.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/repositories/IDeviceRepository.ts": {
            "lines": 55,
            "tokens": 272,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 51,
            "duplicatedTokens": 261,
            "percentage": 92.73,
            "percentageTokens": 95.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/repositories/IAdbRepository.ts": {
            "lines": 78,
            "tokens": 351,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 74,
            "duplicatedTokens": 340,
            "percentage": 94.87,
            "percentageTokens": 96.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/events/DomainEvents.ts": {
            "lines": 112,
            "tokens": 716,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/entities/DiagnosticResult.ts": {
            "lines": 202,
            "tokens": 1426,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 198,
            "duplicatedTokens": 1415,
            "percentage": 98.02,
            "percentageTokens": 99.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/entities/Device.ts": {
            "lines": 158,
            "tokens": 1093,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 154,
            "duplicatedTokens": 1082,
            "percentage": 97.47,
            "percentageTokens": 98.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/entities/AdbConnection.ts": {
            "lines": 112,
            "tokens": 723,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 108,
            "duplicatedTokens": 712,
            "percentage": 96.43,
            "percentageTokens": 98.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/__tests__/imageCache.test.ts": {
            "lines": 30,
            "tokens": 236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/__tests__/fileUrl.test.ts": {
            "lines": 30,
            "tokens": 287,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/utils/imageCache.ts": {
            "lines": 94,
            "tokens": 995,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/utils/fileUrl.ts": {
            "lines": 40,
            "tokens": 248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/xml-parser/XmlParser.ts": {
            "lines": 250,
            "tokens": 1862,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/xml-parser/types.ts": {
            "lines": 97,
            "tokens": 679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/xml-parser/index.ts": {
            "lines": 34,
            "tokens": 267,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/xml-parser/ElementCategorizer.ts": {
            "lines": 253,
            "tokens": 2317,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 139,
            "percentage": 3.95,
            "percentageTokens": 6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/xml-parser/cleanXml.ts": {
            "lines": 25,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/xml-parser/BoundsParser.ts": {
            "lines": 101,
            "tokens": 915,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 17,
            "duplicatedTokens": 193,
            "percentage": 16.83,
            "percentageTokens": 21.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/xml-parser/AppPageAnalyzer.ts": {
            "lines": 225,
            "tokens": 1662,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 106,
            "percentage": 5.78,
            "percentageTokens": 6.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/utils/bounds.ts": {
            "lines": 36,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/types/index.ts": {
            "lines": 263,
            "tokens": 1685,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 82,
            "percentage": 2.28,
            "percentageTokens": 4.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/useTableColumns.ts": {
            "lines": 265,
            "tokens": 2753,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 176,
            "percentage": 5.28,
            "percentageTokens": 6.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/index.ts": {
            "lines": 25,
            "tokens": 128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/strategy-selector/types.ts": {
            "lines": 137,
            "tokens": 911,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/strategy-selector/index.ts": {
            "lines": 32,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/types.ts": {
            "lines": 42,
            "tokens": 289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/index.ts": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/index.ts": {
            "lines": 16,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/types.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/templates.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/index.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/enhanced-element-creation/index.ts": {
            "lines": 9,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/enhanced-element-creation/EnhancedElementCreator.ts": {
            "lines": 500,
            "tokens": 4730,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/useEnhancedElementSelectionManager.ts": {
            "lines": 251,
            "tokens": 2196,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 467,
            "percentage": 17.53,
            "percentageTokens": 21.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/useElementSelectionManager.ts": {
            "lines": 286,
            "tokens": 2382,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 141,
            "duplicatedTokens": 1383,
            "percentage": 49.3,
            "percentageTokens": 58.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/index.ts": {
            "lines": 91,
            "tokens": 593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/types.ts": {
            "lines": 8,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/storage.ts": {
            "lines": 38,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/InteractivePointerSensor.ts": {
            "lines": 54,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/data-transform/VisualToUIElementConverter.ts": {
            "lines": 240,
            "tokens": 1867,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/data-transform/UIElementToVisualConverter.ts": {
            "lines": 59,
            "tokens": 492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/data-transform/types.ts": {
            "lines": 51,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/data-transform/index.ts": {
            "lines": 26,
            "tokens": 191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/data-transform/ElementContextCreator.ts": {
            "lines": 317,
            "tokens": 2729,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 79,
            "duplicatedTokens": 719,
            "percentage": 24.92,
            "percentageTokens": 26.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/common-popover/index.ts": {
            "lines": 5,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/analyzer/UniversalElementAnalyzer.ts": {
            "lines": 242,
            "tokens": 2296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/analyzer/types.ts": {
            "lines": 103,
            "tokens": 738,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 70,
            "duplicatedTokens": 489,
            "percentage": 67.96,
            "percentageTokens": 66.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/analyzer/index.ts": {
            "lines": 19,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/analyzer/GenericPatternAnalyzer.ts": {
            "lines": 154,
            "tokens": 1329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/analyzer/ElementAnalysisUtils.ts": {
            "lines": 311,
            "tokens": 2686,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 58,
            "duplicatedTokens": 450,
            "percentage": 18.65,
            "percentageTokens": 16.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/analyzer/AppSpecificMappings.ts": {
            "lines": 123,
            "tokens": 1467,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 71,
            "duplicatedTokens": 1089,
            "percentage": 57.72,
            "percentageTokens": 74.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/analyzer/AppSpecificAnalyzer.ts": {
            "lines": 123,
            "tokens": 1110,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 39,
            "duplicatedTokens": 592,
            "percentage": 31.71,
            "percentageTokens": 53.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlay/types.ts": {
            "lines": 15,
            "tokens": 117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlay/index.ts": {
            "lines": 7,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlay/helpers.ts": {
            "lines": 41,
            "tokens": 390,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/motion/tokens.ts": {
            "lines": 158,
            "tokens": 1125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/motion/presets.ts": {
            "lines": 296,
            "tokens": 2366,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/motion/index.ts": {
            "lines": 16,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layouts/index.ts": {
            "lines": 17,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/forms/index.ts": {
            "lines": 18,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/feedback/index.ts": {
            "lines": 14,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/design-tokens/typography.ts": {
            "lines": 235,
            "tokens": 1693,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/design-tokens/spacing.ts": {
            "lines": 179,
            "tokens": 1465,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/design-tokens/colors.ts": {
            "lines": 147,
            "tokens": 1135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/index.ts": {
            "lines": 36,
            "tokens": 244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/tap-actions/tapTemplates.ts": {
            "lines": 53,
            "tokens": 652,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 76,
            "percentage": 13.21,
            "percentageTokens": 11.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/tap-actions/index.ts": {
            "lines": 5,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/system-actions/systemKeyTemplates.ts": {
            "lines": 59,
            "tokens": 578,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 76,
            "percentage": 11.86,
            "percentageTokens": 13.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/system-actions/index.ts": {
            "lines": 5,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/screenTemplates.ts": {
            "lines": 152,
            "tokens": 1478,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 204,
            "percentage": 17.11,
            "percentageTokens": 13.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/index.ts": {
            "lines": 7,
            "tokens": 72,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/element-binding/types.ts": {
            "lines": 35,
            "tokens": 278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/element-binding/helpers.ts": {
            "lines": 104,
            "tokens": 1346,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 181,
            "percentage": 5.77,
            "percentageTokens": 13.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/services/flowPersistence.ts": {
            "lines": 36,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/services/flowExecutionService.ts": {
            "lines": 30,
            "tokens": 325,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/hooks/useFlowBuilder.ts": {
            "lines": 137,
            "tokens": 1447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/index.ts": {
            "lines": 62,
            "tokens": 315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/index.ts": {
            "lines": 25,
            "tokens": 109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/index.ts": {
            "lines": 22,
            "tokens": 104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/index.ts": {
            "lines": 48,
            "tokens": 296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/uiTokens.ts": {
            "lines": 56,
            "tokens": 393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/index.ts": {
            "lines": 7,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/logic/score.ts": {
            "lines": 22,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/logic/constraints.ts": {
            "lines": 34,
            "tokens": 613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/hooks/usePrecisionAnalysis.ts": {
            "lines": 67,
            "tokens": 792,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/hooks/useElementNameEditorState.ts": {
            "lines": 105,
            "tokens": 1105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/hooks/useDisplayNameSuggestions.ts": {
            "lines": 19,
            "tokens": 253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/adapters/toUniversalElement.ts": {
            "lines": 7,
            "tokens": 24,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/styles/stepTypeStyles.ts": {
            "lines": 116,
            "tokens": 920,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/registry/types.ts": {
            "lines": 30,
            "tokens": 263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/hooks/usePrefersReducedMotion.ts": {
            "lines": 25,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/hooks/useCardDraggingStyle.ts": {
            "lines": 44,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/hooks/useBoundNode.ts": {
            "lines": 66,
            "tokens": 848,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/constants/actionConfigs.ts": {
            "lines": 31,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/task-execution/UnifiedTaskEngine.ts": {
            "lines": 442,
            "tokens": 2848,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 130,
            "percentage": 4.3,
            "percentageTokens": 4.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/task-execution/TaskScheduler.ts": {
            "lines": 781,
            "tokens": 6535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/task-execution/TaskExecutionEngine.ts": {
            "lines": 742,
            "tokens": 5948,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 130,
            "percentage": 2.56,
            "percentageTokens": 2.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/task-execution/index.ts": {
            "lines": 139,
            "tokens": 820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/shared/SharedInterfaces.ts": {
            "lines": 834,
            "tokens": 5946,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/shared/ErrorHandlingSystem.ts": {
            "lines": 640,
            "tokens": 4537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/shared/DependencyContainer.ts": {
            "lines": 785,
            "tokens": 6951,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/shared/ConfigurationManager.ts": {
            "lines": 719,
            "tokens": 5175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/shared/CommonUtils.ts": {
            "lines": 739,
            "tokens": 6937,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 72,
            "duplicatedTokens": 886,
            "percentage": 9.74,
            "percentageTokens": 12.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/reporting/UnifiedDailyReportService.ts": {
            "lines": 558,
            "tokens": 4882,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 458,
            "percentage": 7.53,
            "percentageTokens": 9.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/reporting/index.ts": {
            "lines": 516,
            "tokens": 4092,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 116,
            "percentage": 2.71,
            "percentageTokens": 2.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/reporting/DailyReportingAndAuditService.ts": {
            "lines": 94,
            "tokens": 694,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/rate-control/RateControlApplicationService.ts": {
            "lines": 638,
            "tokens": 4983,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/rate-control/RateControlAndDeduplicationSystem.ts": {
            "lines": 944,
            "tokens": 8418,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 180,
            "percentage": 1.27,
            "percentageTokens": 2.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/rate-control/index.ts": {
            "lines": 343,
            "tokens": 2841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/query/adb-query-service.ts": {
            "lines": 175,
            "tokens": 1374,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/WatchTargetService.ts": {
            "lines": 111,
            "tokens": 1197,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 344,
            "percentage": 27.93,
            "percentageTokens": 28.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/TaskQueueService.ts": {
            "lines": 159,
            "tokens": 1553,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 128,
            "percentage": 6.29,
            "percentageTokens": 8.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/SystemDemo.ts": {
            "lines": 306,
            "tokens": 2261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/ServiceRegistry.ts": {
            "lines": 592,
            "tokens": 4367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/prospecting-rate-limit-service.ts": {
            "lines": 160,
            "tokens": 1728,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/PreciseAcquisitionSystem.ts": {
            "lines": 485,
            "tokens": 3816,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 234,
            "percentage": 3.3,
            "percentageTokens": 6.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/index.ts": {
            "lines": 10,
            "tokens": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/DeduplicationService.ts": {
            "lines": 96,
            "tokens": 788,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/ComplianceService.ts": {
            "lines": 56,
            "tokens": 448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/CommentService.ts": {
            "lines": 53,
            "tokens": 549,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 128,
            "percentage": 18.87,
            "percentageTokens": 23.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/AuditTrailService.ts": {
            "lines": 25,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/logging/adb-log-bridge-service.ts": {
            "lines": 285,
            "tokens": 2075,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/health/adb-health-service.ts": {
            "lines": 187,
            "tokens": 1311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/UnifiedDeviceDiagnosticCenter.ts": {
            "lines": 237,
            "tokens": 1950,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/ProductionConfigManager.ts": {
            "lines": 187,
            "tokens": 1476,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/index.ts": {
            "lines": 12,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device-watching/DeviceWatchingService.ts": {
            "lines": 274,
            "tokens": 1904,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 186,
            "percentage": 7.3,
            "percentageTokens": 9.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/device/DeviceMetricsApplicationService.ts": {
            "lines": 21,
            "tokens": 206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/contact-import/VcfImportApplicationService.ts": {
            "lines": 65,
            "tokens": 884,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 330,
            "percentage": 30.77,
            "percentageTokens": 37.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/contact-import/ContactImportApplicationService.ts": {
            "lines": 64,
            "tokens": 717,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 190,
            "percentage": 15.63,
            "percentageTokens": 26.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/common/StoreOperations.ts": {
            "lines": 183,
            "tokens": 1296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/common/index.ts": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/common/ErrorHandler.ts": {
            "lines": 172,
            "tokens": 1566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/comment-collection/UnifiedCommentAdapter.ts": {
            "lines": 258,
            "tokens": 1486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/comment-collection/PublicWhitelistAdapter.ts": {
            "lines": 908,
            "tokens": 7492,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 26,
            "duplicatedTokens": 285,
            "percentage": 2.86,
            "percentageTokens": 3.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/comment-collection/OceanEngineCommentAdapter.ts": {
            "lines": 595,
            "tokens": 4583,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 74,
            "duplicatedTokens": 637,
            "percentage": 12.44,
            "percentageTokens": 13.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/comment-collection/index.ts": {
            "lines": 201,
            "tokens": 1412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/comment-collection/EnhancedCommentAdapterManager.ts": {
            "lines": 766,
            "tokens": 6323,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 281,
            "duplicatedTokens": 2400,
            "percentage": 36.68,
            "percentageTokens": 37.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/comment-collection/DouyinCommentAdapter.ts": {
            "lines": 566,
            "tokens": 4228,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 300,
            "percentage": 6.71,
            "percentageTokens": 7.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/comment-collection/CommentAdapterManager.ts": {
            "lines": 570,
            "tokens": 4777,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 281,
            "duplicatedTokens": 2400,
            "percentage": 49.3,
            "percentageTokens": 50.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universal-ui/commands/registry.ts": {
            "lines": 53,
            "tokens": 593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universal-ui/adapters/normalize.ts": {
            "lines": 16,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/event-flow-contracts/progress-completion-contract.test.ts": {
            "lines": 418,
            "tokens": 3971,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/event-flow-contracts/job-isolation-contract.test.ts": {
            "lines": 311,
            "tokens": 2877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/event-flow-contracts/e2e-integration-contract.test.ts": {
            "lines": 455,
            "tokens": 4094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/XPathService.ts": {
            "lines": 112,
            "tokens": 651,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/xpath-service.ts": {
            "lines": 520,
            "tokens": 3451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/validation.ts": {
            "lines": 149,
            "tokens": 1135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/types.ts": {
            "lines": 43,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/parsing.ts": {
            "lines": 198,
            "tokens": 1624,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/index.ts": {
            "lines": 25,
            "tokens": 126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/generation.ts": {
            "lines": 187,
            "tokens": 1531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/cache.ts": {
            "lines": 345,
            "tokens": 2810,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/encoding/safeBase64.ts": {
            "lines": 115,
            "tokens": 1302,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 102,
            "percentage": 5.22,
            "percentageTokens": 7.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/self-contained/xmlSnapshot.ts": {
            "lines": 58,
            "tokens": 502,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/self-contained/parameters.ts": {
            "lines": 98,
            "tokens": 1168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/self-contained/elementLocator.ts": {
            "lines": 22,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/matching/index.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/shared/types/unified-enums.ts": {
            "lines": 190,
            "tokens": 1504,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 212,
            "duplicatedTokens": 1704,
            "percentage": 111.58,
            "percentageTokens": 113.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/shared/types/index.ts": {
            "lines": 56,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/shared/hooks/useMonitoring.ts": {
            "lines": 212,
            "tokens": 2178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/shared/constants/events.ts": {
            "lines": 153,
            "tokens": 780,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/shared/bounds/BoundsCalculator.ts": {
            "lines": 179,
            "tokens": 1367,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 40,
            "duplicatedTokens": 444,
            "percentage": 22.35,
            "percentageTokens": 32.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/unified-view-manager.ts": {
            "lines": 207,
            "tokens": 1645,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/types.ts": {
            "lines": 169,
            "tokens": 1148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data/index.ts": {
            "lines": 21,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ui-showcase/index.ts": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/index.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/index.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/types.ts": {
            "lines": 57,
            "tokens": 506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/index.ts": {
            "lines": 6,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation/index.ts": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/index.ts": {
            "lines": 4,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/index.ts": {
            "lines": 27,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/types.ts": {
            "lines": 37,
            "tokens": 330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/xml-inspector/index.ts": {
            "lines": 8,
            "tokens": 31,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/xml-enhancement/XmlEnhancementService.ts": {
            "lines": 200,
            "tokens": 1770,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 92,
            "percentage": 2.5,
            "percentageTokens": 5.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/xml-enhancement/index.ts": {
            "lines": 8,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/index.ts": {
            "lines": 117,
            "tokens": 752,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/index-core.ts": {
            "lines": 40,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/snapshot-recovery/SnapshotRecoveryTypes.ts": {
            "lines": 13,
            "tokens": 89,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/index.ts": {
            "lines": 30,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/self-contained/XmlSnapshotHealth.ts": {
            "lines": 71,
            "tokens": 673,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/self-contained/XmlSnapshotAutoBuilder.ts": {
            "lines": 37,
            "tokens": 353,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 139,
            "percentage": 29.73,
            "percentageTokens": 39.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/self-contained/StepParamSelfContained.ts": {
            "lines": 103,
            "tokens": 1220,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 139,
            "percentage": 10.68,
            "percentageTokens": 11.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/script-builder/index.ts": {
            "lines": 14,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/prospecting-acquisition-service.ts": {
            "lines": 138,
            "tokens": 874,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/index.ts": {
            "lines": 51,
            "tokens": 274,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/parent-xml-enhancement/ParentXmlEnhancementService.ts": {
            "lines": 354,
            "tokens": 2929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/parent-node-extractor/ParentNodeExtractor.ts": {
            "lines": 247,
            "tokens": 1745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/parent-node-enhancement-tests/index.ts": {
            "lines": 388,
            "tokens": 2869,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/parent-backend-compatibility/ParentBackendCompatibilityHandler.ts": {
            "lines": 277,
            "tokens": 2268,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 21,
            "duplicatedTokens": 304,
            "percentage": 7.58,
            "percentageTokens": 13.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-drag-integration/index.ts": {
            "lines": 7,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/index.ts": {
            "lines": 17,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/index.ts": {
            "lines": 167,
            "tokens": 967,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/grid-inspector/DefaultMatchingBuilder.ts": {
            "lines": 290,
            "tokens": 2486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-xml-parser/EnhancedXmlParser.ts": {
            "lines": 231,
            "tokens": 2131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-step-card/index.ts": {
            "lines": 9,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-matching/types.ts": {
            "lines": 71,
            "tokens": 472,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-matching/index.ts": {
            "lines": 140,
            "tokens": 913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-element-info/types.ts": {
            "lines": 152,
            "tokens": 970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-element-info/index.ts": {
            "lines": 9,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-element-info/EnhancedElementInfoService.ts": {
            "lines": 359,
            "tokens": 3383,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 104,
            "percentage": 3.06,
            "percentageTokens": 3.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/drag-sort/index.ts": {
            "lines": 16,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/distributed-script-quality/XmlDataValidator.ts": {
            "lines": 398,
            "tokens": 3859,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/distributed-script-quality/index.ts": {
            "lines": 154,
            "tokens": 1070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/distributed-script-quality/DistributedScriptRecoveryService.ts": {
            "lines": 524,
            "tokens": 4320,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/index.ts": {
            "lines": 29,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/index.ts": {
            "lines": 197,
            "tokens": 1075,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-automation/index.ts": {
            "lines": 19,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/child-node-extractor/index.ts": {
            "lines": 8,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/child-node-extractor/ChildNodeExtractor.ts": {
            "lines": 174,
            "tokens": 1403,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 92,
            "percentage": 2.87,
            "percentageTokens": 6.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/child-node-extraction-tests/index.ts": {
            "lines": 206,
            "tokens": 1383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/backend-xml-enhancement/XmlBackendEnhancer.ts": {
            "lines": 153,
            "tokens": 1307,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 92,
            "percentage": 3.27,
            "percentageTokens": 7.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/backend-xml-enhancement/index.ts": {
            "lines": 8,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/index.ts": {
            "lines": 31,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriWatchTargetRepository.ts": {
            "lines": 84,
            "tokens": 1020,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriUiMatcherRepository.ts": {
            "lines": 134,
            "tokens": 1160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriPageAnalysisRepository.ts": {
            "lines": 210,
            "tokens": 2111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriDiagnosticRepository.ts": {
            "lines": 304,
            "tokens": 2272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriDeviceRepository.ts": {
            "lines": 193,
            "tokens": 1857,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriDeviceMetricsRepository.ts": {
            "lines": 21,
            "tokens": 242,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 129,
            "percentage": 33.33,
            "percentageTokens": 53.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriContactAutomationRepository.ts": {
            "lines": 31,
            "tokens": 281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/TauriAdbRepository.ts": {
            "lines": 185,
            "tokens": 1722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/StaticTagWhitelistRepository.ts": {
            "lines": 12,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/script-tauri-repository.ts": {
            "lines": 97,
            "tokens": 830,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 178,
            "percentage": 20.62,
            "percentageTokens": 21.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/RealTimeDeviceRepository.ts": {
            "lines": 271,
            "tokens": 2230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/PageAnalysisRepositoryFactory.ts": {
            "lines": 52,
            "tokens": 272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/repositories/InMemoryWatchTargetRepository.ts": {
            "lines": 30,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/inspector/LocatorService.ts": {
            "lines": 53,
            "tokens": 784,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/inspector/LocalStepRepository.ts": {
            "lines": 41,
            "tokens": 403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/inspector/LocalSessionRepository.ts": {
            "lines": 44,
            "tokens": 435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/__tests__/use-intelligent-analysis-workflow.test.ts": {
            "lines": 213,
            "tokens": 2175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/universal-ui/useStrategyAnalysis.ts": {
            "lines": 319,
            "tokens": 3273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/universal-ui/useIntelligentAnalysisAdapter.ts": {
            "lines": 254,
            "tokens": 2144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/xpathDirectExecution.ts": {
            "lines": 158,
            "tokens": 1225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/utils.ts": {
            "lines": 217,
            "tokens": 3378,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 459,
            "percentage": 14.29,
            "percentageTokens": 13.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/types.ts": {
            "lines": 12,
            "tokens": 84,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/strategyTest.ts": {
            "lines": 276,
            "tokens": 3604,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/singleAction.ts": {
            "lines": 26,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/multiDevice.ts": {
            "lines": 90,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/frontendLoop.ts": {
            "lines": 63,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/singleStepTest/backendLoop.ts": {
            "lines": 72,
            "tokens": 820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/page-analysis/index.ts": {
            "lines": 17,
            "tokens": 76,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/distributed-script/index.ts": {
            "lines": 6,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/domain/adb/index.ts": {
            "lines": 18,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/VisualElementInteractionManager.ts": {
            "lines": 230,
            "tokens": 1917,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 97,
            "duplicatedTokens": 916,
            "percentage": 42.17,
            "percentageTokens": 47.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/UniversalElementAnalyzer.ts": {
            "lines": 850,
            "tokens": 8884,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 238,
            "duplicatedTokens": 2620,
            "percentage": 28,
            "percentageTokens": 29.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/UniversalElementAnalyzer.refactored.ts": {
            "lines": 13,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/utils.ts": {
            "lines": 126,
            "tokens": 556,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/index.ts": {
            "lines": 145,
            "tokens": 751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/task/index.ts": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/strategy-selector/types.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-cards/modern-step-card-styles.ts": {
            "lines": 284,
            "tokens": 1739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/testResultUtils.ts": {
            "lines": 67,
            "tokens": 562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/index.ts": {
            "lines": 18,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/index.ts": {
            "lines": 22,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-navigation-finder/index.ts": {
            "lines": 6,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-element-finder/SharedTypes.ts": {
            "lines": 69,
            "tokens": 635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-element-finder/index.ts": {
            "lines": 9,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart/index.ts": {
            "lines": 10,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/index.ts": {
            "lines": 38,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/index.ts": {
            "lines": 190,
            "tokens": 314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/native-dashboard/index.ts": {
            "lines": 8,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard/types.ts": {
            "lines": 39,
            "tokens": 318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/loop-control/index.ts": {
            "lines": 6,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/index.ts": {
            "lines": 8,
            "tokens": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/index.ts": {
            "lines": 11,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/index.ts": {
            "lines": 18,
            "tokens": 82,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/index.ts": {
            "lines": 18,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementSourceFinder.ts": {
            "lines": 275,
            "tokens": 2435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/toUniversalElement.ts": {
            "lines": 29,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/index.ts": {
            "lines": 9,
            "tokens": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/ElementDataAdapter.ts": {
            "lines": 192,
            "tokens": 2023,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/AndroidXMLFieldAnalyzer.ts": {
            "lines": 331,
            "tokens": 2705,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-discovery-test/index.ts": {
            "lines": 8,
            "tokens": 31,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/constants.ts": {
            "lines": 11,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/index.ts": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/index.ts": {
            "lines": 10,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/index.ts": {
            "lines": 6,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/business/index.ts": {
            "lines": 14,
            "tokens": 111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/index.ts": {
            "lines": 7,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/index.ts": {
            "lines": 7,
            "tokens": 48,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adb-xml-inspector/utils.ts": {
            "lines": 216,
            "tokens": 1825,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 37,
            "duplicatedTokens": 380,
            "percentage": 17.13,
            "percentageTokens": 20.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adb-xml-inspector/types.ts": {
            "lines": 55,
            "tokens": 322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adb-xml-inspector/index.ts": {
            "lines": 10,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adb-diagnostic/index.ts": {
            "lines": 10,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/index.ts": {
            "lines": 213,
            "tokens": 1095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/store/smartAdbCache.ts": {
            "lines": 223,
            "tokens": 1630,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/store/adbStore.ts": {
            "lines": 283,
            "tokens": 2711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/UnifiedTypeAdapter.ts": {
            "lines": 363,
            "tokens": 3015,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 106,
            "percentage": 1.65,
            "percentageTokens": 3.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/TypeAdapter.ts": {
            "lines": 251,
            "tokens": 1846,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/SimplifiedPreciseAcquisitionService.ts": {
            "lines": 370,
            "tokens": 2551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/SimplifiedCsvValidationService.ts": {
            "lines": 521,
            "tokens": 4144,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 416,
            "duplicatedTokens": 3445,
            "percentage": 79.85,
            "percentageTokens": 83.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/ServiceFactory.ts": {
            "lines": 252,
            "tokens": 2202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/ScrcpyApplicationService.ts": {
            "lines": 53,
            "tokens": 486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/prospecting-acquisition-service.ts": {
            "lines": 599,
            "tokens": 4668,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 47,
            "duplicatedTokens": 496,
            "percentage": 7.85,
            "percentageTokens": 10.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/PreciseAcquisitionServiceFacade.v2.ts": {
            "lines": 591,
            "tokens": 5034,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 54,
            "duplicatedTokens": 658,
            "percentage": 9.14,
            "percentageTokens": 13.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/PreciseAcquisitionServiceFacade.ts": {
            "lines": 214,
            "tokens": 1640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/PreciseAcquisitionApplicationService.ts": {
            "lines": 727,
            "tokens": 6168,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 75,
            "duplicatedTokens": 832,
            "percentage": 10.32,
            "percentageTokens": 13.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/MarketingApplicationService.ts": {
            "lines": 79,
            "tokens": 1066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/InspectorApplicationService.ts": {
            "lines": 86,
            "tokens": 1105,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 113,
            "percentage": 10.47,
            "percentageTokens": 10.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/index.ts": {
            "lines": 11,
            "tokens": 72,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/DistributedStepLookupService.ts": {
            "lines": 234,
            "tokens": 1875,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/DistributedInspectorService.ts": {
            "lines": 182,
            "tokens": 1398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 113,
            "percentage": 4.95,
            "percentageTokens": 8.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/adb-application-service.ts": {
            "lines": 596,
            "tokens": 4351,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 102,
            "duplicatedTokens": 816,
            "percentage": 17.11,
            "percentageTokens": 18.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/page-analysis/usePageAnalysis.ts": {
            "lines": 315,
            "tokens": 2591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/page-analysis/PageAnalysisStore.ts": {
            "lines": 351,
            "tokens": 3193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/page-analysis/PageAnalysisApplicationService.ts": {
            "lines": 285,
            "tokens": 2125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/page-analysis/index.ts": {
            "lines": 11,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/hooks/useUnifiedDailyReport.ts": {
            "lines": 252,
            "tokens": 1772,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/hooks/useScrcpySessions.ts": {
            "lines": 48,
            "tokens": 633,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/hooks/useRealTimeDevices.ts": {
            "lines": 220,
            "tokens": 1575,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/hooks/useDefaultDeviceId.ts": {
            "lines": 69,
            "tokens": 666,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/hooks/useAdb.ts": {
            "lines": 595,
            "tokens": 4004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/hooks/index.ts": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/analysis/devTracer.ts": {
            "lines": 89,
            "tokens": 803,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 67,
            "percentage": 5.62,
            "percentageTokens": 8.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universal-ui/UniversalUIUtils.ts": {
            "lines": 196,
            "tokens": 1703,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universal-ui/UniversalUIService.ts": {
            "lines": 133,
            "tokens": 967,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universal-ui/UniversalUIAPI.ts": {
            "lines": 214,
            "tokens": 1987,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 84,
            "percentage": 2.8,
            "percentageTokens": 4.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universal-ui/types.ts": {
            "lines": 162,
            "tokens": 1126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universal-ui/index.ts": {
            "lines": 22,
            "tokens": 106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/core/tauriInvoke.ts": {
            "lines": 84,
            "tokens": 728,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/__tests__/backend-progress-contract.test.ts": {
            "lines": 199,
            "tokens": 2039,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/typeAdapters.ts": {
            "lines": 54,
            "tokens": 449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/toDisplayableImageSrc.ts": {
            "lines": 34,
            "tokens": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/script-bundle-manager.ts": {
            "lines": 235,
            "tokens": 1895,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/lazyRetry.ts": {
            "lines": 28,
            "tokens": 247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/environment.ts": {
            "lines": 111,
            "tokens": 1039,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/debugUtils.ts": {
            "lines": 68,
            "tokens": 642,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/debug.ts": {
            "lines": 40,
            "tokens": 470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/contact-import-debugger.ts": {
            "lines": 285,
            "tokens": 2485,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/cn.ts": {
            "lines": 23,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/unified-view/index.ts": {
            "lines": 101,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/xml-cache.ts": {
            "lines": 174,
            "tokens": 1114,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/strategySelector.ts": {
            "lines": 79,
            "tokens": 646,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/StepType.ts": {
            "lines": 18,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/step-bundle.ts": {
            "lines": 53,
            "tokens": 583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/smartScript.ts": {
            "lines": 47,
            "tokens": 368,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 202,
            "percentage": 53.19,
            "percentageTokens": 54.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/smartComponents.ts": {
            "lines": 150,
            "tokens": 1108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/selfContainedScript.ts": {
            "lines": 15,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/precise-acquisition.ts": {
            "lines": 697,
            "tokens": 4325,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/navigation.ts": {
            "lines": 78,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/loopScript.ts": {
            "lines": 96,
            "tokens": 671,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/legacy-panel-sync-shims.d.ts": {
            "lines": 6,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/intelligent-step-analysis.ts": {
            "lines": 7,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/index.ts": {
            "lines": 22,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/hierarchy.ts": {
            "lines": 224,
            "tokens": 1136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/global-css.d.ts": {
            "lines": 8,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/execution.ts": {
            "lines": 24,
            "tokens": 171,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 106,
            "percentage": 58.33,
            "percentageTokens": 61.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/employee-types.ts": {
            "lines": 105,
            "tokens": 750,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/customMatching.ts": {
            "lines": 271,
            "tokens": 1558,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 116,
            "percentage": 6.27,
            "percentageTokens": 7.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/cssmodule.d.ts": {
            "lines": 17,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/contact-types.ts": {
            "lines": 166,
            "tokens": 1107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/confirm-channel.ts": {
            "lines": 110,
            "tokens": 308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/Auth.ts": {
            "lines": 123,
            "tokens": 798,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/tokens.ts": {
            "lines": 68,
            "tokens": 618,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/index.ts": {
            "lines": 5,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/smart-step-generator-test.ts": {
            "lines": 113,
            "tokens": 776,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/matching-system-tester.ts": {
            "lines": 288,
            "tokens": 2132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/hierarchy-test.ts": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/stores/ui-element-selection-store.ts": {
            "lines": 406,
            "tokens": 3275,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 200,
            "percentage": 5.91,
            "percentageTokens": 6.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/stores/staticStrategies.ts": {
            "lines": 53,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/shared/index.ts": {
            "lines": 32,
            "tokens": 139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/xml-page-cache-service.ts": {
            "lines": 622,
            "tokens": 5952,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/xml-enhanced-cache-service.ts": {
            "lines": 405,
            "tokens": 3440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/xml-cache-manager.ts": {
            "lines": 325,
            "tokens": 2780,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/xml-analysis-service.ts": {
            "lines": 358,
            "tokens": 3122,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 196,
            "percentage": 5.59,
            "percentageTokens": 6.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/validation-csv-import-service.ts": {
            "lines": 651,
            "tokens": 4947,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 416,
            "duplicatedTokens": 3445,
            "percentage": 63.9,
            "percentageTokens": 69.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/unified-view-data-manager.ts": {
            "lines": 13,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/ui-filter-adapter.ts": {
            "lines": 152,
            "tokens": 1004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/ui-element-filter.ts": {
            "lines": 283,
            "tokens": 2085,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/strategy-intelligent-service.ts": {
            "lines": 328,
            "tokens": 2150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/smart-app-service.ts": {
            "lines": 331,
            "tokens": 2881,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/matching-integration.ts": {
            "lines": 378,
            "tokens": 3297,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 398,
            "percentage": 9.52,
            "percentageTokens": 12.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/matching-custom-engine.ts": {
            "lines": 549,
            "tokens": 4624,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 314,
            "percentage": 6.56,
            "percentageTokens": 6.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/matching-batch-engine.ts": {
            "lines": 726,
            "tokens": 6082,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 63,
            "duplicatedTokens": 552,
            "percentage": 8.68,
            "percentageTokens": 9.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/intelligent-analysis-backend.ts": {
            "lines": 310,
            "tokens": 2726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/employee-auth-service.ts": {
            "lines": 75,
            "tokens": 619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/deprecated-element-field-analyzer.ts": {
            "lines": 556,
            "tokens": 4138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/contact-vcf-import-service.ts": {
            "lines": 237,
            "tokens": 1898,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 242,
            "percentage": 7.59,
            "percentageTokens": 12.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/contact-ldplayer-vcf-service.ts": {
            "lines": 174,
            "tokens": 1161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/backend-health-check.ts": {
            "lines": 150,
            "tokens": 1156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/automation-duplication-guard.ts": {
            "lines": 39,
            "tokens": 377,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/adb-precision-strategy.ts": {
            "lines": 420,
            "tokens": 3546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/providers/index.ts": {
            "lines": 4,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/index.ts": {
            "lines": 38,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/SmartStepGenerator.ts": {
            "lines": 270,
            "tokens": 2389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/ElementNameMapper.ts": {
            "lines": 693,
            "tokens": 5854,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 232,
            "percentage": 4.33,
            "percentageTokens": 3.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/migrations/step-schema-v2.ts": {
            "lines": 175,
            "tokens": 1299,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/utils.ts": {
            "lines": 70,
            "tokens": 590,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/step-bundle.ts": {
            "lines": 216,
            "tokens": 2089,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/RealTimeDeviceTracker.ts": {
            "lines": 408,
            "tokens": 3101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/infrastructure/EventManager.ts": {
            "lines": 97,
            "tokens": 726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useUnifiedView.ts": {
            "lines": 433,
            "tokens": 3892,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTaskManagement.ts": {
            "lines": 299,
            "tokens": 2487,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 48,
            "duplicatedTokens": 414,
            "percentage": 16.05,
            "percentageTokens": 16.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useStepCardReanalysis.ts": {
            "lines": 343,
            "tokens": 3211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useStepCardCommonFixed.ts": {
            "lines": 183,
            "tokens": 1488,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 70,
            "duplicatedTokens": 527,
            "percentage": 38.25,
            "percentageTokens": 35.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useStepCardCommon.ts": {
            "lines": 177,
            "tokens": 1398,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 70,
            "duplicatedTokens": 527,
            "percentage": 39.55,
            "percentageTokens": 37.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useSmartStrategyAnalysis.ts": {
            "lines": 381,
            "tokens": 3489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useSingleStepTest.ts": {
            "lines": 282,
            "tokens": 3046,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePreciseAcquisition.ts": {
            "lines": 534,
            "tokens": 4967,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 141,
            "percentage": 2.81,
            "percentageTokens": 2.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePermissions.ts": {
            "lines": 111,
            "tokens": 680,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useMessage.ts": {
            "lines": 32,
            "tokens": 178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useLogManager.ts": {
            "lines": 166,
            "tokens": 1577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useIntersectionObserver.ts": {
            "lines": 113,
            "tokens": 845,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useCsvImport.ts": {
            "lines": 347,
            "tokens": 3221,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 201,
            "percentage": 4.32,
            "percentageTokens": 6.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useContacts.ts": {
            "lines": 329,
            "tokens": 3032,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useBalance.ts": {
            "lines": 77,
            "tokens": 621,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAuth.ts": {
            "lines": 194,
            "tokens": 1695,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/index.ts": {
            "lines": 14,
            "tokens": 134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/ElementFilterUsageExamples.ts": {
            "lines": 229,
            "tokens": 1609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/constants/precise-acquisition-whitelist.ts": {
            "lines": 385,
            "tokens": 3041,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/constants/precise-acquisition-enums.ts": {
            "lines": 761,
            "tokens": 6395,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 147,
            "duplicatedTokens": 1251,
            "percentage": 19.32,
            "percentageTokens": 19.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/constants/platforms.ts": {
            "lines": 55,
            "tokens": 398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/constants/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/intelligentAnalysisConfig.ts": {
            "lines": 213,
            "tokens": 1358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/featureFlags.ts": {
            "lines": 30,
            "tokens": 244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/developmentMode.ts": {
            "lines": 193,
            "tokens": 2087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/auth.ts": {
            "lines": 98,
            "tokens": 616,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/index.ts": {
            "lines": 37,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/task-engine.ts": {
            "lines": 4,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/inspectorStore.ts": {
            "lines": 24,
            "tokens": 318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/index.ts": {
            "lines": 8,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/universalUIAPI.ts": {
            "lines": 13,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/taskAPI.ts": {
            "lines": 159,
            "tokens": 1221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/index.ts": {
            "lines": 17,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/employeeAPI.ts": {
            "lines": 61,
            "tokens": 477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/deviceAPI.ts": {
            "lines": 61,
            "tokens": 496,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/ContactAPI.ts": {
            "lines": 438,
            "tokens": 3076,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/env.d.ts": {
            "lines": 19,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 186216,
          "tokens": 1532144,
          "sources": 1115,
          "clones": 271,
          "duplicatedLines": 4704,
          "duplicatedTokens": 44525,
          "percentage": 2.53,
          "percentageTokens": 2.91,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "src/modules/contact-import/ui/components/grid-layout/components/toolbar-actions/EnhancedSettingsMenu.tsx": {
            "lines": 161,
            "tokens": 1285,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 182,
            "percentage": 8.7,
            "percentageTokens": 14.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/strategy-configurator/EnhancedStrategyConfigurator.tsx": {
            "lines": 128,
            "tokens": 976,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/enhanced-field-selector/FieldDescriptionPanel.tsx": {
            "lines": 256,
            "tokens": 2130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/enhanced-field-selector/AdvancedFieldSelector.tsx": {
            "lines": 308,
            "tokens": 2600,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/element-presets/ElementPresetsRow.tsx": {
            "lines": 43,
            "tokens": 433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/components/HiddenElementParentPreset.tsx": {
            "lines": 276,
            "tokens": 2331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/logic/ConfirmBulkDeleteDialog.tsx": {
            "lines": 63,
            "tokens": 644,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 90,
            "duplicatedTokens": 1031,
            "percentage": 142.86,
            "percentageTokens": 160.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/logic/confirmBulkDelete.tsx": {
            "lines": 63,
            "tokens": 644,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 54,
            "duplicatedTokens": 567,
            "percentage": 85.71,
            "percentageTokens": 88.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/hooks/useTxtImportRecords.tsx": {
            "lines": 68,
            "tokens": 717,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 111,
            "percentage": 8.82,
            "percentageTokens": 15.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/hooks/useTxtImportActions.tsx": {
            "lines": 96,
            "tokens": 997,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 34,
            "duplicatedTokens": 328,
            "percentage": 35.42,
            "percentageTokens": 32.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/components/RecordsTable.tsx": {
            "lines": 255,
            "tokens": 2727,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 91,
            "percentage": 3.14,
            "percentageTokens": 3.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/components/RecordActions.tsx": {
            "lines": 60,
            "tokens": 630,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/components/ErrorDetailModal.tsx": {
            "lines": 106,
            "tokens": 1078,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/SmartLayoutToolbarFinal.tsx": {
            "lines": 45,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/ScrollableContainer.tsx": {
            "lines": 121,
            "tokens": 960,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/PerformantDraggableToolbar.tsx": {
            "lines": 238,
            "tokens": 2050,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 187,
            "duplicatedTokens": 1800,
            "percentage": 78.57,
            "percentageTokens": 87.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/LayoutVersionManager.tsx": {
            "lines": 299,
            "tokens": 2893,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/LayoutControlToolbar.tsx": {
            "lines": 263,
            "tokens": 2071,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 98,
            "duplicatedTokens": 947,
            "percentage": 37.26,
            "percentageTokens": 45.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/HeaderOnlyDragToolbar.tsx": {
            "lines": 165,
            "tokens": 1362,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 379,
            "percentage": 26.67,
            "percentageTokens": 27.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/HeaderDragPanel.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/HeaderDragGuide.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/HandleDraggableToolbar.tsx": {
            "lines": 290,
            "tokens": 2411,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 118,
            "duplicatedTokens": 1177,
            "percentage": 40.69,
            "percentageTokens": 48.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/GridDragPanel.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/FloatingLayoutToolbar.tsx": {
            "lines": 389,
            "tokens": 3177,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 98,
            "duplicatedTokens": 947,
            "percentage": 25.19,
            "percentageTokens": 29.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/EnhancedResizablePanel.tsx": {
            "lines": 167,
            "tokens": 1339,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 140,
            "duplicatedTokens": 1058,
            "percentage": 83.83,
            "percentageTokens": 79.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/EnhancedDraggableToolbar.tsx": {
            "lines": 231,
            "tokens": 1853,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 71,
            "duplicatedTokens": 716,
            "percentage": 30.74,
            "percentageTokens": 38.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/DragStatusPanel.tsx": {
            "lines": 257,
            "tokens": 2112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/DragHandle.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/DraggableHeaderPanel.tsx": {
            "lines": 190,
            "tokens": 1486,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 89,
            "duplicatedTokens": 637,
            "percentage": 46.84,
            "percentageTokens": 42.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/DragDiagnosticPanel.tsx": {
            "lines": 328,
            "tokens": 2441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/DeviceSpecificImportDialog.tsx": {
            "lines": 355,
            "tokens": 2890,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 586,
            "percentage": 18.03,
            "percentageTokens": 20.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-columns/SessionsTableColumns.tsx": {
            "lines": 347,
            "tokens": 3130,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 194,
            "percentage": 2.88,
            "percentageTokens": 6.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/TimeFormatterCell.tsx": {
            "lines": 103,
            "tokens": 807,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/ThemeAwareCell.tsx": {
            "lines": 184,
            "tokens": 1093,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/LatestImportTimeCell.tsx": {
            "lines": 102,
            "tokens": 1128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/IndustryTagCell.tsx": {
            "lines": 224,
            "tokens": 2042,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/BatchIdCell.tsx": {
            "lines": 134,
            "tokens": 845,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/resizable-table/ResizableTable.tsx": {
            "lines": 288,
            "tokens": 2152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/enhanced-import/UniversalImportButton.tsx": {
            "lines": 122,
            "tokens": 759,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/enhanced-import/EnhancedSessionImportButton.tsx": {
            "lines": 133,
            "tokens": 1096,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/bulk-actions/BulkArchiveDialog.tsx": {
            "lines": 167,
            "tokens": 1453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/bulk-actions/BulkActionsBar.tsx": {
            "lines": 171,
            "tokens": 1417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/hooks/canonical/useParsedVisualElementsCanonical.tsx": {
            "lines": 107,
            "tokens": 1195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/TextMatchingQuickActions.tsx": {
            "lines": 164,
            "tokens": 1322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/StrategyScoreCard.tsx": {
            "lines": 396,
            "tokens": 3348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/StrategyScoreBadge.tsx": {
            "lines": 87,
            "tokens": 550,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/StrategyRecommendationPanel.tsx": {
            "lines": 604,
            "tokens": 4382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/StrategyConfigurator.tsx": {
            "lines": 224,
            "tokens": 2926,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SetAsStepElementButton.tsx": {
            "lines": 334,
            "tokens": 2879,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 258,
            "percentage": 4.79,
            "percentageTokens": 8.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsTable.tsx": {
            "lines": 114,
            "tokens": 1274,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsPreview.tsx": {
            "lines": 39,
            "tokens": 325,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsEditor.tsx": {
            "lines": 65,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsChips.tsx": {
            "lines": 42,
            "tokens": 372,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/ScoringUIDemo.tsx": {
            "lines": 580,
            "tokens": 4688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/PositiveConditionsEditor.tsx": {
            "lines": 67,
            "tokens": 848,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 17,
            "duplicatedTokens": 291,
            "percentage": 25.37,
            "percentageTokens": 34.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/NegativeConditionsEditor.tsx": {
            "lines": 80,
            "tokens": 883,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 17,
            "duplicatedTokens": 291,
            "percentage": 21.25,
            "percentageTokens": 32.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/MatchPresetsRow.tsx": {
            "lines": 60,
            "tokens": 727,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/InteractiveScoringPanel.tsx": {
            "lines": 568,
            "tokens": 4303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/EnhancedMatchPresetsRow.tsx": {
            "lines": 285,
            "tokens": 2544,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/step-editor/components/TapParameters.tsx": {
            "lines": 291,
            "tokens": 2127,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 72,
            "duplicatedTokens": 515,
            "percentage": 24.74,
            "percentageTokens": 24.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/step-editor/components/BasicConfig.tsx": {
            "lines": 183,
            "tokens": 1387,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 275,
            "percentage": 17.49,
            "percentageTokens": 19.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/ThemeControlSection.tsx": {
            "lines": 38,
            "tokens": 275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/ParametersRenderSection.tsx": {
            "lines": 104,
            "tokens": 914,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/FormBasicSection.tsx": {
            "lines": 55,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/ActionButtonsSection.tsx": {
            "lines": 48,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/semi-auto/SemiAutoExecutionDrawer.tsx": {
            "lines": 402,
            "tokens": 3200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/components/TaskStatusCard.tsx": {
            "lines": 60,
            "tokens": 428,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/components/TaskExecutionCenter.tsx": {
            "lines": 498,
            "tokens": 4169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/components/SystemMetrics.tsx": {
            "lines": 86,
            "tokens": 750,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/components/DeviceStatusCard.tsx": {
            "lines": 80,
            "tokens": 619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/components/TaskList.tsx": {
            "lines": 317,
            "tokens": 2945,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 80,
            "percentage": 2.21,
            "percentageTokens": 2.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/components/ReplyTaskManager.tsx": {
            "lines": 407,
            "tokens": 3307,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 155,
            "percentage": 5.9,
            "percentageTokens": 4.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/components/MonitoringConfigPanel.tsx": {
            "lines": 459,
            "tokens": 3807,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 100,
            "percentage": 2.4,
            "percentageTokens": 2.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/account-monitoring/components/AccountMonitoringConfigPanel.tsx": {
            "lines": 637,
            "tokens": 5231,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 422,
            "percentage": 6.91,
            "percentageTokens": 8.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/account-monitoring/components/AccountMonitoringConfig.tsx": {
            "lines": 492,
            "tokens": 3763,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 100,
            "percentage": 2.24,
            "percentageTokens": 2.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/components/SelectedSessionsToolbar.tsx": {
            "lines": 87,
            "tokens": 691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/TxtImportRecordsModal.tsx": {
            "lines": 153,
            "tokens": 1207,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 153,
            "percentage": 13.73,
            "percentageTokens": 12.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/result/ViewStatsBar.tsx": {
            "lines": 40,
            "tokens": 458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/result/FailReasonChips.tsx": {
            "lines": 69,
            "tokens": 828,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/TxtImportPanel.tsx": {
            "lines": 117,
            "tokens": 973,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/ResizableDraggablePanel.tsx": {
            "lines": 214,
            "tokens": 2146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/NumberPoolPanel.tsx": {
            "lines": 225,
            "tokens": 1818,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 330,
            "percentage": 20.44,
            "percentageTokens": 18.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/LayoutManager.tsx": {
            "lines": 141,
            "tokens": 1038,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/DeviceAssignmentPanel.tsx": {
            "lines": 125,
            "tokens": 1260,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 174,
            "percentage": 8,
            "percentageTokens": 13.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/NumberPoolFieldRenderers.tsx": {
            "lines": 165,
            "tokens": 1773,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/ColumnConfigPanel.tsx": {
            "lines": 68,
            "tokens": 645,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/SmartGridLayout.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/ResizablePanel.tsx": {
            "lines": 109,
            "tokens": 757,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 284,
            "percentage": 34.86,
            "percentageTokens": 37.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/GridLayoutWrapperFixed.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/GridLayoutWrapperEnhanced.tsx": {
            "lines": 249,
            "tokens": 2350,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 153,
            "duplicatedTokens": 1634,
            "percentage": 61.45,
            "percentageTokens": 69.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/GridLayoutWrapper.tsx": {
            "lines": 265,
            "tokens": 2530,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 153,
            "duplicatedTokens": 1634,
            "percentage": 57.74,
            "percentageTokens": 64.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/GridDragProvider.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/EventHijackingFix.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/ContactImportWorkbenchEnhanced.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportSettingsButton.tsx": {
            "lines": 105,
            "tokens": 997,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportPreviewModal.tsx": {
            "lines": 71,
            "tokens": 908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportHeaderMapModal.tsx": {
            "lines": 58,
            "tokens": 722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportFilenameTemplateModal.tsx": {
            "lines": 44,
            "tokens": 544,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportColumnVisibilityModal.tsx": {
            "lines": 67,
            "tokens": 753,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportColumnOrderModal.tsx": {
            "lines": 57,
            "tokens": 713,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/drag-drop-layout/DragDropGrid.tsx": {
            "lines": 369,
            "tokens": 3050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/Toolbar.tsx": {
            "lines": 55,
            "tokens": 599,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/DeviceCard.tsx": {
            "lines": 268,
            "tokens": 3614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/DeviceAssignmentGrid.tsx": {
            "lines": 273,
            "tokens": 4085,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 136,
            "percentage": 2.56,
            "percentageTokens": 3.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/columns/ColumnSettingsModal.tsx": {
            "lines": 201,
            "tokens": 2562,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 94,
            "percentage": 3.48,
            "percentageTokens": 3.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/columns/ColumnSettingsDropdown.tsx": {
            "lines": 81,
            "tokens": 1100,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 94,
            "percentage": 8.64,
            "percentageTokens": 8.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/SessionsTable.tsx": {
            "lines": 172,
            "tokens": 1789,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 99,
            "percentage": 5.81,
            "percentageTokens": 5.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/NumbersTable.tsx": {
            "lines": 374,
            "tokens": 5085,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 58,
            "duplicatedTokens": 771,
            "percentage": 15.51,
            "percentageTokens": 15.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/FiltersBar.tsx": {
            "lines": 126,
            "tokens": 1365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/ActionsBar.tsx": {
            "lines": 160,
            "tokens": 2203,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 106,
            "duplicatedTokens": 1488,
            "percentage": 66.25,
            "percentageTokens": 67.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/components/PagePreview.tsx": {
            "lines": 450,
            "tokens": 4981,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/components/LeftControlPanel.tsx": {
            "lines": 328,
            "tokens": 5080,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 316,
            "percentage": 3.05,
            "percentageTokens": 6.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/components/ElementList.tsx": {
            "lines": 93,
            "tokens": 1266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/TreeToolbar.tsx": {
            "lines": 172,
            "tokens": 1482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/TreeStatsPanel.tsx": {
            "lines": 254,
            "tokens": 2112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/TreeNode.tsx": {
            "lines": 211,
            "tokens": 1697,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/QualityBadge.tsx": {
            "lines": 144,
            "tokens": 1143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/XPathTemplatesPanel.tsx": {
            "lines": 63,
            "tokens": 1208,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 148,
            "percentage": 11.11,
            "percentageTokens": 12.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/XPathHelpPanel.tsx": {
            "lines": 34,
            "tokens": 427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/XmlSourcePanel.tsx": {
            "lines": 41,
            "tokens": 413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/ScreenPreviewPanel.tsx": {
            "lines": 69,
            "tokens": 538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/ResultsAndXPathPanel.tsx": {
            "lines": 128,
            "tokens": 1263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/PreferencesPanel.tsx": {
            "lines": 34,
            "tokens": 468,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/LocatorAdvisorPanel.tsx": {
            "lines": 50,
            "tokens": 714,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 148,
            "percentage": 14,
            "percentageTokens": 20.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/FieldDocPanel.tsx": {
            "lines": 32,
            "tokens": 395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/BreadcrumbPanel.tsx": {
            "lines": 25,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/TreeView.tsx": {
            "lines": 102,
            "tokens": 784,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 102,
            "percentage": 9.8,
            "percentageTokens": 13.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/Toolbar.tsx": {
            "lines": 194,
            "tokens": 1484,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 428,
            "percentage": 22.68,
            "percentageTokens": 28.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/PanelsContainer.tsx": {
            "lines": 158,
            "tokens": 1222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/MainLayout.tsx": {
            "lines": 161,
            "tokens": 1141,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 102,
            "percentage": 6.21,
            "percentageTokens": 8.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/EnhancedChildElementListModal.tsx": {
            "lines": 316,
            "tokens": 2958,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/EnhancedChildElementCard.tsx": {
            "lines": 223,
            "tokens": 2082,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/ChildElementSelectorModal.tsx": {
            "lines": 347,
            "tokens": 3143,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 93,
            "percentage": 1.44,
            "percentageTokens": 2.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/ChildElementListModal.tsx": {
            "lines": 344,
            "tokens": 3398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/ChildElementCard.tsx": {
            "lines": 215,
            "tokens": 1860,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 93,
            "percentage": 2.33,
            "percentageTokens": 5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ActionsToolbar/ActionsToolbar.tsx": {
            "lines": 85,
            "tokens": 616,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/components/InteractiveTreeNode.tsx": {
            "lines": 279,
            "tokens": 2370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/strategy/StrategyControlsBlock.tsx": {
            "lines": 18,
            "tokens": 172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/strategy/BatchMatchBlock.tsx": {
            "lines": 25,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/step-form/useStepFormModular.tsx": {
            "lines": 143,
            "tokens": 1165,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 91,
            "percentage": 3.5,
            "percentageTokens": 7.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/page-finder/usePageFinderModular.tsx": {
            "lines": 178,
            "tokens": 1476,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal-native/StepEditModalNative.tsx": {
            "lines": 100,
            "tokens": 742,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal-native/ParametersFormSection.tsx": {
            "lines": 95,
            "tokens": 767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal-native/ActionConfigSection.tsx": {
            "lines": 88,
            "tokens": 608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/StepEditModalModular.tsx": {
            "lines": 84,
            "tokens": 649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/smart-step-adder/SmartStepEditorModal.tsx": {
            "lines": 333,
            "tokens": 2682,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 140,
            "duplicatedTokens": 1056,
            "percentage": 42.04,
            "percentageTokens": 39.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/TaskManagementCenter.tsx": {
            "lines": 165,
            "tokens": 1010,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 109,
            "percentage": 10.91,
            "percentageTokens": 10.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/SmartRecommendationPanel.tsx": {
            "lines": 323,
            "tokens": 2685,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 102,
            "percentage": 4.02,
            "percentageTokens": 3.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/RecommendationFilters.tsx": {
            "lines": 363,
            "tokens": 3240,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 102,
            "percentage": 3.58,
            "percentageTokens": 3.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/RecommendationCard.tsx": {
            "lines": 261,
            "tokens": 2399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/safety-protection/DuplicationProtectionPanel.tsx": {
            "lines": 637,
            "tokens": 5128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/reply-management/EnhancedReplyTaskManager.tsx": {
            "lines": 684,
            "tokens": 5803,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 155,
            "percentage": 3.51,
            "percentageTokens": 2.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/MonitoringDashboard.tsx": {
            "lines": 152,
            "tokens": 1084,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 115,
            "percentage": 12.5,
            "percentageTokens": 10.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/follow-executor/FollowTaskExecutor.tsx": {
            "lines": 699,
            "tokens": 6310,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 180,
            "percentage": 2.58,
            "percentageTokens": 2.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/DuplicationLogViewer.tsx": {
            "lines": 606,
            "tokens": 5336,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/DuplicationConfigPanel.tsx": {
            "lines": 732,
            "tokens": 6166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/data-filter/SimpleDataFilter.tsx": {
            "lines": 359,
            "tokens": 2772,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 58,
            "duplicatedTokens": 531,
            "percentage": 16.16,
            "percentageTokens": 19.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/data-filter/DataFilterEnhancement.tsx": {
            "lines": 607,
            "tokens": 4639,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 86,
            "duplicatedTokens": 709,
            "percentage": 14.17,
            "percentageTokens": 15.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Wireless.tsx": {
            "lines": 54,
            "tokens": 1050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Verify.tsx": {
            "lines": 50,
            "tokens": 742,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/UsbTrust.tsx": {
            "lines": 38,
            "tokens": 501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Prerequisites.tsx": {
            "lines": 34,
            "tokens": 414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Done.tsx": {
            "lines": 26,
            "tokens": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/components/StatusComponents.tsx": {
            "lines": 253,
            "tokens": 2127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/components/FormComponents.tsx": {
            "lines": 295,
            "tokens": 2258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/components/DeviceSummary.tsx": {
            "lines": 57,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/partials/SmartVariantBadge.tsx": {
            "lines": 262,
            "tokens": 2170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-strategy-mode-selector.tsx": {
            "lines": 348,
            "tokens": 2863,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-strategy-candidates-section.tsx": {
            "lines": 292,
            "tokens": 2281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-smart-step-integration.tsx": {
            "lines": 402,
            "tokens": 3106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-publish-readiness-modal.tsx": {
            "lines": 350,
            "tokens": 2839,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-fallback-badge.tsx": {
            "lines": 136,
            "tokens": 809,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-enhanced-step-card-integration.tsx": {
            "lines": 241,
            "tokens": 1849,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-analysis-status-section.tsx": {
            "lines": 178,
            "tokens": 1407,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 275,
            "percentage": 19.1,
            "percentageTokens": 19.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/intelligent-analysis-popover-ui.tsx": {
            "lines": 374,
            "tokens": 2582,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/AnalysisStatusSection.tsx": {
            "lines": 213,
            "tokens": 1436,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 275,
            "percentage": 15.96,
            "percentageTokens": 19.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/step-card-system/StepCardSystem.tsx": {
            "lines": 510,
            "tokens": 3702,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/template-management/components/TemplateManager.tsx": {
            "lines": 572,
            "tokens": 4743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskTable.tsx": {
            "lines": 213,
            "tokens": 2070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskStatsCards.tsx": {
            "lines": 76,
            "tokens": 522,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskGenerationModal.tsx": {
            "lines": 187,
            "tokens": 1463,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 290,
            "percentage": 17.11,
            "percentageTokens": 19.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskExecutor.tsx": {
            "lines": 704,
            "tokens": 5919,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 222,
            "percentage": 4.26,
            "percentageTokens": 3.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskEngineManager.tsx": {
            "lines": 290,
            "tokens": 2292,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskDeviceConsole.tsx": {
            "lines": 335,
            "tokens": 3092,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskAssignmentModal.tsx": {
            "lines": 114,
            "tokens": 881,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 290,
            "percentage": 28.07,
            "percentageTokens": 32.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/EnhancedWatchTargetManager.tsx": {
            "lines": 654,
            "tokens": 5580,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 63,
            "duplicatedTokens": 561,
            "percentage": 9.63,
            "percentageTokens": 10.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/DailyReportManager.tsx": {
            "lines": 441,
            "tokens": 3813,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/CommentSystemManager.tsx": {
            "lines": 702,
            "tokens": 6037,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 63,
            "duplicatedTokens": 561,
            "percentage": 8.97,
            "percentageTokens": 9.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/BackendValidationConsole.tsx": {
            "lines": 334,
            "tokens": 2840,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-control/components/RateControlManager.tsx": {
            "lines": 662,
            "tokens": 5900,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/comment-collection/components/CommentCollectionManager.tsx": {
            "lines": 597,
            "tokens": 4897,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/candidate-pool/components/CandidatePoolManager.tsx": {
            "lines": 525,
            "tokens": 4451,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 172,
            "percentage": 3.05,
            "percentageTokens": 3.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/audit-system/components/AuditManager.tsx": {
            "lines": 848,
            "tokens": 7239,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 152,
            "percentage": 1.42,
            "percentageTokens": 2.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/utils/ContactWorkbenchColumns.tsx": {
            "lines": 125,
            "tokens": 1532,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 157,
            "percentage": 7.2,
            "percentageTokens": 10.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepUpload.tsx": {
            "lines": 59,
            "tokens": 682,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepSourceSelect.tsx": {
            "lines": 135,
            "tokens": 1421,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepProgress.tsx": {
            "lines": 80,
            "tokens": 1150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepDetectDevices.tsx": {
            "lines": 58,
            "tokens": 711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepConfigure.tsx": {
            "lines": 52,
            "tokens": 567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/SessionActionsBar.tsx": {
            "lines": 306,
            "tokens": 3993,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 106,
            "duplicatedTokens": 1488,
            "percentage": 34.64,
            "percentageTokens": 37.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/ImportSessionsPanel.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/ImportSessionsModal.tsx": {
            "lines": 367,
            "tokens": 4768,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 53,
            "duplicatedTokens": 725,
            "percentage": 14.44,
            "percentageTokens": 15.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/providers/ContactImportProvider.tsx": {
            "lines": 98,
            "tokens": 824,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/WorkbenchTableColumns.tsx": {
            "lines": 185,
            "tokens": 1538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/WorkbenchPanels.tsx": {
            "lines": 154,
            "tokens": 1192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/WorkbenchNumbersActionsBar.tsx": {
            "lines": 207,
            "tokens": 1895,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 330,
            "percentage": 22.22,
            "percentageTokens": 17.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/VcfImportButton.tsx": {
            "lines": 133,
            "tokens": 589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/TxtImportRecordsManager.tsx": {
            "lines": 489,
            "tokens": 4154,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 88,
            "duplicatedTokens": 928,
            "percentage": 18,
            "percentageTokens": 22.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/TxtImportRecordsList.tsx": {
            "lines": 199,
            "tokens": 1966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/StatsBar.tsx": {
            "lines": 41,
            "tokens": 530,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/SourceFoldersList.tsx": {
            "lines": 50,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/SourceFolderAddButton.tsx": {
            "lines": 25,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceStatusCard.tsx": {
            "lines": 75,
            "tokens": 620,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceImportStrategyDialog.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentTable.tsx": {
            "lines": 267,
            "tokens": 3364,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 136,
            "percentage": 2.62,
            "percentageTokens": 4.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid.tsx": {
            "lines": 4,
            "tokens": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/ConflictNavigator.tsx": {
            "lines": 45,
            "tokens": 570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/BatchResultModal.tsx": {
            "lines": 220,
            "tokens": 3047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/BatchPreviewModal.tsx": {
            "lines": 94,
            "tokens": 947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/BatchManagerDrawer.tsx": {
            "lines": 136,
            "tokens": 1480,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 247,
            "percentage": 16.18,
            "percentageTokens": 16.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/ui/ImportStrategySelector.tsx": {
            "lines": 235,
            "tokens": 2238,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/ui/ImportStrategyDialog.tsx": {
            "lines": 336,
            "tokens": 2870,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 586,
            "percentage": 19.05,
            "percentageTokens": 20.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/ui/ImportResultDisplay.tsx": {
            "lines": 244,
            "tokens": 2089,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/xpath-monitor/XPathPerformancePanel.tsx": {
            "lines": 93,
            "tokens": 753,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/xpath-monitor/XPathPerformanceMonitor.tsx": {
            "lines": 271,
            "tokens": 2246,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 308,
            "percentage": 14.02,
            "percentageTokens": 13.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/VisualPagePreview.tsx": {
            "lines": 341,
            "tokens": 2306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/VisualPageAnalyzerContent.tsx": {
            "lines": 499,
            "tokens": 4166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/VisualElementView.tsx": {
            "lines": 656,
            "tokens": 7793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/index.tsx": {
            "lines": 8,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/UIElementTree.tsx": {
            "lines": 181,
            "tokens": 1476,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/index.tsx": {
            "lines": 9,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/ScrcpyControlView.tsx": {
            "lines": 397,
            "tokens": 5041,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/EmbeddedScrcpyPlayer.tsx": {
            "lines": 86,
            "tokens": 1180,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/CapabilityChips.tsx": {
            "lines": 36,
            "tokens": 447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/list-view/index.tsx": {
            "lines": 8,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/list-view/ElementListView.tsx": {
            "lines": 403,
            "tokens": 3923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/XPathTestResultsPanel.tsx": {
            "lines": 63,
            "tokens": 847,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 119,
            "percentage": 12.7,
            "percentageTokens": 14.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/XPathBuilder.tsx": {
            "lines": 132,
            "tokens": 1997,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/TreeRow.tsx": {
            "lines": 174,
            "tokens": 2039,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 198,
            "percentage": 8.05,
            "percentageTokens": 9.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/SearchFieldToggles.tsx": {
            "lines": 26,
            "tokens": 615,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/ScreenPreview.tsx": {
            "lines": 265,
            "tokens": 2883,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/NodeDetail.tsx": {
            "lines": 76,
            "tokens": 966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/MatchResultsPanel.tsx": {
            "lines": 316,
            "tokens": 3551,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 317,
            "percentage": 6.96,
            "percentageTokens": 8.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/MatchCountSummary.tsx": {
            "lines": 24,
            "tokens": 277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/MatchBadges.tsx": {
            "lines": 50,
            "tokens": 864,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/index.tsx": {
            "lines": 59,
            "tokens": 372,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/GridElementView.tsx": {
            "lines": 878,
            "tokens": 7577,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 108,
            "duplicatedTokens": 1198,
            "percentage": 12.3,
            "percentageTokens": 15.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/GridElementView.refactored.tsx": {
            "lines": 226,
            "tokens": 1727,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 55,
            "duplicatedTokens": 635,
            "percentage": 24.34,
            "percentageTokens": 36.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/FilterBar.tsx": {
            "lines": 78,
            "tokens": 763,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/CopyChip.tsx": {
            "lines": 33,
            "tokens": 315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/Breadcrumbs.tsx": {
            "lines": 37,
            "tokens": 421,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/AdvancedFilterSummary.tsx": {
            "lines": 34,
            "tokens": 475,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/cache-view/CacheHistoryPanel.tsx": {
            "lines": 46,
            "tokens": 314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/resizable/useResizableColumns.tsx": {
            "lines": 114,
            "tokens": 1494,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/resizable/ResizableHeaderCell.tsx": {
            "lines": 52,
            "tokens": 465,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/StepItemBase.tsx": {
            "lines": 76,
            "tokens": 957,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 88,
            "duplicatedTokens": 1289,
            "percentage": 115.79,
            "percentageTokens": 134.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/StepItem.tsx": {
            "lines": 80,
            "tokens": 970,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 89,
            "duplicatedTokens": 1291,
            "percentage": 111.25,
            "percentageTokens": 133.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/StepCardItem.tsx": {
            "lines": 5,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ScriptStepItemStable.tsx": {
            "lines": 70,
            "tokens": 843,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 43,
            "duplicatedTokens": 617,
            "percentage": 61.43,
            "percentageTokens": 73.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ScriptStepItem.tsx": {
            "lines": 69,
            "tokens": 841,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 42,
            "duplicatedTokens": 615,
            "percentage": 60.87,
            "percentageTokens": 73.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ScriptBuilderView.tsx": {
            "lines": 77,
            "tokens": 728,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/panels/SelectionPopoverContainer.tsx": {
            "lines": 68,
            "tokens": 610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/panels/MainViewContainer.tsx": {
            "lines": 27,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/panels/LeftControlPanel.tsx": {
            "lines": 106,
            "tokens": 823,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/filter/FilterSettingsPanel.tsx": {
            "lines": 123,
            "tokens": 1225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/ViewModeSelector.tsx": {
            "lines": 170,
            "tokens": 1224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/ElementList.tsx": {
            "lines": 230,
            "tokens": 2081,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/DeviceSelector.tsx": {
            "lines": 178,
            "tokens": 1308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/AnalysisPanel.tsx": {
            "lines": 320,
            "tokens": 2678,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/SidebarTree.tsx": {
            "lines": 55,
            "tokens": 482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/ResultList.tsx": {
            "lines": 65,
            "tokens": 560,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/NodeDetailPanel.tsx": {
            "lines": 47,
            "tokens": 517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/GridCanvas.tsx": {
            "lines": 37,
            "tokens": 339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/FilterBar.tsx": {
            "lines": 39,
            "tokens": 294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/examples/PanelManagementExample.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/components/PanelVisibilityManager.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/components/PanelStateControl.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/components/GridLayoutToolbar.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/components/DraggableHeaderPanel.tsx": {
            "lines": 227,
            "tokens": 1583,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 137,
            "percentage": 5.73,
            "percentageTokens": 8.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/components/DraggableGridLayout.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/__tests__/ElementSelectionPopover.test.tsx": {
            "lines": 199,
            "tokens": 1768,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 56,
            "duplicatedTokens": 452,
            "percentage": 28.14,
            "percentageTokens": 25.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/ui-components/PopoverCard.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/strategy-analysis/StrategyAnalysisModal.tsx": {
            "lines": 276,
            "tokens": 3043,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/TextToParentExample.tsx": {
            "lines": 102,
            "tokens": 1037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/SelfElementCard.tsx": {
            "lines": 406,
            "tokens": 3910,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 78,
            "duplicatedTokens": 738,
            "percentage": 19.21,
            "percentageTokens": 18.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ParentElementCard.tsx": {
            "lines": 274,
            "tokens": 2560,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 78,
            "duplicatedTokens": 738,
            "percentage": 28.47,
            "percentageTokens": 28.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ElementDiscoveryModal.tsx": {
            "lines": 425,
            "tokens": 3485,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ElementDiscoveryDebugInfo.tsx": {
            "lines": 159,
            "tokens": 1667,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ElementDiscoveryDebugger.tsx": {
            "lines": 198,
            "tokens": 1984,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ChildElementCard.tsx": {
            "lines": 27,
            "tokens": 244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/BaseElementCard.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ArchitectureDiagram.tsx": {
            "lines": 555,
            "tokens": 4761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/components/SmartPopoverContainer.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/components/PopoverActionButtons.tsx": {
            "lines": 637,
            "tokens": 5294,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 226,
            "duplicatedTokens": 2090,
            "percentage": 35.48,
            "percentageTokens": 39.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/components/GhostOverlayToggle.tsx": {
            "lines": 29,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/theme-advanced/ThemePresetSelector.tsx": {
            "lines": 216,
            "tokens": 1716,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/theme-advanced/ThemeColorPicker.tsx": {
            "lines": 93,
            "tokens": 649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/theme-advanced/ThemeAnimationSettings.tsx": {
            "lines": 116,
            "tokens": 1105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/providers/EnhancedThemeProvider.tsx": {
            "lines": 208,
            "tokens": 1452,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/components/ThemeSwitcher.tsx": {
            "lines": 300,
            "tokens": 2536,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 448,
            "percentage": 13.33,
            "percentageTokens": 17.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/components/ThemePreview.tsx": {
            "lines": 313,
            "tokens": 2516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/components/ThemeConfigPanel.tsx": {
            "lines": 403,
            "tokens": 3614,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 21,
            "duplicatedTokens": 361,
            "percentage": 5.21,
            "percentageTokens": 9.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/ThemeEnhanced.tsx": {
            "lines": 329,
            "tokens": 2547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepList.tsx": {
            "lines": 521,
            "tokens": 4284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepEditor.tsx": {
            "lines": 378,
            "tokens": 2775,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 316,
            "duplicatedTokens": 2420,
            "percentage": 83.6,
            "percentageTokens": 87.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepEditor-Refactored.tsx": {
            "lines": 395,
            "tokens": 2945,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 316,
            "duplicatedTokens": 2420,
            "percentage": 80,
            "percentageTokens": 82.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepCard.tsx": {
            "lines": 432,
            "tokens": 3341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/ScriptBuilderContainer.tsx": {
            "lines": 542,
            "tokens": 4098,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 90,
            "percentage": 1.11,
            "percentageTokens": 2.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/ExecutionControl.tsx": {
            "lines": 550,
            "tokens": 4294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/components/PropertyPanel.tsx": {
            "lines": 335,
            "tokens": 2805,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/components/PageAnalyzerContainer.tsx": {
            "lines": 258,
            "tokens": 1985,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/components/ElementTree.tsx": {
            "lines": 224,
            "tokens": 1769,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/RealtimeEditorCard.tsx": {
            "lines": 30,
            "tokens": 418,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 99,
            "percentage": 16.67,
            "percentageTokens": 23.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/FieldListCard.tsx": {
            "lines": 109,
            "tokens": 1571,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 30,
            "duplicatedTokens": 510,
            "percentage": 27.52,
            "percentageTokens": 32.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/DisplayNameCard.tsx": {
            "lines": 44,
            "tokens": 746,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 22,
            "duplicatedTokens": 443,
            "percentage": 50,
            "percentageTokens": 59.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/CachedMappingCard.tsx": {
            "lines": 45,
            "tokens": 712,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 96,
            "percentage": 11.11,
            "percentageTokens": 13.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/AiRecommendationsCard.tsx": {
            "lines": 52,
            "tokens": 502,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 123,
            "percentage": 11.54,
            "percentageTokens": 24.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/AdbCommandsCard.tsx": {
            "lines": 45,
            "tokens": 663,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 134,
            "percentage": 13.33,
            "percentageTokens": 20.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/StrategyArea.tsx": {
            "lines": 38,
            "tokens": 377,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/ContactActions.tsx": {
            "lines": 65,
            "tokens": 633,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/AccentBars.tsx": {
            "lines": 28,
            "tokens": 274,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/components/TaskProgressPanel.tsx": {
            "lines": 144,
            "tokens": 1291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/components/StatisticsHeader.tsx": {
            "lines": 83,
            "tokens": 511,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 94,
            "percentage": 13.25,
            "percentageTokens": 18.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/components/StatisticsCards.tsx": {
            "lines": 186,
            "tokens": 1467,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 288,
            "percentage": 12.9,
            "percentageTokens": 19.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/useStepForm.tsx": {
            "lines": 529,
            "tokens": 5647,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 111,
            "duplicatedTokens": 1225,
            "percentage": 20.98,
            "percentageTokens": 21.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/usePageFinder.tsx": {
            "lines": 946,
            "tokens": 10601,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 48,
            "duplicatedTokens": 790,
            "percentage": 5.07,
            "percentageTokens": 7.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/saveStep.tsx": {
            "lines": 424,
            "tokens": 4721,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 106,
            "duplicatedTokens": 1134,
            "percentage": 25,
            "percentageTokens": 24.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/renderers.tsx": {
            "lines": 98,
            "tokens": 730,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 158,
            "duplicatedTokens": 1176,
            "percentage": 161.22,
            "percentageTokens": 161.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/parameterRenderers.tsx": {
            "lines": 97,
            "tokens": 727,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 87,
            "duplicatedTokens": 648,
            "percentage": 89.69,
            "percentageTokens": 89.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/StepSaveHandler.tsx": {
            "lines": 151,
            "tokens": 1308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/StepListPanel.tsx": {
            "lines": 317,
            "tokens": 3234,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 28,
            "duplicatedTokens": 524,
            "percentage": 8.83,
            "percentageTokens": 16.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/StepEditModal.tsx": {
            "lines": 453,
            "tokens": 3600,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 137,
            "duplicatedTokens": 1150,
            "percentage": 30.24,
            "percentageTokens": 31.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/ScriptControlPanel.tsx": {
            "lines": 202,
            "tokens": 1258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/QuickAppSelectionModal.tsx": {
            "lines": 73,
            "tokens": 550,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/QualityCheckModal.tsx": {
            "lines": 53,
            "tokens": 378,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/PageHeader.tsx": {
            "lines": 103,
            "tokens": 822,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 139,
            "percentage": 13.59,
            "percentageTokens": 16.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/MultiDeviceScriptLauncher.tsx": {
            "lines": 145,
            "tokens": 1669,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/ExecutorConfigPanel.tsx": {
            "lines": 131,
            "tokens": 1130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/EnhancedPageHeader.tsx": {
            "lines": 199,
            "tokens": 1556,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 139,
            "percentage": 7.04,
            "percentageTokens": 8.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/ControlPanel.tsx": {
            "lines": 282,
            "tokens": 2273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/TaskManagementCenter.tsx": {
            "lines": 81,
            "tokens": 517,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 109,
            "percentage": 22.22,
            "percentageTokens": 21.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/MonitoringDashboard.tsx": {
            "lines": 214,
            "tokens": 1969,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 115,
            "percentage": 8.88,
            "percentageTokens": 5.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/IndustryMonitoringModule.tsx": {
            "lines": 274,
            "tokens": 2427,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 153,
            "duplicatedTokens": 1398,
            "percentage": 55.84,
            "percentageTokens": 57.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/DailyReportModule.tsx": {
            "lines": 652,
            "tokens": 5559,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 126,
            "duplicatedTokens": 1042,
            "percentage": 19.33,
            "percentageTokens": 18.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/CandidatePoolImportPanel.tsx": {
            "lines": 197,
            "tokens": 1508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/AccountMonitoringModule.tsx": {
            "lines": 254,
            "tokens": 2251,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 153,
            "duplicatedTokens": 1398,
            "percentage": 60.24,
            "percentageTokens": 62.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/modern-adb-diagnostic/components/AdbSystemStatusCard.tsx": {
            "lines": 37,
            "tokens": 373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/execution-monitor/components/ScriptList.tsx": {
            "lines": 78,
            "tokens": 730,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/execution-monitor/components/PageHeader.tsx": {
            "lines": 18,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/execution-monitor/components/MonitorFeatureGrid.tsx": {
            "lines": 32,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/execution-monitor/components/InfoAlert.tsx": {
            "lines": 16,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/components/DeviceStatusCards.tsx": {
            "lines": 123,
            "tokens": 840,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/components/DevicePageHeader.tsx": {
            "lines": 85,
            "tokens": 531,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 94,
            "percentage": 12.94,
            "percentageTokens": 17.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/components/DeviceInstructions.tsx": {
            "lines": 64,
            "tokens": 451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation-sindre/components/AutomationResults.tsx": {
            "lines": 62,
            "tokens": 655,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation/components/ImportResultSummary.tsx": {
            "lines": 54,
            "tokens": 513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation/components/DeviceSelector.tsx": {
            "lines": 104,
            "tokens": 894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/TooltipDemo.tsx": {
            "lines": 144,
            "tokens": 1157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/TokensDemo.tsx": {
            "lines": 129,
            "tokens": 1265,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 350,
            "percentage": 31.01,
            "percentageTokens": 27.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/TagDemo.tsx": {
            "lines": 49,
            "tokens": 471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/InteractiveDemo.tsx": {
            "lines": 159,
            "tokens": 1391,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 127,
            "duplicatedTokens": 1174,
            "percentage": 79.87,
            "percentageTokens": 84.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/FormDemo.tsx": {
            "lines": 68,
            "tokens": 579,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/EmptyStateDemo.tsx": {
            "lines": 25,
            "tokens": 186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/DropdownDemo.tsx": {
            "lines": 258,
            "tokens": 1934,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/DialogDemo.tsx": {
            "lines": 393,
            "tokens": 2743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/ButtonDemo.tsx": {
            "lines": 64,
            "tokens": 645,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/LaunchResultSection.tsx": {
            "lines": 167,
            "tokens": 1317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/LaunchHistorySection.tsx": {
            "lines": 49,
            "tokens": 461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/FeatureDescriptionSection.tsx": {
            "lines": 78,
            "tokens": 755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/ControlPanelSection.tsx": {
            "lines": 141,
            "tokens": 1117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-path-test/components/DevicesResultCard.tsx": {
            "lines": 27,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-layout-comparison/components/LayoutPreview.tsx": {
            "lines": 25,
            "tokens": 194,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-layout-comparison/components/LayoutOverviewCards.tsx": {
            "lines": 45,
            "tokens": 391,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-layout-comparison/components/HeaderBar.tsx": {
            "lines": 46,
            "tokens": 407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-layout-comparison/components/DesignPrincipleAlert.tsx": {
            "lines": 20,
            "tokens": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/SessionTimelinePanel.tsx": {
            "lines": 127,
            "tokens": 1296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogQuickPresets.tsx": {
            "lines": 38,
            "tokens": 310,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogMessage.tsx": {
            "lines": 102,
            "tokens": 1081,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 260,
            "percentage": 17.65,
            "percentageTokens": 24.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogFilterBar.tsx": {
            "lines": 167,
            "tokens": 1531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogDetailsDrawer.tsx": {
            "lines": 157,
            "tokens": 1547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/DeviceLogPanel.tsx": {
            "lines": 124,
            "tokens": 1269,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/DetailsBlock.tsx": {
            "lines": 69,
            "tokens": 614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/EnhancedADBAuthWizard.tsx": {
            "lines": 321,
            "tokens": 3157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/ADBAuthWizard.tsx": {
            "lines": 63,
            "tokens": 794,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/ActionLogPanel.tsx": {
            "lines": 20,
            "tokens": 221,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 133,
            "percentage": 30,
            "percentageTokens": 60.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/StepCard.tsx": {
            "lines": 489,
            "tokens": 3677,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/universal-analysis-components-demo.tsx": {
            "lines": 320,
            "tokens": 2619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/unified-step-card-demo.tsx": {
            "lines": 372,
            "tokens": 3142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/step-card-system-demo.tsx": {
            "lines": 162,
            "tokens": 1402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/smoke-test.tsx": {
            "lines": 247,
            "tokens": 1899,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/smoke-test-complete.tsx": {
            "lines": 453,
            "tokens": 3272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/intelligent-analysis-real-demo.tsx": {
            "lines": 351,
            "tokens": 3274,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/intelligent-analysis-demo.tsx": {
            "lines": 275,
            "tokens": 2314,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/enhanced-element-selection-demo.tsx": {
            "lines": 317,
            "tokens": 2853,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/auto-fill-demo.tsx": {
            "lines": 356,
            "tokens": 2931,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/integration/NodeDetailIntegration.tsx": {
            "lines": 194,
            "tokens": 1553,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/use-analysis-auto-fill.tsx": {
            "lines": 440,
            "tokens": 2983,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/examples/UniversalUIIntegrationExample.tsx": {
            "lines": 384,
            "tokens": 3506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/demo/StrategySystemDemo.tsx": {
            "lines": 358,
            "tokens": 2974,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/unified-step-card.tsx": {
            "lines": 192,
            "tokens": 1307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/intelligent-draggable-step-card.tsx": {
            "lines": 432,
            "tokens": 3478,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/intelligent-analysis-controller.tsx": {
            "lines": 550,
            "tokens": 3787,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/improved-smart-step-wrapper.tsx": {
            "lines": 214,
            "tokens": 1298,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/components/ScriptManager.tsx": {
            "lines": 424,
            "tokens": 3610,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 80,
            "percentage": 1.65,
            "percentageTokens": 2.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/components/ScriptBuilderIntegration.tsx": {
            "lines": 547,
            "tokens": 4894,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 80,
            "duplicatedTokens": 614,
            "percentage": 14.63,
            "percentageTokens": 12.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/script-builder/components/script-builder-step-card.tsx": {
            "lines": 247,
            "tokens": 1537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/components/prospecting-step-card.tsx": {
            "lines": 244,
            "tokens": 1464,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/marketing/watch-targets/WatchTargetsList.tsx": {
            "lines": 162,
            "tokens": 2030,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 446,
            "percentage": 18.52,
            "percentageTokens": 21.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/components/LoopStepCard.tsx": {
            "lines": 313,
            "tokens": 2569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/components/LoopControlIntegration.tsx": {
            "lines": 273,
            "tokens": 2206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-matching/components/HierarchyFieldDisplay.tsx": {
            "lines": 248,
            "tokens": 2224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/drag-sort/components/DragSortContainer.tsx": {
            "lines": 197,
            "tokens": 1911,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/examples/IntegrationExample.tsx": {
            "lines": 156,
            "tokens": 1164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/WhiteBlacklistManager.tsx": {
            "lines": 723,
            "tokens": 6340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/SafetyMonitorPanel.tsx": {
            "lines": 522,
            "tokens": 4684,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/SafetyConfigPanel.tsx": {
            "lines": 674,
            "tokens": 5361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/DeduplicationControlManager.tsx": {
            "lines": 486,
            "tokens": 3995,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/ContactImportWorkbench.tsx": {
            "lines": 458,
            "tokens": 4721,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 19,
            "duplicatedTokens": 331,
            "percentage": 4.15,
            "percentageTokens": 7.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/ContactImportWizard.tsx": {
            "lines": 234,
            "tokens": 1999,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/components/contact-import-step-card.tsx": {
            "lines": 319,
            "tokens": 2318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-automation/components/ContactWorkflowSelector.tsx": {
            "lines": 142,
            "tokens": 1229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/components/adb-step-card.tsx": {
            "lines": 300,
            "tokens": 1834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/__tests__/Thumbnail.test.tsx": {
            "lines": 16,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/VirtualizedCachedPageList.tsx": {
            "lines": 178,
            "tokens": 2016,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 127,
            "percentage": 5.62,
            "percentageTokens": 6.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/Thumbnail.tsx": {
            "lines": 244,
            "tokens": 2273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/CacheToolbar.tsx": {
            "lines": 103,
            "tokens": 879,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/CachedPageList.tsx": {
            "lines": 117,
            "tokens": 935,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 127,
            "percentage": 8.55,
            "percentageTokens": 13.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/CachedPageCard.tsx": {
            "lines": 200,
            "tokens": 1580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/index.tsx": {
            "lines": 25,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/TableColumnSettings.tsx": {
            "lines": 180,
            "tokens": 1692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/ResizableTable.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/ResizableHeader.tsx": {
            "lines": 199,
            "tokens": 1536,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/strategy-selector/UnifiedStrategyConfigurator.tsx": {
            "lines": 545,
            "tokens": 4758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/strategy-selector/StrategyScoreBadge.tsx": {
            "lines": 103,
            "tokens": 747,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/strategy-selector/config.tsx": {
            "lines": 294,
            "tokens": 2134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/PageFinderView.tsx": {
            "lines": 49,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/TestIntelligentAnalysisAdapter.tsx": {
            "lines": 159,
            "tokens": 1466,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/ElementSelectionPopover.tsx": {
            "lines": 428,
            "tokens": 4191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/SortableList.tsx": {
            "lines": 22,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/SortableItem.tsx": {
            "lines": 35,
            "tokens": 351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/noDrag.tsx": {
            "lines": 16,
            "tokens": 191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/DragSensorsProvider.tsx": {
            "lines": 45,
            "tokens": 395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/DragOverlayGhost.tsx": {
            "lines": 39,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/DnDUIConfigContext.tsx": {
            "lines": 81,
            "tokens": 854,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/common-popover/ConfirmPopover.tsx": {
            "lines": 138,
            "tokens": 1054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/typography/TypographyAdapter.tsx": {
            "lines": 36,
            "tokens": 135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tooltip/Tooltip.tsx": {
            "lines": 277,
            "tokens": 1693,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tag-pill/TagPill.tsx": {
            "lines": 238,
            "tokens": 1640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlay/withOverlaySurface.tsx": {
            "lines": 41,
            "tokens": 293,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlay/useOverlayTheme.tsx": {
            "lines": 36,
            "tokens": 470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/motion/MotionSystem.tsx": {
            "lines": 124,
            "tokens": 822,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/motion/MotionComponents.tsx": {
            "lines": 309,
            "tokens": 1914,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 100,
            "duplicatedTokens": 630,
            "percentage": 32.36,
            "percentageTokens": 32.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layouts/Panel.tsx": {
            "lines": 78,
            "tokens": 487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layouts/PageContainer.tsx": {
            "lines": 84,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layouts/Grid.tsx": {
            "lines": 234,
            "tokens": 1620,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/forms/Select.tsx": {
            "lines": 206,
            "tokens": 1219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/forms/Input.tsx": {
            "lines": 201,
            "tokens": 1396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/forms/FormField.tsx": {
            "lines": 74,
            "tokens": 439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/feedback/Loading.tsx": {
            "lines": 183,
            "tokens": 1192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/feedback/FeedbackAdapter.tsx": {
            "lines": 34,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dropdown/DropdownMenu.tsx": {
            "lines": 280,
            "tokens": 2051,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dialog/Dialog.tsx": {
            "lines": 230,
            "tokens": 1328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card/CardShell.tsx": {
            "lines": 362,
            "tokens": 2598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card/Card.tsx": {
            "lines": 221,
            "tokens": 1193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/SecondaryButton.tsx": {
            "lines": 77,
            "tokens": 501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/PrimaryButton.tsx": {
            "lines": 131,
            "tokens": 634,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/IconButton.tsx": {
            "lines": 270,
            "tokens": 1749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/button/Button.tsx": {
            "lines": 508,
            "tokens": 3459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/tap-actions/TapActionDropdownButton.tsx": {
            "lines": 74,
            "tokens": 1055,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/system-actions/SystemKeyDropdownButton.tsx": {
            "lines": 56,
            "tokens": 836,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 109,
            "percentage": 8.93,
            "percentageTokens": 13.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/scroll/ScrollParamsEditor.tsx": {
            "lines": 58,
            "tokens": 474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/scroll/ScrollDirectionSelector.tsx": {
            "lines": 53,
            "tokens": 501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/ScreenActionDropdownButton.tsx": {
            "lines": 79,
            "tokens": 1183,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 109,
            "percentage": 6.33,
            "percentageTokens": 9.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/EdgeBackGestureModal.tsx": {
            "lines": 89,
            "tokens": 1182,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 222,
            "percentage": 15.73,
            "percentageTokens": 18.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/CustomScrollModal.tsx": {
            "lines": 68,
            "tokens": 821,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/skeleton/SkeletonPatterns.tsx": {
            "lines": 49,
            "tokens": 613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/marketplace-card/MarketplaceCard.tsx": {
            "lines": 443,
            "tokens": 3182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/header-bar/HeaderBar.tsx": {
            "lines": 314,
            "tokens": 1942,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/filter-bar/FilterBar.tsx": {
            "lines": 375,
            "tokens": 2828,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/empty-state/EmptyState.tsx": {
            "lines": 336,
            "tokens": 2221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/TemplateSelector.tsx": {
            "lines": 47,
            "tokens": 468,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/SaveFlowModal.tsx": {
            "lines": 41,
            "tokens": 359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/SavedFlowsPanel.tsx": {
            "lines": 32,
            "tokens": 400,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/FlowDetailsPanel.tsx": {
            "lines": 78,
            "tokens": 635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/FlowConstructionCard.tsx": {
            "lines": 138,
            "tokens": 1208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/ThemePageComponents.tsx": {
            "lines": 436,
            "tokens": 4135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/ThemeLayouts.tsx": {
            "lines": 438,
            "tokens": 3587,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/ThemeEnhanced.tsx": {
            "lines": 425,
            "tokens": 3508,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 236,
            "percentage": 7.06,
            "percentageTokens": 6.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/ThemeAdvanced.tsx": {
            "lines": 31,
            "tokens": 179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/HierarchyTab.tsx": {
            "lines": 46,
            "tokens": 465,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/FieldDetailTab.tsx": {
            "lines": 73,
            "tokens": 783,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/ConstraintsTab.tsx": {
            "lines": 130,
            "tokens": 1655,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 94,
            "percentage": 4.62,
            "percentageTokens": 5.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/BasicConfigTab.tsx": {
            "lines": 143,
            "tokens": 1604,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 227,
            "percentage": 9.79,
            "percentageTokens": 14.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/registry/registry.tsx": {
            "lines": 109,
            "tokens": 1350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/TitleEditor.tsx": {
            "lines": 43,
            "tokens": 462,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 134,
            "percentage": 18.6,
            "percentageTokens": 29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/StrategyControls.tsx": {
            "lines": 194,
            "tokens": 2095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/StepCardHeader.tsx": {
            "lines": 239,
            "tokens": 2108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/StepCardBody.tsx": {
            "lines": 93,
            "tokens": 706,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/SmartScrollControls.tsx": {
            "lines": 36,
            "tokens": 334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/SmartInputControls.tsx": {
            "lines": 36,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/SmartClickControls.tsx": {
            "lines": 36,
            "tokens": 370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/LoopConfigModal.tsx": {
            "lines": 112,
            "tokens": 1049,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 133,
            "percentage": 11.61,
            "percentageTokens": 12.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/InlineLoopControl.tsx": {
            "lines": 78,
            "tokens": 934,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/InfoBubble.tsx": {
            "lines": 237,
            "tokens": 2594,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/DescriptionEditor.tsx": {
            "lines": 40,
            "tokens": 433,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 134,
            "percentage": 20,
            "percentageTokens": 30.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/ContactSourceSelector.tsx": {
            "lines": 52,
            "tokens": 506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/ContactDeviceSelector.tsx": {
            "lines": 50,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/BatchMatchToggle.tsx": {
            "lines": 68,
            "tokens": 782,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/strategy/UniversalStrategy.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/business/page-headers/BusinessPageHeader.tsx": {
            "lines": 99,
            "tokens": 690,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/business/layouts/BusinessPageLayout.tsx": {
            "lines": 55,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/business/data-cards/MetricCard.tsx": {
            "lines": 146,
            "tokens": 1058,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/upload/UploadAdapter.tsx": {
            "lines": 41,
            "tokens": 299,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/tree/TreeAdapter.tsx": {
            "lines": 24,
            "tokens": 195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/tooltip/TooltipAdapter.tsx": {
            "lines": 41,
            "tokens": 268,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/tag/TagAdapter.tsx": {
            "lines": 39,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/table/TableAdapter.tsx": {
            "lines": 280,
            "tokens": 1811,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 134,
            "percentage": 6.07,
            "percentageTokens": 7.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/switch/SwitchAdapter.tsx": {
            "lines": 24,
            "tokens": 168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/steps/StepsAdapter.tsx": {
            "lines": 22,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/slider/SliderAdapter.tsx": {
            "lines": 31,
            "tokens": 260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/select/SelectAdapter.tsx": {
            "lines": 59,
            "tokens": 408,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/radio/RadioAdapter.tsx": {
            "lines": 56,
            "tokens": 416,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/popover/PopoverAdapter.tsx": {
            "lines": 37,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/pagination/PaginationAdapter.tsx": {
            "lines": 52,
            "tokens": 420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/notification/NotificationAdapter.tsx": {
            "lines": 205,
            "tokens": 1263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/modal/ModalAdapter.tsx": {
            "lines": 83,
            "tokens": 543,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/message/MessageAdapter.tsx": {
            "lines": 72,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/layout/LayoutAdapter.tsx": {
            "lines": 57,
            "tokens": 332,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/interaction/InteractionSelectorAdapter.tsx": {
            "lines": 123,
            "tokens": 758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/input-number/InputNumberAdapter.tsx": {
            "lines": 25,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/input/InputAdapter.tsx": {
            "lines": 57,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/icons/IconAdapter.tsx": {
            "lines": 110,
            "tokens": 761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/grid-layout/GridLayoutSelectorAdapter.tsx": {
            "lines": 103,
            "tokens": 625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/grid/GridAdapter.tsx": {
            "lines": 86,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/form/FormAdapter.tsx": {
            "lines": 362,
            "tokens": 2244,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 134,
            "percentage": 4.7,
            "percentageTokens": 5.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/drawer/DrawerAdapter.tsx": {
            "lines": 32,
            "tokens": 220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/drag/DragSelectorAdapter.tsx": {
            "lines": 160,
            "tokens": 1122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/date-picker/DatePickerAdapter.tsx": {
            "lines": 29,
            "tokens": 310,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/checkbox/CheckboxAdapter.tsx": {
            "lines": 40,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/button/ButtonAdapter.tsx": {
            "lines": 98,
            "tokens": 901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ui-showcase/UIShowcasePageNative.tsx": {
            "lines": 307,
            "tokens": 2650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/StatisticsPageOptimized.tsx": {
            "lines": 202,
            "tokens": 1652,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 259,
            "percentage": 12.38,
            "percentageTokens": 15.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/StatisticsPageNative.tsx": {
            "lines": 293,
            "tokens": 2447,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 466,
            "percentage": 18.43,
            "percentageTokens": 19.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/StatisticsPage.tsx": {
            "lines": 186,
            "tokens": 1817,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 31,
            "duplicatedTokens": 251,
            "percentage": 16.67,
            "percentageTokens": 13.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/WatchTargetsListPage.tsx": {
            "lines": 11,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/PreciseAcquisitionPage.tsx": {
            "lines": 265,
            "tokens": 1825,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance-demo/XPathPerformanceDemo.tsx": {
            "lines": 209,
            "tokens": 1956,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/native-wrappers/SmartScriptBuilderPage.native.tsx": {
            "lines": 14,
            "tokens": 104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/native-wrappers/EmployeePage.native.tsx": {
            "lines": 14,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/StatusIndicators.tsx": {
            "lines": 18,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/SelectionBar.tsx": {
            "lines": 346,
            "tokens": 5133,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 226,
            "percentage": 2.89,
            "percentageTokens": 4.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/RealTimeDeviceMonitorPage.tsx": {
            "lines": 155,
            "tokens": 2026,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceToolbar.tsx": {
            "lines": 31,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceSortBar.tsx": {
            "lines": 31,
            "tokens": 263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceList.tsx": {
            "lines": 27,
            "tokens": 319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceFilters.tsx": {
            "lines": 48,
            "tokens": 490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceEventStream.tsx": {
            "lines": 51,
            "tokens": 612,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceEventLog.tsx": {
            "lines": 48,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceDetailDrawer.tsx": {
            "lines": 139,
            "tokens": 1676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceCard.tsx": {
            "lines": 46,
            "tokens": 517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceActionsPanel.tsx": {
            "lines": 116,
            "tokens": 1331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/BatchActionsBar.tsx": {
            "lines": 71,
            "tokens": 818,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPageOptimized.tsx": {
            "lines": 108,
            "tokens": 793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPageNative.tsx": {
            "lines": 158,
            "tokens": 1054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPageBrandNew.tsx": {
            "lines": 224,
            "tokens": 2018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPage.tsx": {
            "lines": 195,
            "tokens": 1387,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-import/ContactImportPage.tsx": {
            "lines": 25,
            "tokens": 228,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation/ContactAutomationPageNative.tsx": {
            "lines": 277,
            "tokens": 2232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/BrandShowcasePage.tsx": {
            "lines": 631,
            "tokens": 5917,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 127,
            "duplicatedTokens": 1174,
            "percentage": 20.13,
            "percentageTokens": 19.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/LoginPageNative.tsx": {
            "lines": 209,
            "tokens": 1519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/LoginPage.tsx": {
            "lines": 85,
            "tokens": 961,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/AppLaunchTestPageModular.tsx": {
            "lines": 191,
            "tokens": 1628,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 29,
            "duplicatedTokens": 348,
            "percentage": 15.18,
            "percentageTokens": 21.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/WirelessPairing.tsx": {
            "lines": 58,
            "tokens": 875,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/PhoneGuidance.tsx": {
            "lines": 19,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/PcFixes.tsx": {
            "lines": 24,
            "tokens": 387,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/DeviceStatusPanel.tsx": {
            "lines": 30,
            "tokens": 329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/AdbActionCard.tsx": {
            "lines": 14,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/ActionLogPanel.tsx": {
            "lines": 14,
            "tokens": 189,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 133,
            "percentage": 42.86,
            "percentageTokens": 70.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/LogConsole.tsx": {
            "lines": 241,
            "tokens": 3988,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/HeaderToolbar.tsx": {
            "lines": 30,
            "tokens": 338,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/AdbCenterPage.tsx": {
            "lines": 111,
            "tokens": 929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/xml-inspector/XmlInspectorModal.tsx": {
            "lines": 647,
            "tokens": 5572,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-drag-integration/LoopDragIntegration.tsx": {
            "lines": 284,
            "tokens": 2275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/distributed-script-quality/DistributedScriptQualityPanel.tsx": {
            "lines": 480,
            "tokens": 4524,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/XmlCachePageSelector.tsx": {
            "lines": 238,
            "tokens": 2343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/UniversalPageFinderModal.tsx": {
            "lines": 480,
            "tokens": 3945,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 174,
            "duplicatedTokens": 1523,
            "percentage": 36.25,
            "percentageTokens": 38.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/UniversalPageFinderModal-Refactored.tsx": {
            "lines": 386,
            "tokens": 2861,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 165,
            "duplicatedTokens": 1388,
            "percentage": 42.75,
            "percentageTokens": 48.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/QuickStylingDemo.tsx": {
            "lines": 288,
            "tokens": 2308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/DesignSystemTestPage.tsx": {
            "lines": 55,
            "tokens": 389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/DesignSystemPreview.tsx": {
            "lines": 210,
            "tokens": 1678,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/unified-view/UnifiedVisualizationView.tsx": {
            "lines": 447,
            "tokens": 3875,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/unified-view/UnifiedVisualizationExample.tsx": {
            "lines": 169,
            "tokens": 1470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/TagPill.tsx": {
            "lines": 6,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/SmartDialog.tsx": {
            "lines": 260,
            "tokens": 1634,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 88,
            "percentage": 3.08,
            "percentageTokens": 5.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/CardShell.tsx": {
            "lines": 6,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Button.tsx": {
            "lines": 6,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/test/TestRealBackendIntegration.tsx": {
            "lines": 240,
            "tokens": 2357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/test/ElementDiscoveryTestPage.tsx": {
            "lines": 255,
            "tokens": 2922,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/test/ArchitectureTestPage.tsx": {
            "lines": 57,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/template/TemplateLibrary.tsx": {
            "lines": 717,
            "tokens": 6648,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 13,
            "duplicatedTokens": 175,
            "percentage": 1.81,
            "percentageTokens": 2.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/template/TemplateIOManager.tsx": {
            "lines": 597,
            "tokens": 5149,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 23,
            "duplicatedTokens": 327,
            "percentage": 3.85,
            "percentageTokens": 6.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/template/TemplateEditor.tsx": {
            "lines": 686,
            "tokens": 6535,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 85,
            "percentage": 1.17,
            "percentageTokens": 1.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/task/PreciseAcquisitionForm.tsx": {
            "lines": 405,
            "tokens": 3327,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 92,
            "percentage": 1.73,
            "percentageTokens": 2.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/task/ContactFollowForm.tsx": {
            "lines": 207,
            "tokens": 1737,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 92,
            "percentage": 3.38,
            "percentageTokens": 5.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/strategy-selector/StrategySelector.tsx": {
            "lines": 500,
            "tokens": 4706,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 47,
            "duplicatedTokens": 630,
            "percentage": 9.4,
            "percentageTokens": 13.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/strategy-selector/CompactStrategyMenu.tsx": {
            "lines": 327,
            "tokens": 2664,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 148,
            "percentage": 3.36,
            "percentageTokens": 5.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-cards/ModernStepCard.tsx": {
            "lines": 323,
            "tokens": 2219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/TestResultDetail.tsx": {
            "lines": 228,
            "tokens": 2248,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 75,
            "percentage": 3.07,
            "percentageTokens": 3.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/TestResultCopyButton.tsx": {
            "lines": 58,
            "tokens": 491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/MultiDeviceTestLauncher.tsx": {
            "lines": 99,
            "tokens": 1301,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/MultiDeviceResultPanel.tsx": {
            "lines": 62,
            "tokens": 649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/MatchingStrategyTag.tsx": {
            "lines": 126,
            "tokens": 941,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/SmartPageFinderModal.tsx": {
            "lines": 350,
            "tokens": 2691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/SelectedElementsList.tsx": {
            "lines": 118,
            "tokens": 963,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/PageInfoDisplay.tsx": {
            "lines": 162,
            "tokens": 1515,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/ElementSearchFilter.tsx": {
            "lines": 86,
            "tokens": 718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/ElementHierarchyTree.tsx": {
            "lines": 354,
            "tokens": 3519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/AnalysisStatistics.tsx": {
            "lines": 247,
            "tokens": 2059,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/ActionExecutor.tsx": {
            "lines": 230,
            "tokens": 1893,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-navigation-finder/SmartNavigationStepBuilder.tsx": {
            "lines": 631,
            "tokens": 6016,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 108,
            "duplicatedTokens": 1101,
            "percentage": 17.12,
            "percentageTokens": 18.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-navigation-finder/SmartNavigationModal.tsx": {
            "lines": 299,
            "tokens": 2422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-navigation-finder/SmartNavigationFinder.tsx": {
            "lines": 595,
            "tokens": 5545,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 92,
            "duplicatedTokens": 961,
            "percentage": 15.46,
            "percentageTokens": 17.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-element-finder/SmartElementFinder.tsx": {
            "lines": 457,
            "tokens": 4494,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 140,
            "percentage": 3.5,
            "percentageTokens": 3.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart/SmartAppSelector.tsx": {
            "lines": 431,
            "tokens": 4109,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart/LaunchAppSmartComponent.tsx": {
            "lines": 376,
            "tokens": 2995,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/TemplateManagementSystem.tsx": {
            "lines": 909,
            "tokens": 7667,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 234,
            "percentage": 2.75,
            "percentageTokens": 3.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/RiskControlManagementPanel.tsx": {
            "lines": 650,
            "tokens": 5536,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/EnhancedTaskManagementDashboard.tsx": {
            "lines": 789,
            "tokens": 6839,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 234,
            "percentage": 3.17,
            "percentageTokens": 3.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/DailyReportManager.tsx": {
            "lines": 467,
            "tokens": 3406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/FilterBar.tsx": {
            "lines": 13,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/navigation/NavigationStepDisplay.tsx": {
            "lines": 95,
            "tokens": 796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/navigation/NavigationBarDetector.tsx": {
            "lines": 388,
            "tokens": 3481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/native-dashboard/NativeAntDashboard.tsx": {
            "lines": 283,
            "tokens": 2243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/native-antd/NativePage.tsx": {
            "lines": 50,
            "tokens": 265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard/LoopHeader.tsx": {
            "lines": 151,
            "tokens": 1010,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard/LoopConfigForm.tsx": {
            "lines": 95,
            "tokens": 769,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard/index.tsx": {
            "lines": 110,
            "tokens": 941,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 212,
            "percentage": 14.55,
            "percentageTokens": 22.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/loop-control/LoopBuilder.tsx": {
            "lines": 529,
            "tokens": 4844,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 334,
            "duplicatedTokens": 3120,
            "percentage": 63.14,
            "percentageTokens": 64.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/loop-control/AdvancedLoopBuilder.tsx": {
            "lines": 736,
            "tokens": 6670,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 334,
            "duplicatedTokens": 3120,
            "percentage": 45.38,
            "percentageTokens": 46.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/StatusBar.tsx": {
            "lines": 63,
            "tokens": 513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Sidebar_fixed.tsx": {
            "lines": 166,
            "tokens": 1322,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 280,
            "percentage": 18.67,
            "percentageTokens": 21.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Sidebar.tsx": {
            "lines": 194,
            "tokens": 1601,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 280,
            "percentage": 15.98,
            "percentageTokens": 17.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/PageWrapper.tsx": {
            "lines": 109,
            "tokens": 800,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/PageShell.tsx": {
            "lines": 175,
            "tokens": 1104,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 88,
            "percentage": 4.57,
            "percentageTokens": 7.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MainLayout.tsx": {
            "lines": 76,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/AppHeader.tsx": {
            "lines": 139,
            "tokens": 1108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow/FlowScriptBuilder.tsx": {
            "lines": 35,
            "tokens": 396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/execution/SimpleExecutionMonitor.tsx": {
            "lines": 690,
            "tokens": 6032,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 537,
            "duplicatedTokens": 4861,
            "percentage": 77.83,
            "percentageTokens": 80.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/execution/ScriptExecutionMonitor.tsx": {
            "lines": 697,
            "tokens": 6170,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 532,
            "duplicatedTokens": 4773,
            "percentage": 76.33,
            "percentageTokens": 77.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/PageSelector.tsx": {
            "lines": 231,
            "tokens": 1944,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/HierarchyTreeViewerFixed.tsx": {
            "lines": 559,
            "tokens": 5379,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 201,
            "duplicatedTokens": 2132,
            "percentage": 35.96,
            "percentageTokens": 39.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/HierarchyTreeViewer.tsx": {
            "lines": 515,
            "tokens": 5271,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 162,
            "duplicatedTokens": 1697,
            "percentage": 31.46,
            "percentageTokens": 32.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/EnhancedHierarchyTreeViewer.tsx": {
            "lines": 511,
            "tokens": 5054,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 235,
            "duplicatedTokens": 2590,
            "percentage": 45.99,
            "percentageTokens": 51.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementXmlHierarchyTab.tsx": {
            "lines": 403,
            "tokens": 3242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementMatchInfo.tsx": {
            "lines": 224,
            "tokens": 2169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementFieldsViewerGuide.tsx": {
            "lines": 292,
            "tokens": 2334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementFieldsViewer.tsx": {
            "lines": 337,
            "tokens": 3521,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/CachedPageSelector.tsx": {
            "lines": 243,
            "tokens": 2221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/CachedHierarchyTreeViewer.tsx": {
            "lines": 536,
            "tokens": 5542,
            "sources": 1,
            "clones": 15,
            "duplicatedLines": 274,
            "duplicatedTokens": 3025,
            "percentage": 51.12,
            "percentageTokens": 54.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/CachedElementXmlHierarchyTab.tsx": {
            "lines": 126,
            "tokens": 1003,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/FieldMatchingController.tsx": {
            "lines": 309,
            "tokens": 3170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/ElementNameEditor.tsx": {
            "lines": 625,
            "tokens": 4729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/ElementHierarchyDisplay.tsx": {
            "lines": 325,
            "tokens": 3197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/ConstraintFieldEditor.tsx": {
            "lines": 394,
            "tokens": 3516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/BatchRuleConfigPanel.tsx": {
            "lines": 235,
            "tokens": 1929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-discovery-test/ElementDiscoveryTestPage.tsx": {
            "lines": 195,
            "tokens": 1464,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/RealTimeDeviceMonitor.tsx": {
            "lines": 330,
            "tokens": 3061,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/RealDeviceManager.tsx": {
            "lines": 237,
            "tokens": 1755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/DeviceList.tsx": {
            "lines": 58,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/CoordinateCapture.tsx": {
            "lines": 319,
            "tokens": 2856,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/QuickAppSelectorTest.tsx": {
            "lines": 138,
            "tokens": 1033,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 96,
            "percentage": 3.62,
            "percentageTokens": 9.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/GlobalAdbMonitor.tsx": {
            "lines": 148,
            "tokens": 1128,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/XiaohongshuAutoFollow.tsx": {
            "lines": 19,
            "tokens": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/VcfImporter.tsx": {
            "lines": 177,
            "tokens": 1570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/VcfImportDialog.tsx": {
            "lines": 392,
            "tokens": 3062,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/VcfImportDemo.tsx": {
            "lines": 200,
            "tokens": 1767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/ImportAndFollow.tsx": {
            "lines": 475,
            "tokens": 4320,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/EnhancedImportAndFollow.tsx": {
            "lines": 421,
            "tokens": 4021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/ContactReader.tsx": {
            "lines": 517,
            "tokens": 4585,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/ProgressBar.tsx": {
            "lines": 59,
            "tokens": 487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/PlatformSelector.tsx": {
            "lines": 63,
            "tokens": 453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/ErrorBoundary.tsx": {
            "lines": 44,
            "tokens": 444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/BalanceDisplay.tsx": {
            "lines": 59,
            "tokens": 434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/AuthGuard.tsx": {
            "lines": 56,
            "tokens": 381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/StatusBar.tsx": {
            "lines": 20,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/Sidebar.tsx": {
            "lines": 39,
            "tokens": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/HeaderBar.tsx": {
            "lines": 20,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/AppShell.tsx": {
            "lines": 50,
            "tokens": 369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adb-xml-inspector/AdbXmlInspector.tsx": {
            "lines": 622,
            "tokens": 5360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/AntTableAdapter.tsx": {
            "lines": 10,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/AntFormAdapter.tsx": {
            "lines": 10,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/page-analysis/PageAnalysisProvider.tsx": {
            "lines": 35,
            "tokens": 247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/TokenBridge.tsx": {
            "lines": 53,
            "tokens": 517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/ThemeProvider.tsx": {
            "lines": 56,
            "tokens": 632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/ThemeBridge.tsx": {
            "lines": 245,
            "tokens": 2513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/providers/GlobalAdbProvider.tsx": {
            "lines": 120,
            "tokens": 657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/UniversalUITestPage.tsx": {
            "lines": 162,
            "tokens": 1485,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/UnifiedViewDemo.tsx": {
            "lines": 258,
            "tokens": 2212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/UnifiedStepCardDemoPage.tsx": {
            "lines": 14,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/UIShowcasePage.tsx": {
            "lines": 150,
            "tokens": 1333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ThemeSettingsPage.tsx": {
            "lines": 221,
            "tokens": 1872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ThemeEnhancementDemo.tsx": {
            "lines": 369,
            "tokens": 2847,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/TestCommandFix.tsx": {
            "lines": 233,
            "tokens": 1898,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 96,
            "percentage": 2.15,
            "percentageTokens": 5.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/StrategyDemo.tsx": {
            "lines": 276,
            "tokens": 2411,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 85,
            "percentage": 2.17,
            "percentageTokens": 3.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/StrategyBackendDemo.tsx": {
            "lines": 194,
            "tokens": 1897,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 85,
            "percentage": 3.09,
            "percentageTokens": 4.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/StepCardSystemDemoPage.tsx": {
            "lines": 15,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmokeTestPage.tsx": {
            "lines": 16,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage_New.tsx": {
            "lines": 357,
            "tokens": 3244,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 86,
            "percentage": 1.68,
            "percentageTokens": 2.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage.tsx": {
            "lines": 145,
            "tokens": 1162,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartNavigationTestPage.tsx": {
            "lines": 326,
            "tokens": 2859,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartElementFinderTestPage.tsx": {
            "lines": 171,
            "tokens": 1640,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 103,
            "percentage": 6.43,
            "percentageTokens": 6.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ScriptBuilderTestPage.tsx": {
            "lines": 334,
            "tokens": 2794,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/RealTimeDeviceTrackingPage.tsx": {
            "lines": 15,
            "tokens": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PermissionTestPage.tsx": {
            "lines": 127,
            "tokens": 1209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/OptimizationSummaryPage.tsx": {
            "lines": 336,
            "tokens": 2780,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NavigationDetectorTestPage.tsx": {
            "lines": 190,
            "tokens": 1876,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ModernAdbDiagnosticPage.tsx": {
            "lines": 31,
            "tokens": 275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/InspectorPage.tsx": {
            "lines": 62,
            "tokens": 683,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/HealthCheckDemoPage.tsx": {
            "lines": 165,
            "tokens": 1378,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ExecutionMonitorPage.tsx": {
            "lines": 182,
            "tokens": 1402,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/EmployeePageBrandNew.tsx": {
            "lines": 270,
            "tokens": 2132,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 308,
            "percentage": 9.63,
            "percentageTokens": 14.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/EmployeePage.tsx": {
            "lines": 189,
            "tokens": 1689,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 308,
            "percentage": 13.76,
            "percentageTokens": 18.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/EmployeePage.refactored.tsx": {
            "lines": 241,
            "tokens": 1947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ElementDiscoveryTestPage_backup.tsx": {
            "lines": 243,
            "tokens": 1792,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 227,
            "duplicatedTokens": 1634,
            "percentage": 93.42,
            "percentageTokens": 91.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ElementDiscoveryTestPage.tsx": {
            "lines": 235,
            "tokens": 1715,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 227,
            "duplicatedTokens": 1634,
            "percentage": 96.6,
            "percentageTokens": 95.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DeviceManagementPageBrandNew.tsx": {
            "lines": 341,
            "tokens": 2781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DesignTokensDemo.tsx": {
            "lines": 335,
            "tokens": 2938,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ContactImportPageBrandNew.tsx": {
            "lines": 57,
            "tokens": 322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ContactAutomationPage_sindre.tsx": {
            "lines": 149,
            "tokens": 1351,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ContactAutomationPage.tsx": {
            "lines": 76,
            "tokens": 770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ComprehensiveAdbPage.tsx": {
            "lines": 15,
            "tokens": 78,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/BusinessComponentsDemo.tsx": {
            "lines": 148,
            "tokens": 991,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/BrandShowcasePage.tsx": {
            "lines": 17,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AppLaunchTestPage.tsx": {
            "lines": 374,
            "tokens": 3724,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 245,
            "percentage": 4.81,
            "percentageTokens": 6.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdvancedLoopPage.tsx": {
            "lines": 66,
            "tokens": 595,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbPathTestPage.tsx": {
            "lines": 141,
            "tokens": 1272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbLayoutComparisonPage.tsx": {
            "lines": 31,
            "tokens": 284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard.tsx": {
            "lines": 33,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/UnifiedTaskEngineExample.tsx": {
            "lines": 546,
            "tokens": 4208,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 81,
            "percentage": 1.47,
            "percentageTokens": 1.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/TestUniversalUIClick.tsx": {
            "lines": 206,
            "tokens": 1821,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 302,
            "percentage": 17.48,
            "percentageTokens": 16.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/SmartPageFinderExample.tsx": {
            "lines": 127,
            "tokens": 1205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/PatternDemos.tsx": {
            "lines": 277,
            "tokens": 2301,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/AppWithContactImport.tsx": {
            "lines": 24,
            "tokens": 126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/AppLifecycleExample.tsx": {
            "lines": 362,
            "tokens": 3165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/AdbModuleUsageExample.tsx": {
            "lines": 104,
            "tokens": 912,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/AdapterDemos.tsx": {
            "lines": 300,
            "tokens": 2858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/WatchTargetList.tsx": {
            "lines": 438,
            "tokens": 3635,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 65,
            "duplicatedTokens": 565,
            "percentage": 14.84,
            "percentageTokens": 15.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/VisualPageAnalyzer.tsx": {
            "lines": 563,
            "tokens": 6225,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/UnifiedViewContainer.tsx": {
            "lines": 510,
            "tokens": 3769,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/UIAnalyzer.tsx": {
            "lines": 349,
            "tokens": 3014,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/TestResultsDisplay.tsx": {
            "lines": 236,
            "tokens": 1940,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 75,
            "percentage": 2.97,
            "percentageTokens": 3.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/TaskManagementCenter.tsx": {
            "lines": 727,
            "tokens": 6248,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 65,
            "duplicatedTokens": 565,
            "percentage": 8.94,
            "percentageTokens": 9.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/StepTestButton.tsx": {
            "lines": 196,
            "tokens": 1475,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/StepBundleManager.tsx": {
            "lines": 161,
            "tokens": 1315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/SmartVcfImporterNative.tsx": {
            "lines": 124,
            "tokens": 982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/SmartVcfImporter.tsx": {
            "lines": 474,
            "tokens": 4302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/SmartStepCardWrapper.tsx": {
            "lines": 86,
            "tokens": 711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/SmartStepCardWithBackend.tsx": {
            "lines": 163,
            "tokens": 1248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/RandomVcfGenerator.tsx": {
            "lines": 2,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/QuickPhoneMirror.tsx": {
            "lines": 234,
            "tokens": 1860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/PreciseAcquisitionDemo.tsx": {
            "lines": 387,
            "tokens": 3148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/NewAdbManagementExample.tsx": {
            "lines": 377,
            "tokens": 2835,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/NativeAntDesignApp.tsx": {
            "lines": 455,
            "tokens": 3315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ModernDashboard.tsx": {
            "lines": 213,
            "tokens": 1448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/MissingSnapshotDialog.tsx": {
            "lines": 105,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard.tsx": {
            "lines": 8,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopEndCardNative.tsx": {
            "lines": 221,
            "tokens": 1770,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 104,
            "percentage": 5.43,
            "percentageTokens": 5.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopEndCard.tsx": {
            "lines": 294,
            "tokens": 2500,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 237,
            "percentage": 8.5,
            "percentageTokens": 9.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/HealthCheckSystem.tsx": {
            "lines": 228,
            "tokens": 2084,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ErrorBoundary.tsx": {
            "lines": 95,
            "tokens": 751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EnhancedDraggableStepsContainer.tsx": {
            "lines": 184,
            "tokens": 1649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmployeeTable.tsx": {
            "lines": 107,
            "tokens": 903,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmployeeForm.tsx": {
            "lines": 225,
            "tokens": 1784,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepsContainer.tsx": {
            "lines": 232,
            "tokens": 2171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard.tsx": {
            "lines": 815,
            "tokens": 6691,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 22,
            "duplicatedTokens": 332,
            "percentage": 2.7,
            "percentageTokens": 4.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/CsvImportComponent.tsx": {
            "lines": 423,
            "tokens": 3370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/AntDesignDemo.tsx": {
            "lines": 25,
            "tokens": 205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main.tsx": {
            "lines": 26,
            "tokens": 179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 85,
            "tokens": 764,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 157331,
          "tokens": 1374001,
          "sources": 779,
          "clones": 274,
          "duplicatedLines": 5622,
          "duplicatedTokens": 55330,
          "percentage": 3.57,
          "percentageTokens": 4.03,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/strategy-configurator/EnhancedStrategyConfigurator.tsx": {
            "lines": 67,
            "tokens": 584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/enhanced-field-selector/FieldDescriptionPanel.tsx": {
            "lines": 210,
            "tokens": 1756,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/enhanced-field-selector/AdvancedFieldSelector.tsx": {
            "lines": 224,
            "tokens": 1932,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/element-presets/ElementPresetsRow.tsx": {
            "lines": 3,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/components/HiddenElementParentPreset.tsx": {
            "lines": 159,
            "tokens": 1357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/logic/ConfirmBulkDeleteDialog.tsx": {
            "lines": 38,
            "tokens": 450,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 64,
            "duplicatedTokens": 812,
            "percentage": 168.42,
            "percentageTokens": 180.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/logic/confirmBulkDelete.tsx": {
            "lines": 38,
            "tokens": 450,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 38,
            "duplicatedTokens": 450,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/components/RecordsTable.tsx": {
            "lines": 139,
            "tokens": 1558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/components/RecordActions.tsx": {
            "lines": 35,
            "tokens": 375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/components/ErrorDetailModal.tsx": {
            "lines": 30,
            "tokens": 359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/SmartLayoutToolbarFinal.tsx": {
            "lines": 6,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/ScrollableContainer.tsx": {
            "lines": 20,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/PerformantDraggableToolbar.tsx": {
            "lines": 148,
            "tokens": 1291,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 225,
            "duplicatedTokens": 1986,
            "percentage": 152.03,
            "percentageTokens": 153.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/LayoutVersionManager.tsx": {
            "lines": 156,
            "tokens": 1491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/LayoutControlToolbar.tsx": {
            "lines": 209,
            "tokens": 1585,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 132,
            "duplicatedTokens": 1133,
            "percentage": 63.16,
            "percentageTokens": 71.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/HeaderOnlyDragToolbar.tsx": {
            "lines": 106,
            "tokens": 904,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/HandleDraggableToolbar.tsx": {
            "lines": 180,
            "tokens": 1572,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 120,
            "duplicatedTokens": 1107,
            "percentage": 66.67,
            "percentageTokens": 70.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/FloatingLayoutToolbar.tsx": {
            "lines": 311,
            "tokens": 2448,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 132,
            "duplicatedTokens": 1133,
            "percentage": 42.44,
            "percentageTokens": 46.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/EnhancedResizablePanel.tsx": {
            "lines": 74,
            "tokens": 514,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/EnhancedDraggableToolbar.tsx": {
            "lines": 129,
            "tokens": 1027,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 105,
            "duplicatedTokens": 879,
            "percentage": 81.4,
            "percentageTokens": 85.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/DragStatusPanel.tsx": {
            "lines": 156,
            "tokens": 1284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/DraggableHeaderPanel.tsx": {
            "lines": 43,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/DragDiagnosticPanel.tsx": {
            "lines": 245,
            "tokens": 1884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/DeviceSpecificImportDialog.tsx": {
            "lines": 146,
            "tokens": 1152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-columns/SessionsTableColumns.tsx": {
            "lines": 213,
            "tokens": 2028,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/TimeFormatterCell.tsx": {
            "lines": 50,
            "tokens": 555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/LatestImportTimeCell.tsx": {
            "lines": 42,
            "tokens": 507,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/IndustryTagCell.tsx": {
            "lines": 73,
            "tokens": 530,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/table-cells/BatchIdCell.tsx": {
            "lines": 64,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/enhanced-import/UniversalImportButton.tsx": {
            "lines": 15,
            "tokens": 84,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/enhanced-import/EnhancedSessionImportButton.tsx": {
            "lines": 2,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/bulk-actions/BulkArchiveDialog.tsx": {
            "lines": 88,
            "tokens": 797,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/bulk-actions/BulkActionsBar.tsx": {
            "lines": 50,
            "tokens": 415,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/TextMatchingQuickActions.tsx": {
            "lines": 29,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/StrategyScoreCard.tsx": {
            "lines": 249,
            "tokens": 1954,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 502,
            "percentage": 21.69,
            "percentageTokens": 25.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/StrategyScoreBadge.tsx": {
            "lines": 9,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/StrategyRecommendationPanel.tsx": {
            "lines": 418,
            "tokens": 2894,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 96,
            "duplicatedTokens": 672,
            "percentage": 22.97,
            "percentageTokens": 23.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SetAsStepElementButton.tsx": {
            "lines": 124,
            "tokens": 990,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsTable.tsx": {
            "lines": 49,
            "tokens": 504,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsPreview.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsEditor.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/SelectedFieldsChips.tsx": {
            "lines": 3,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/ScoringUIDemo.tsx": {
            "lines": 292,
            "tokens": 2631,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/PositiveConditionsEditor.tsx": {
            "lines": 24,
            "tokens": 382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/NegativeConditionsEditor.tsx": {
            "lines": 28,
            "tokens": 390,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/MatchPresetsRow.tsx": {
            "lines": 21,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/InteractiveScoringPanel.tsx": {
            "lines": 424,
            "tokens": 3276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/EnhancedMatchPresetsRow.tsx": {
            "lines": 49,
            "tokens": 436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/step-editor/components/TapParameters.tsx": {
            "lines": 213,
            "tokens": 1532,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 417,
            "percentage": 26.29,
            "percentageTokens": 27.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/step-editor/components/BasicConfig.tsx": {
            "lines": 113,
            "tokens": 756,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 417,
            "percentage": 49.56,
            "percentageTokens": 55.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/ThemeControlSection.tsx": {
            "lines": 5,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/ParametersRenderSection.tsx": {
            "lines": 57,
            "tokens": 527,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/FormBasicSection.tsx": {
            "lines": 26,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/components/ActionButtonsSection.tsx": {
            "lines": 14,
            "tokens": 87,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/semi-auto/SemiAutoExecutionDrawer.tsx": {
            "lines": 247,
            "tokens": 1892,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/components/TaskStatusCard.tsx": {
            "lines": 3,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/components/TaskExecutionCenter.tsx": {
            "lines": 302,
            "tokens": 2414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/components/SystemMetrics.tsx": {
            "lines": 46,
            "tokens": 405,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/components/DeviceStatusCard.tsx": {
            "lines": 13,
            "tokens": 100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/components/TaskList.tsx": {
            "lines": 206,
            "tokens": 1939,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/components/ReplyTaskManager.tsx": {
            "lines": 197,
            "tokens": 1637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/industry-monitoring/components/MonitoringConfigPanel.tsx": {
            "lines": 296,
            "tokens": 2380,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 30,
            "duplicatedTokens": 240,
            "percentage": 10.14,
            "percentageTokens": 10.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/account-monitoring/components/AccountMonitoringConfigPanel.tsx": {
            "lines": 478,
            "tokens": 4043,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/account-monitoring/components/AccountMonitoringConfig.tsx": {
            "lines": 265,
            "tokens": 1930,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 30,
            "duplicatedTokens": 240,
            "percentage": 11.32,
            "percentageTokens": 12.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/components/SelectedSessionsToolbar.tsx": {
            "lines": 44,
            "tokens": 363,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/TxtImportRecordsModal.tsx": {
            "lines": 95,
            "tokens": 756,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 124,
            "percentage": 18.95,
            "percentageTokens": 16.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/result/ViewStatsBar.tsx": {
            "lines": 6,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/result/FailReasonChips.tsx": {
            "lines": 31,
            "tokens": 381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/TxtImportPanel.tsx": {
            "lines": 74,
            "tokens": 584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/ResizableDraggablePanel.tsx": {
            "lines": 48,
            "tokens": 329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/NumberPoolPanel.tsx": {
            "lines": 129,
            "tokens": 911,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/LayoutManager.tsx": {
            "lines": 100,
            "tokens": 693,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/DeviceAssignmentPanel.tsx": {
            "lines": 60,
            "tokens": 580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/NumberPoolFieldRenderers.tsx": {
            "lines": 130,
            "tokens": 1381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/ColumnConfigPanel.tsx": {
            "lines": 45,
            "tokens": 451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/ResizablePanel.tsx": {
            "lines": 38,
            "tokens": 206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/GridLayoutWrapperEnhanced.tsx": {
            "lines": 49,
            "tokens": 318,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 240,
            "percentage": 67.35,
            "percentageTokens": 75.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/GridLayoutWrapper.tsx": {
            "lines": 50,
            "tokens": 364,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 240,
            "percentage": 66,
            "percentageTokens": 65.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportSettingsButton.tsx": {
            "lines": 67,
            "tokens": 597,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportPreviewModal.tsx": {
            "lines": 12,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportHeaderMapModal.tsx": {
            "lines": 9,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportFilenameTemplateModal.tsx": {
            "lines": 8,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportColumnVisibilityModal.tsx": {
            "lines": 20,
            "tokens": 273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/export/ExportColumnOrderModal.tsx": {
            "lines": 13,
            "tokens": 233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/drag-drop-layout/DragDropGrid.tsx": {
            "lines": 177,
            "tokens": 1338,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/Toolbar.tsx": {
            "lines": 23,
            "tokens": 254,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/DeviceCard.tsx": {
            "lines": 189,
            "tokens": 2714,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/DeviceAssignmentGrid.tsx": {
            "lines": 43,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/columns/ColumnSettingsModal.tsx": {
            "lines": 128,
            "tokens": 1589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/columns/ColumnSettingsDropdown.tsx": {
            "lines": 31,
            "tokens": 448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/NumbersTable.tsx": {
            "lines": 114,
            "tokens": 1264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/FiltersBar.tsx": {
            "lines": 60,
            "tokens": 652,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/ActionsBar.tsx": {
            "lines": 22,
            "tokens": 305,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 279,
            "percentage": 86.36,
            "percentageTokens": 91.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/components/PagePreview.tsx": {
            "lines": 296,
            "tokens": 3431,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/components/LeftControlPanel.tsx": {
            "lines": 196,
            "tokens": 3877,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/components/ElementList.tsx": {
            "lines": 44,
            "tokens": 782,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/TreeToolbar.tsx": {
            "lines": 85,
            "tokens": 764,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/TreeStatsPanel.tsx": {
            "lines": 180,
            "tokens": 1585,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/TreeNode.tsx": {
            "lines": 120,
            "tokens": 966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/components/QualityBadge.tsx": {
            "lines": 57,
            "tokens": 379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/XPathTemplatesPanel.tsx": {
            "lines": 14,
            "tokens": 309,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 34,
            "duplicatedTokens": 749,
            "percentage": 242.86,
            "percentageTokens": 242.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/XPathHelpPanel.tsx": {
            "lines": 6,
            "tokens": 129,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 129,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/XmlSourcePanel.tsx": {
            "lines": 16,
            "tokens": 220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/ScreenPreviewPanel.tsx": {
            "lines": 23,
            "tokens": 179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/ResultsAndXPathPanel.tsx": {
            "lines": 43,
            "tokens": 522,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 124,
            "percentage": 11.63,
            "percentageTokens": 23.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/PreferencesPanel.tsx": {
            "lines": 13,
            "tokens": 269,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/LocatorAdvisorPanel.tsx": {
            "lines": 14,
            "tokens": 333,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 333,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/FieldDocPanel.tsx": {
            "lines": 9,
            "tokens": 166,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 163,
            "percentage": 100,
            "percentageTokens": 98.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/BreadcrumbPanel.tsx": {
            "lines": 3,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/TreeView.tsx": {
            "lines": 51,
            "tokens": 395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/Toolbar.tsx": {
            "lines": 88,
            "tokens": 776,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/PanelsContainer.tsx": {
            "lines": 64,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/MainLayout.tsx": {
            "lines": 53,
            "tokens": 362,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/EnhancedChildElementListModal.tsx": {
            "lines": 124,
            "tokens": 1030,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/EnhancedChildElementCard.tsx": {
            "lines": 166,
            "tokens": 1551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/ChildElementSelectorModal.tsx": {
            "lines": 308,
            "tokens": 2889,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/ChildElementListModal.tsx": {
            "lines": 108,
            "tokens": 1036,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/components/ChildElementCard.tsx": {
            "lines": 149,
            "tokens": 1347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ActionsToolbar/ActionsToolbar.tsx": {
            "lines": 50,
            "tokens": 316,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/components/InteractiveTreeNode.tsx": {
            "lines": 67,
            "tokens": 591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/strategy/StrategyControlsBlock.tsx": {
            "lines": 0,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/strategy/BatchMatchBlock.tsx": {
            "lines": 3,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal-native/StepEditModalNative.tsx": {
            "lines": 43,
            "tokens": 304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal-native/ParametersFormSection.tsx": {
            "lines": 28,
            "tokens": 300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal-native/ActionConfigSection.tsx": {
            "lines": 45,
            "tokens": 325,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 74,
            "duplicatedTokens": 538,
            "percentage": 164.44,
            "percentageTokens": 165.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/step-edit-modal/StepEditModalModular.tsx": {
            "lines": 43,
            "tokens": 317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/smart-step-adder/SmartStepEditorModal.tsx": {
            "lines": 270,
            "tokens": 2194,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 174,
            "duplicatedTokens": 1295,
            "percentage": 64.44,
            "percentageTokens": 59.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/task-management/TaskManagementCenter.tsx": {
            "lines": 94,
            "tokens": 556,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/SmartRecommendationPanel.tsx": {
            "lines": 86,
            "tokens": 652,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/RecommendationFilters.tsx": {
            "lines": 234,
            "tokens": 2130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/smart-recommendation/RecommendationCard.tsx": {
            "lines": 168,
            "tokens": 1565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/safety-protection/DuplicationProtectionPanel.tsx": {
            "lines": 408,
            "tokens": 3259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/reply-management/EnhancedReplyTaskManager.tsx": {
            "lines": 498,
            "tokens": 4353,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/monitoring-dashboard/MonitoringDashboard.tsx": {
            "lines": 46,
            "tokens": 300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/follow-executor/FollowTaskExecutor.tsx": {
            "lines": 526,
            "tokens": 4784,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 70,
            "duplicatedTokens": 748,
            "percentage": 13.31,
            "percentageTokens": 15.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/DuplicationLogViewer.tsx": {
            "lines": 388,
            "tokens": 3459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/duplication-protection/DuplicationConfigPanel.tsx": {
            "lines": 477,
            "tokens": 3967,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/data-filter/SimpleDataFilter.tsx": {
            "lines": 184,
            "tokens": 1507,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 60,
            "duplicatedTokens": 420,
            "percentage": 32.61,
            "percentageTokens": 27.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/data-filter/DataFilterEnhancement.tsx": {
            "lines": 368,
            "tokens": 2736,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 114,
            "duplicatedTokens": 806,
            "percentage": 30.98,
            "percentageTokens": 29.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Wireless.tsx": {
            "lines": 33,
            "tokens": 803,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Verify.tsx": {
            "lines": 20,
            "tokens": 302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/UsbTrust.tsx": {
            "lines": 18,
            "tokens": 295,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Prerequisites.tsx": {
            "lines": 14,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/steps/Done.tsx": {
            "lines": 3,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/components/StatusComponents.tsx": {
            "lines": 169,
            "tokens": 1429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/components/FormComponents.tsx": {
            "lines": 247,
            "tokens": 1828,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/components/DeviceSummary.tsx": {
            "lines": 25,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/partials/SmartVariantBadge.tsx": {
            "lines": 154,
            "tokens": 1428,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-strategy-mode-selector.tsx": {
            "lines": 213,
            "tokens": 2043,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 20,
            "duplicatedTokens": 328,
            "percentage": 9.39,
            "percentageTokens": 16.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-strategy-candidates-section.tsx": {
            "lines": 167,
            "tokens": 1477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-smart-step-integration.tsx": {
            "lines": 122,
            "tokens": 883,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-publish-readiness-modal.tsx": {
            "lines": 201,
            "tokens": 1662,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-fallback-badge.tsx": {
            "lines": 70,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-enhanced-step-card-integration.tsx": {
            "lines": 145,
            "tokens": 1148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-analysis-status-section.tsx": {
            "lines": 123,
            "tokens": 1027,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/intelligent-analysis-popover-ui.tsx": {
            "lines": 226,
            "tokens": 1649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/AnalysisStatusSection.tsx": {
            "lines": 152,
            "tokens": 1055,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/step-card-system/StepCardSystem.tsx": {
            "lines": 301,
            "tokens": 2275,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 88,
            "duplicatedTokens": 540,
            "percentage": 29.24,
            "percentageTokens": 23.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/template-management/components/TemplateManager.tsx": {
            "lines": 337,
            "tokens": 2860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskTable.tsx": {
            "lines": 124,
            "tokens": 1309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskStatsCards.tsx": {
            "lines": 37,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskGenerationModal.tsx": {
            "lines": 105,
            "tokens": 864,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskExecutor.tsx": {
            "lines": 621,
            "tokens": 5333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskEngineManager.tsx": {
            "lines": 87,
            "tokens": 615,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskDeviceConsole.tsx": {
            "lines": 249,
            "tokens": 2292,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/task-engine/components/TaskAssignmentModal.tsx": {
            "lines": 56,
            "tokens": 433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/EnhancedWatchTargetManager.tsx": {
            "lines": 485,
            "tokens": 4300,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 423,
            "percentage": 9.48,
            "percentageTokens": 9.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/DailyReportManager.tsx": {
            "lines": 213,
            "tokens": 1901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/CommentSystemManager.tsx": {
            "lines": 499,
            "tokens": 4479,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 423,
            "percentage": 9.22,
            "percentageTokens": 9.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/shared/components/BackendValidationConsole.tsx": {
            "lines": 203,
            "tokens": 1861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/rate-control/components/RateControlManager.tsx": {
            "lines": 581,
            "tokens": 5415,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/comment-collection/components/CommentCollectionManager.tsx": {
            "lines": 358,
            "tokens": 2905,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/candidate-pool/components/CandidatePoolManager.tsx": {
            "lines": 412,
            "tokens": 3698,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/audit-system/components/AuditManager.tsx": {
            "lines": 561,
            "tokens": 4942,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/utils/ContactWorkbenchColumns.tsx": {
            "lines": 28,
            "tokens": 339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepUpload.tsx": {
            "lines": 17,
            "tokens": 175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepSourceSelect.tsx": {
            "lines": 46,
            "tokens": 520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepProgress.tsx": {
            "lines": 39,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepDetectDevices.tsx": {
            "lines": 24,
            "tokens": 267,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepConfigure.tsx": {
            "lines": 21,
            "tokens": 270,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/SessionActionsBar.tsx": {
            "lines": 39,
            "tokens": 534,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 279,
            "percentage": 48.72,
            "percentageTokens": 52.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/sessions/ImportSessionsModal.tsx": {
            "lines": 62,
            "tokens": 752,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/providers/ContactImportProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/WorkbenchTableColumns.tsx": {
            "lines": 85,
            "tokens": 786,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/WorkbenchPanels.tsx": {
            "lines": 74,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/WorkbenchNumbersActionsBar.tsx": {
            "lines": 86,
            "tokens": 643,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/VcfImportButton.tsx": {
            "lines": 28,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/TxtImportRecordsManager.tsx": {
            "lines": 321,
            "tokens": 2753,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 486,
            "percentage": 13.71,
            "percentageTokens": 17.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/TxtImportRecordsList.tsx": {
            "lines": 132,
            "tokens": 1311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/StatsBar.tsx": {
            "lines": 16,
            "tokens": 322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/SourceFoldersList.tsx": {
            "lines": 21,
            "tokens": 252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/SourceFolderAddButton.tsx": {
            "lines": 0,
            "tokens": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceStatusCard.tsx": {
            "lines": 41,
            "tokens": 401,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentTable.tsx": {
            "lines": 120,
            "tokens": 1481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/ConflictNavigator.tsx": {
            "lines": 3,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/BatchResultModal.tsx": {
            "lines": 173,
            "tokens": 2361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/BatchPreviewModal.tsx": {
            "lines": 18,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/BatchManagerDrawer.tsx": {
            "lines": 25,
            "tokens": 284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/ui/ImportStrategySelector.tsx": {
            "lines": 175,
            "tokens": 1598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/ui/ImportStrategyDialog.tsx": {
            "lines": 159,
            "tokens": 1219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/ui/ImportResultDisplay.tsx": {
            "lines": 208,
            "tokens": 1775,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/xpath-monitor/XPathPerformancePanel.tsx": {
            "lines": 36,
            "tokens": 261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/xpath-monitor/XPathPerformanceMonitor.tsx": {
            "lines": 146,
            "tokens": 1143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/VisualPagePreview.tsx": {
            "lines": 276,
            "tokens": 1868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/VisualPageAnalyzerContent.tsx": {
            "lines": 190,
            "tokens": 1557,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/visual-view/VisualElementView.tsx": {
            "lines": 141,
            "tokens": 1206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/tree-view/UIElementTree.tsx": {
            "lines": 101,
            "tokens": 832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/ScrcpyControlView.tsx": {
            "lines": 230,
            "tokens": 2809,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/EmbeddedScrcpyPlayer.tsx": {
            "lines": 15,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/mirror-view/CapabilityChips.tsx": {
            "lines": 5,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/list-view/ElementListView.tsx": {
            "lines": 84,
            "tokens": 860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/XPathTestResultsPanel.tsx": {
            "lines": 23,
            "tokens": 400,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 181,
            "percentage": 56.52,
            "percentageTokens": 45.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/XPathBuilder.tsx": {
            "lines": 44,
            "tokens": 815,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/TreeRow.tsx": {
            "lines": 155,
            "tokens": 1851,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/SearchFieldToggles.tsx": {
            "lines": 5,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/ScreenPreview.tsx": {
            "lines": 49,
            "tokens": 356,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/NodeDetail.tsx": {
            "lines": 39,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/MatchResultsPanel.tsx": {
            "lines": 248,
            "tokens": 2750,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 181,
            "percentage": 5.24,
            "percentageTokens": 6.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/MatchCountSummary.tsx": {
            "lines": 2,
            "tokens": 76,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/MatchBadges.tsx": {
            "lines": 0,
            "tokens": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/GridElementView.tsx": {
            "lines": 470,
            "tokens": 3808,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 332,
            "percentage": 9.36,
            "percentageTokens": 8.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/GridElementView.refactored.tsx": {
            "lines": 61,
            "tokens": 390,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/FilterBar.tsx": {
            "lines": 56,
            "tokens": 561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/CopyChip.tsx": {
            "lines": 3,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/Breadcrumbs.tsx": {
            "lines": 5,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/AdvancedFilterSummary.tsx": {
            "lines": 3,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/resizable/ResizableHeaderCell.tsx": {
            "lines": 20,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/StepItemBase.tsx": {
            "lines": 32,
            "tokens": 523,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 52,
            "duplicatedTokens": 843,
            "percentage": 162.5,
            "percentageTokens": 161.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/StepItem.tsx": {
            "lines": 32,
            "tokens": 511,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 52,
            "duplicatedTokens": 831,
            "percentage": 162.5,
            "percentageTokens": 162.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ScriptStepItemStable.tsx": {
            "lines": 32,
            "tokens": 511,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 511,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ScriptStepItem.tsx": {
            "lines": 32,
            "tokens": 523,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 523,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/script-builder/components/ScriptBuilderView.tsx": {
            "lines": 18,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/panels/MainViewContainer.tsx": {
            "lines": 2,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/panels/LeftControlPanel.tsx": {
            "lines": 33,
            "tokens": 205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/filter/FilterSettingsPanel.tsx": {
            "lines": 74,
            "tokens": 821,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/ViewModeSelector.tsx": {
            "lines": 78,
            "tokens": 602,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/ElementList.tsx": {
            "lines": 94,
            "tokens": 781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/DeviceSelector.tsx": {
            "lines": 111,
            "tokens": 798,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/components/AnalysisPanel.tsx": {
            "lines": 184,
            "tokens": 1499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/SidebarTree.tsx": {
            "lines": 23,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/ResultList.tsx": {
            "lines": 31,
            "tokens": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/NodeDetailPanel.tsx": {
            "lines": 0,
            "tokens": 23,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/GridCanvas.tsx": {
            "lines": 4,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/components/FilterBar.tsx": {
            "lines": 6,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/components/DraggableHeaderPanel.tsx": {
            "lines": 96,
            "tokens": 631,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/__tests__/ElementSelectionPopover.test.tsx": {
            "lines": 147,
            "tokens": 1289,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 230,
            "duplicatedTokens": 2032,
            "percentage": 156.46,
            "percentageTokens": 157.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/strategy-analysis/StrategyAnalysisModal.tsx": {
            "lines": 193,
            "tokens": 2221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/TextToParentExample.tsx": {
            "lines": 26,
            "tokens": 261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/SelfElementCard.tsx": {
            "lines": 263,
            "tokens": 2577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ParentElementCard.tsx": {
            "lines": 151,
            "tokens": 1490,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ElementDiscoveryModal.tsx": {
            "lines": 228,
            "tokens": 1801,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ElementDiscoveryDebugInfo.tsx": {
            "lines": 101,
            "tokens": 1127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ElementDiscoveryDebugger.tsx": {
            "lines": 137,
            "tokens": 1407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ChildElementCard.tsx": {
            "lines": 4,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/ArchitectureDiagram.tsx": {
            "lines": 263,
            "tokens": 2345,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/components/PopoverActionButtons.tsx": {
            "lines": 443,
            "tokens": 3784,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 360,
            "duplicatedTokens": 3120,
            "percentage": 81.26,
            "percentageTokens": 82.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/components/GhostOverlayToggle.tsx": {
            "lines": 5,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/theme-advanced/ThemePresetSelector.tsx": {
            "lines": 87,
            "tokens": 793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/theme-advanced/ThemeColorPicker.tsx": {
            "lines": 27,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/theme-advanced/ThemeAnimationSettings.tsx": {
            "lines": 52,
            "tokens": 552,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/providers/EnhancedThemeProvider.tsx": {
            "lines": 1,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/components/ThemeSwitcher.tsx": {
            "lines": 232,
            "tokens": 2010,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 204,
            "duplicatedTokens": 1624,
            "percentage": 87.93,
            "percentageTokens": 80.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/components/ThemePreview.tsx": {
            "lines": 207,
            "tokens": 1803,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/theme-system/components/ThemeConfigPanel.tsx": {
            "lines": 234,
            "tokens": 2121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/ThemeEnhanced.tsx": {
            "lines": 234,
            "tokens": 1797,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepList.tsx": {
            "lines": 136,
            "tokens": 1014,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepEditor.tsx": {
            "lines": 163,
            "tokens": 1011,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 84,
            "duplicatedTokens": 537,
            "percentage": 51.53,
            "percentageTokens": 53.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepEditor-Refactored.tsx": {
            "lines": 172,
            "tokens": 1123,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 84,
            "duplicatedTokens": 537,
            "percentage": 48.84,
            "percentageTokens": 47.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/StepCard.tsx": {
            "lines": 170,
            "tokens": 1247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/ScriptBuilderContainer.tsx": {
            "lines": 170,
            "tokens": 1399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/script-builder/components/ExecutionControl.tsx": {
            "lines": 285,
            "tokens": 2255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/components/PropertyPanel.tsx": {
            "lines": 219,
            "tokens": 1958,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/components/PageAnalyzerContainer.tsx": {
            "lines": 137,
            "tokens": 1083,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/components/ElementTree.tsx": {
            "lines": 136,
            "tokens": 1101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/RealtimeEditorCard.tsx": {
            "lines": 12,
            "tokens": 266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/FieldListCard.tsx": {
            "lines": 72,
            "tokens": 1270,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/DisplayNameCard.tsx": {
            "lines": 19,
            "tokens": 533,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 166,
            "percentage": 26.32,
            "percentageTokens": 31.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/CachedMappingCard.tsx": {
            "lines": 15,
            "tokens": 480,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 166,
            "percentage": 33.33,
            "percentageTokens": 34.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/AiRecommendationsCard.tsx": {
            "lines": 5,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/AdbCommandsCard.tsx": {
            "lines": 13,
            "tokens": 409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/StrategyArea.tsx": {
            "lines": 6,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/ContactActions.tsx": {
            "lines": 30,
            "tokens": 309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/body/AccentBars.tsx": {
            "lines": 1,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/components/TaskProgressPanel.tsx": {
            "lines": 68,
            "tokens": 752,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/components/StatisticsHeader.tsx": {
            "lines": 40,
            "tokens": 227,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 192,
            "percentage": 82.5,
            "percentageTokens": 84.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/components/StatisticsCards.tsx": {
            "lines": 146,
            "tokens": 1186,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 116,
            "duplicatedTokens": 980,
            "percentage": 79.45,
            "percentageTokens": 82.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/useStepForm.tsx": {
            "lines": 20,
            "tokens": 254,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/usePageFinder.tsx": {
            "lines": 247,
            "tokens": 2891,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 456,
            "duplicatedTokens": 5380,
            "percentage": 184.62,
            "percentageTokens": 186.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/saveStep.tsx": {
            "lines": 17,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/renderers.tsx": {
            "lines": 74,
            "tokens": 553,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 72,
            "duplicatedTokens": 530,
            "percentage": 97.3,
            "percentageTokens": 95.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/helpers/parameterRenderers.tsx": {
            "lines": 74,
            "tokens": 553,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 74,
            "duplicatedTokens": 553,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/StepSaveHandler.tsx": {
            "lines": 28,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/StepListPanel.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/StepEditModal.tsx": {
            "lines": 308,
            "tokens": 2404,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 212,
            "duplicatedTokens": 1638,
            "percentage": 68.83,
            "percentageTokens": 68.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/ScriptControlPanel.tsx": {
            "lines": 118,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/QuickAppSelectionModal.tsx": {
            "lines": 10,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/QualityCheckModal.tsx": {
            "lines": 3,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/PageHeader.tsx": {
            "lines": 64,
            "tokens": 496,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/MultiDeviceScriptLauncher.tsx": {
            "lines": 112,
            "tokens": 1303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/ExecutorConfigPanel.tsx": {
            "lines": 85,
            "tokens": 797,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/EnhancedPageHeader.tsx": {
            "lines": 142,
            "tokens": 1102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/components/ControlPanel.tsx": {
            "lines": 204,
            "tokens": 1698,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 216,
            "percentage": 13.73,
            "percentageTokens": 12.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/TaskManagementCenter.tsx": {
            "lines": 35,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/MonitoringDashboard.tsx": {
            "lines": 131,
            "tokens": 1187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/IndustryMonitoringModule.tsx": {
            "lines": 92,
            "tokens": 711,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 50,
            "duplicatedTokens": 348,
            "percentage": 54.35,
            "percentageTokens": 48.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/DailyReportModule.tsx": {
            "lines": 260,
            "tokens": 2045,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/CandidatePoolImportPanel.tsx": {
            "lines": 82,
            "tokens": 607,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/modules/AccountMonitoringModule.tsx": {
            "lines": 90,
            "tokens": 699,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 50,
            "duplicatedTokens": 348,
            "percentage": 55.56,
            "percentageTokens": 49.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/modern-adb-diagnostic/components/AdbSystemStatusCard.tsx": {
            "lines": 8,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/execution-monitor/components/ScriptList.tsx": {
            "lines": 34,
            "tokens": 286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/execution-monitor/components/PageHeader.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/execution-monitor/components/MonitorFeatureGrid.tsx": {
            "lines": 14,
            "tokens": 260,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 420,
            "percentage": 171.43,
            "percentageTokens": 161.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/components/DeviceStatusCards.tsx": {
            "lines": 83,
            "tokens": 589,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 80,
            "duplicatedTokens": 542,
            "percentage": 96.39,
            "percentageTokens": 92.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/components/DevicePageHeader.tsx": {
            "lines": 42,
            "tokens": 253,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 33,
            "duplicatedTokens": 192,
            "percentage": 78.57,
            "percentageTokens": 75.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/components/DeviceInstructions.tsx": {
            "lines": 17,
            "tokens": 148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation-sindre/components/AutomationResults.tsx": {
            "lines": 22,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation/components/ImportResultSummary.tsx": {
            "lines": 21,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation/components/DeviceSelector.tsx": {
            "lines": 54,
            "tokens": 533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/TooltipDemo.tsx": {
            "lines": 33,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/TokensDemo.tsx": {
            "lines": 80,
            "tokens": 712,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/EmptyStateDemo.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/DropdownDemo.tsx": {
            "lines": 49,
            "tokens": 364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/components/DialogDemo.tsx": {
            "lines": 166,
            "tokens": 1108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/LaunchResultSection.tsx": {
            "lines": 135,
            "tokens": 1096,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/LaunchHistorySection.tsx": {
            "lines": 14,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/FeatureDescriptionSection.tsx": {
            "lines": 54,
            "tokens": 577,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 542,
            "percentage": 55.56,
            "percentageTokens": 93.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/components/ControlPanelSection.tsx": {
            "lines": 101,
            "tokens": 841,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 502,
            "percentage": 43.56,
            "percentageTokens": 59.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-layout-comparison/components/LayoutOverviewCards.tsx": {
            "lines": 17,
            "tokens": 161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-layout-comparison/components/HeaderBar.tsx": {
            "lines": 16,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb-layout-comparison/components/DesignPrincipleAlert.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/SessionTimelinePanel.tsx": {
            "lines": 38,
            "tokens": 321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogQuickPresets.tsx": {
            "lines": 10,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogMessage.tsx": {
            "lines": 33,
            "tokens": 371,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogFilterBar.tsx": {
            "lines": 90,
            "tokens": 875,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/LogDetailsDrawer.tsx": {
            "lines": 103,
            "tokens": 966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/DeviceLogPanel.tsx": {
            "lines": 47,
            "tokens": 495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/DetailsBlock.tsx": {
            "lines": 20,
            "tokens": 205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/EnhancedADBAuthWizard.tsx": {
            "lines": 174,
            "tokens": 1555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/ADBAuthWizard.tsx": {
            "lines": 33,
            "tokens": 503,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/ActionLogPanel.tsx": {
            "lines": 1,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/StepCard.tsx": {
            "lines": 293,
            "tokens": 2170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/universal-analysis-components-demo.tsx": {
            "lines": 152,
            "tokens": 1161,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/unified-step-card-demo.tsx": {
            "lines": 103,
            "tokens": 951,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/step-card-system-demo.tsx": {
            "lines": 61,
            "tokens": 503,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/smoke-test.tsx": {
            "lines": 93,
            "tokens": 790,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/smoke-test-complete.tsx": {
            "lines": 193,
            "tokens": 1414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/intelligent-analysis-real-demo.tsx": {
            "lines": 253,
            "tokens": 2372,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 41,
            "duplicatedTokens": 378,
            "percentage": 16.21,
            "percentageTokens": 15.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/intelligent-analysis-demo.tsx": {
            "lines": 168,
            "tokens": 1411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/enhanced-element-selection-demo.tsx": {
            "lines": 120,
            "tokens": 1129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/pages/auto-fill-demo.tsx": {
            "lines": 242,
            "tokens": 2051,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 65,
            "duplicatedTokens": 656,
            "percentage": 26.86,
            "percentageTokens": 31.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/integration/NodeDetailIntegration.tsx": {
            "lines": 64,
            "tokens": 517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/hooks/use-analysis-auto-fill.tsx": {
            "lines": 71,
            "tokens": 618,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/examples/UniversalUIIntegrationExample.tsx": {
            "lines": 158,
            "tokens": 1522,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/demo/StrategySystemDemo.tsx": {
            "lines": 187,
            "tokens": 1689,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 342,
            "percentage": 14.44,
            "percentageTokens": 20.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/intelligent-draggable-step-card.tsx": {
            "lines": 288,
            "tokens": 2489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/intelligent-analysis-controller.tsx": {
            "lines": 368,
            "tokens": 2657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/improved-smart-step-wrapper.tsx": {
            "lines": 21,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/components/ScriptManager.tsx": {
            "lines": 237,
            "tokens": 2025,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/components/ScriptBuilderIntegration.tsx": {
            "lines": 207,
            "tokens": 1668,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/script-builder/components/script-builder-step-card.tsx": {
            "lines": 65,
            "tokens": 476,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/components/prospecting-step-card.tsx": {
            "lines": 76,
            "tokens": 470,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/marketing/watch-targets/WatchTargetsList.tsx": {
            "lines": 81,
            "tokens": 1015,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/components/LoopStepCard.tsx": {
            "lines": 198,
            "tokens": 1700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-control/components/LoopControlIntegration.tsx": {
            "lines": 129,
            "tokens": 1005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-matching/components/HierarchyFieldDisplay.tsx": {
            "lines": 125,
            "tokens": 1237,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/drag-sort/components/DragSortContainer.tsx": {
            "lines": 54,
            "tokens": 532,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/examples/IntegrationExample.tsx": {
            "lines": 43,
            "tokens": 367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/WhiteBlacklistManager.tsx": {
            "lines": 618,
            "tokens": 5458,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 298,
            "duplicatedTokens": 2909,
            "percentage": 48.22,
            "percentageTokens": 53.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/SafetyMonitorPanel.tsx": {
            "lines": 419,
            "tokens": 3921,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 146,
            "duplicatedTokens": 1252,
            "percentage": 34.84,
            "percentageTokens": 31.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/SafetyConfigPanel.tsx": {
            "lines": 607,
            "tokens": 4888,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 76,
            "duplicatedTokens": 587,
            "percentage": 12.52,
            "percentageTokens": 12.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/components/DeduplicationControlManager.tsx": {
            "lines": 387,
            "tokens": 3246,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 98,
            "duplicatedTokens": 980,
            "percentage": 25.32,
            "percentageTokens": 30.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/ContactImportWorkbench.tsx": {
            "lines": 312,
            "tokens": 3166,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/ContactImportWizard.tsx": {
            "lines": 62,
            "tokens": 510,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/components/contact-import-step-card.tsx": {
            "lines": 173,
            "tokens": 1281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-automation/components/ContactWorkflowSelector.tsx": {
            "lines": 50,
            "tokens": 399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/components/adb-step-card.tsx": {
            "lines": 85,
            "tokens": 602,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/VirtualizedCachedPageList.tsx": {
            "lines": 90,
            "tokens": 958,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/Thumbnail.tsx": {
            "lines": 22,
            "tokens": 100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/CacheToolbar.tsx": {
            "lines": 59,
            "tokens": 532,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 250,
            "percentage": 33.9,
            "percentageTokens": 46.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/CachedPageList.tsx": {
            "lines": 61,
            "tokens": 483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/components/CachedPageCard.tsx": {
            "lines": 104,
            "tokens": 704,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/TableColumnSettings.tsx": {
            "lines": 82,
            "tokens": 749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/table/ResizableHeader.tsx": {
            "lines": 62,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/strategy-selector/UnifiedStrategyConfigurator.tsx": {
            "lines": 474,
            "tokens": 4410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/strategy-selector/StrategyScoreBadge.tsx": {
            "lines": 46,
            "tokens": 335,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/PageFinderView.tsx": {
            "lines": 19,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/TestIntelligentAnalysisAdapter.tsx": {
            "lines": 70,
            "tokens": 675,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/ElementSelectionPopover.tsx": {
            "lines": 62,
            "tokens": 618,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/SortableList.tsx": {
            "lines": 0,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/SortableItem.tsx": {
            "lines": 0,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/DragSensorsProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/DragOverlayGhost.tsx": {
            "lines": 17,
            "tokens": 172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/DnDUIConfigContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/common-popover/ConfirmPopover.tsx": {
            "lines": 26,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tooltip/Tooltip.tsx": {
            "lines": 195,
            "tokens": 1152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tag-pill/TagPill.tsx": {
            "lines": 93,
            "tokens": 593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlay/useOverlayTheme.tsx": {
            "lines": 3,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/motion/MotionSystem.tsx": {
            "lines": 27,
            "tokens": 219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/motion/MotionComponents.tsx": {
            "lines": 206,
            "tokens": 1273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layouts/Panel.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layouts/PageContainer.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layouts/Grid.tsx": {
            "lines": 91,
            "tokens": 578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/forms/Select.tsx": {
            "lines": 19,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/forms/Input.tsx": {
            "lines": 93,
            "tokens": 721,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/forms/FormField.tsx": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/feedback/Loading.tsx": {
            "lines": 59,
            "tokens": 392,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dropdown/DropdownMenu.tsx": {
            "lines": 192,
            "tokens": 1449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/dialog/Dialog.tsx": {
            "lines": 153,
            "tokens": 943,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card/CardShell.tsx": {
            "lines": 130,
            "tokens": 908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/card/Card.tsx": {
            "lines": 86,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/SecondaryButton.tsx": {
            "lines": 7,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/PrimaryButton.tsx": {
            "lines": 10,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/IconButton.tsx": {
            "lines": 35,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/button/Button.tsx": {
            "lines": 48,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/tap-actions/TapActionDropdownButton.tsx": {
            "lines": 30,
            "tokens": 419,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/system-actions/SystemKeyDropdownButton.tsx": {
            "lines": 13,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/scroll/ScrollParamsEditor.tsx": {
            "lines": 25,
            "tokens": 205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/scroll/ScrollDirectionSelector.tsx": {
            "lines": 19,
            "tokens": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/ScreenActionDropdownButton.tsx": {
            "lines": 25,
            "tokens": 300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/EdgeBackGestureModal.tsx": {
            "lines": 46,
            "tokens": 636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/CustomScrollModal.tsx": {
            "lines": 25,
            "tokens": 397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/skeleton/SkeletonPatterns.tsx": {
            "lines": 27,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/marketplace-card/MarketplaceCard.tsx": {
            "lines": 266,
            "tokens": 2121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/header-bar/HeaderBar.tsx": {
            "lines": 216,
            "tokens": 1418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/filter-bar/FilterBar.tsx": {
            "lines": 252,
            "tokens": 1844,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/empty-state/EmptyState.tsx": {
            "lines": 154,
            "tokens": 1085,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/TemplateSelector.tsx": {
            "lines": 20,
            "tokens": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/SaveFlowModal.tsx": {
            "lines": 12,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/SavedFlowsPanel.tsx": {
            "lines": 11,
            "tokens": 195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/FlowDetailsPanel.tsx": {
            "lines": 47,
            "tokens": 389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow-builder/components/FlowConstructionCard.tsx": {
            "lines": 95,
            "tokens": 869,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/ThemePageComponents.tsx": {
            "lines": 338,
            "tokens": 3346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/ThemeLayouts.tsx": {
            "lines": 339,
            "tokens": 2908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/universal-ui/ThemeEnhanced.tsx": {
            "lines": 342,
            "tokens": 2827,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/HierarchyTab.tsx": {
            "lines": 15,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/FieldDetailTab.tsx": {
            "lines": 25,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/ConstraintsTab.tsx": {
            "lines": 77,
            "tokens": 1107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/BasicConfigTab.tsx": {
            "lines": 84,
            "tokens": 1101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/registry/registry.tsx": {
            "lines": 70,
            "tokens": 672,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 364,
            "percentage": 65.71,
            "percentageTokens": 54.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/TitleEditor.tsx": {
            "lines": 0,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/StrategyControls.tsx": {
            "lines": 50,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/StepCardHeader.tsx": {
            "lines": 142,
            "tokens": 1248,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/StepCardBody.tsx": {
            "lines": 30,
            "tokens": 212,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/SmartScrollControls.tsx": {
            "lines": 14,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/SmartInputControls.tsx": {
            "lines": 13,
            "tokens": 135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/SmartClickControls.tsx": {
            "lines": 15,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/LoopConfigModal.tsx": {
            "lines": 64,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/InlineLoopControl.tsx": {
            "lines": 25,
            "tokens": 319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/InfoBubble.tsx": {
            "lines": 161,
            "tokens": 1856,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/DescriptionEditor.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/ContactSourceSelector.tsx": {
            "lines": 5,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard/components/ContactDeviceSelector.tsx": {
            "lines": 6,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/business/page-headers/BusinessPageHeader.tsx": {
            "lines": 38,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/business/layouts/BusinessPageLayout.tsx": {
            "lines": 10,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/business/data-cards/MetricCard.tsx": {
            "lines": 42,
            "tokens": 291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/upload/UploadAdapter.tsx": {
            "lines": 6,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/tree/TreeAdapter.tsx": {
            "lines": 0,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/tooltip/TooltipAdapter.tsx": {
            "lines": 3,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/table/TableAdapter.tsx": {
            "lines": 147,
            "tokens": 1045,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/switch/SwitchAdapter.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/steps/StepsAdapter.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/select/SelectAdapter.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/radio/RadioAdapter.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/popover/PopoverAdapter.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/pagination/PaginationAdapter.tsx": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/modal/ModalAdapter.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/input-number/InputNumberAdapter.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/icons/IconAdapter.tsx": {
            "lines": 60,
            "tokens": 486,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 362,
            "percentage": 73.33,
            "percentageTokens": 74.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/grid/GridAdapter.tsx": {
            "lines": 47,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/form/FormAdapter.tsx": {
            "lines": 134,
            "tokens": 813,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/drawer/DrawerAdapter.tsx": {
            "lines": 3,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/date-picker/DatePickerAdapter.tsx": {
            "lines": 8,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/button/ButtonAdapter.tsx": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ui-showcase/UIShowcasePageNative.tsx": {
            "lines": 214,
            "tokens": 2007,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/StatisticsPageOptimized.tsx": {
            "lines": 122,
            "tokens": 1038,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/StatisticsPageNative.tsx": {
            "lines": 211,
            "tokens": 1854,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/statistics/StatisticsPage.tsx": {
            "lines": 133,
            "tokens": 1373,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 37,
            "duplicatedTokens": 433,
            "percentage": 27.82,
            "percentageTokens": 31.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/precise-acquisition/PreciseAcquisitionPage.tsx": {
            "lines": 187,
            "tokens": 1328,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 140,
            "duplicatedTokens": 804,
            "percentage": 74.87,
            "percentageTokens": 60.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance-demo/XPathPerformanceDemo.tsx": {
            "lines": 73,
            "tokens": 525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/StatusIndicators.tsx": {
            "lines": 4,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/SelectionBar.tsx": {
            "lines": 129,
            "tokens": 1774,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/RealTimeDeviceMonitorPage.tsx": {
            "lines": 43,
            "tokens": 433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceToolbar.tsx": {
            "lines": 12,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceSortBar.tsx": {
            "lines": 7,
            "tokens": 84,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceList.tsx": {
            "lines": 9,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceFilters.tsx": {
            "lines": 18,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceEventStream.tsx": {
            "lines": 5,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceEventLog.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceDetailDrawer.tsx": {
            "lines": 91,
            "tokens": 1153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceCard.tsx": {
            "lines": 7,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/DeviceActionsPanel.tsx": {
            "lines": 43,
            "tokens": 529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-monitor/BatchActionsBar.tsx": {
            "lines": 32,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPageOptimized.tsx": {
            "lines": 65,
            "tokens": 452,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPageNative.tsx": {
            "lines": 85,
            "tokens": 523,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPageBrandNew.tsx": {
            "lines": 131,
            "tokens": 1339,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 27,
            "duplicatedTokens": 342,
            "percentage": 20.61,
            "percentageTokens": 25.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/device-management/DeviceManagementPage.tsx": {
            "lines": 134,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-import/ContactImportPage.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/contact-automation/ContactAutomationPageNative.tsx": {
            "lines": 185,
            "tokens": 1640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/brand-showcase/BrandShowcasePage.tsx": {
            "lines": 495,
            "tokens": 4512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/LoginPageNative.tsx": {
            "lines": 127,
            "tokens": 951,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/auth/LoginPage.tsx": {
            "lines": 60,
            "tokens": 696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/app-launch-test/AppLaunchTestPageModular.tsx": {
            "lines": 48,
            "tokens": 285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/WirelessPairing.tsx": {
            "lines": 25,
            "tokens": 459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/PcFixes.tsx": {
            "lines": 5,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/DeviceStatusPanel.tsx": {
            "lines": 7,
            "tokens": 101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/AdbActionCard.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/ActionLogPanel.tsx": {
            "lines": 1,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/LogConsole.tsx": {
            "lines": 96,
            "tokens": 1326,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/HeaderToolbar.tsx": {
            "lines": 9,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/AdbCenterPage.tsx": {
            "lines": 52,
            "tokens": 437,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/xml-inspector/XmlInspectorModal.tsx": {
            "lines": 237,
            "tokens": 1894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/loop-drag-integration/LoopDragIntegration.tsx": {
            "lines": 124,
            "tokens": 977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/distributed-script-quality/DistributedScriptQualityPanel.tsx": {
            "lines": 345,
            "tokens": 3300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/xml-cache/XmlCachePageSelector.tsx": {
            "lines": 38,
            "tokens": 290,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/UniversalPageFinderModal.tsx": {
            "lines": 142,
            "tokens": 1046,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/UniversalPageFinderModal-Refactored.tsx": {
            "lines": 117,
            "tokens": 722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/QuickStylingDemo.tsx": {
            "lines": 206,
            "tokens": 1728,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/DesignSystemTestPage.tsx": {
            "lines": 23,
            "tokens": 147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/DesignSystemPreview.tsx": {
            "lines": 114,
            "tokens": 1148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/unified-view/UnifiedVisualizationView.tsx": {
            "lines": 315,
            "tokens": 2756,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 106,
            "duplicatedTokens": 904,
            "percentage": 33.65,
            "percentageTokens": 32.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/unified-view/UnifiedVisualizationExample.tsx": {
            "lines": 46,
            "tokens": 407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/SmartDialog.tsx": {
            "lines": 149,
            "tokens": 982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/test/TestRealBackendIntegration.tsx": {
            "lines": 143,
            "tokens": 1495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/test/ElementDiscoveryTestPage.tsx": {
            "lines": 124,
            "tokens": 1729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/test/ArchitectureTestPage.tsx": {
            "lines": 19,
            "tokens": 189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/template/TemplateLibrary.tsx": {
            "lines": 327,
            "tokens": 3052,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 185,
            "percentage": 4.59,
            "percentageTokens": 6.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/template/TemplateIOManager.tsx": {
            "lines": 317,
            "tokens": 2643,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 185,
            "percentage": 4.73,
            "percentageTokens": 7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/template/TemplateEditor.tsx": {
            "lines": 383,
            "tokens": 3520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/task/PreciseAcquisitionForm.tsx": {
            "lines": 256,
            "tokens": 1836,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/task/ContactFollowForm.tsx": {
            "lines": 110,
            "tokens": 857,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/strategy-selector/StrategySelector.tsx": {
            "lines": 319,
            "tokens": 3223,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/strategy-selector/CompactStrategyMenu.tsx": {
            "lines": 204,
            "tokens": 1462,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-cards/ModernStepCard.tsx": {
            "lines": 183,
            "tokens": 1112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/TestResultDetail.tsx": {
            "lines": 177,
            "tokens": 1855,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/TestResultCopyButton.tsx": {
            "lines": 1,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/MultiDeviceTestLauncher.tsx": {
            "lines": 31,
            "tokens": 467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/MultiDeviceResultPanel.tsx": {
            "lines": 17,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/MatchingStrategyTag.tsx": {
            "lines": 4,
            "tokens": 74,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/SmartPageFinderModal.tsx": {
            "lines": 195,
            "tokens": 1538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/SelectedElementsList.tsx": {
            "lines": 77,
            "tokens": 654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/PageInfoDisplay.tsx": {
            "lines": 77,
            "tokens": 577,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/ElementSearchFilter.tsx": {
            "lines": 51,
            "tokens": 474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/ElementHierarchyTree.tsx": {
            "lines": 194,
            "tokens": 1717,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 520,
            "percentage": 23.71,
            "percentageTokens": 30.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/AnalysisStatistics.tsx": {
            "lines": 185,
            "tokens": 1684,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-page-finder/ActionExecutor.tsx": {
            "lines": 62,
            "tokens": 499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-navigation-finder/SmartNavigationStepBuilder.tsx": {
            "lines": 235,
            "tokens": 2294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-navigation-finder/SmartNavigationModal.tsx": {
            "lines": 112,
            "tokens": 692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-navigation-finder/SmartNavigationFinder.tsx": {
            "lines": 258,
            "tokens": 2453,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 490,
            "percentage": 13.18,
            "percentageTokens": 19.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart-element-finder/SmartElementFinder.tsx": {
            "lines": 177,
            "tokens": 1696,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 50,
            "duplicatedTokens": 658,
            "percentage": 28.25,
            "percentageTokens": 38.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart/SmartAppSelector.tsx": {
            "lines": 240,
            "tokens": 2196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/smart/LaunchAppSmartComponent.tsx": {
            "lines": 200,
            "tokens": 1501,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/TemplateManagementSystem.tsx": {
            "lines": 537,
            "tokens": 4479,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/RiskControlManagementPanel.tsx": {
            "lines": 387,
            "tokens": 3462,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/EnhancedTaskManagementDashboard.tsx": {
            "lines": 422,
            "tokens": 3794,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/precise-acquisition/DailyReportManager.tsx": {
            "lines": 289,
            "tokens": 2114,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/navigation/NavigationStepDisplay.tsx": {
            "lines": 61,
            "tokens": 535,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/navigation/NavigationBarDetector.tsx": {
            "lines": 162,
            "tokens": 1485,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/native-dashboard/NativeAntDashboard.tsx": {
            "lines": 188,
            "tokens": 1499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard/LoopHeader.tsx": {
            "lines": 104,
            "tokens": 739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard/LoopConfigForm.tsx": {
            "lines": 65,
            "tokens": 549,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopStartCard/index.tsx": {
            "lines": 18,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/loop-control/LoopBuilder.tsx": {
            "lines": 247,
            "tokens": 2321,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 370,
            "duplicatedTokens": 3611,
            "percentage": 149.8,
            "percentageTokens": 155.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/loop-control/AdvancedLoopBuilder.tsx": {
            "lines": 542,
            "tokens": 5209,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 344,
            "duplicatedTokens": 3281,
            "percentage": 63.47,
            "percentageTokens": 62.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Sidebar_fixed.tsx": {
            "lines": 34,
            "tokens": 262,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/Sidebar.tsx": {
            "lines": 120,
            "tokens": 1072,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/PageWrapper.tsx": {
            "lines": 64,
            "tokens": 469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/PageShell.tsx": {
            "lines": 105,
            "tokens": 689,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/MainLayout.tsx": {
            "lines": 39,
            "tokens": 315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/layout/AppHeader.tsx": {
            "lines": 93,
            "tokens": 781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/flow/FlowScriptBuilder.tsx": {
            "lines": 16,
            "tokens": 229,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 121,
            "percentage": 37.5,
            "percentageTokens": 52.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/execution/SimpleExecutionMonitor.tsx": {
            "lines": 338,
            "tokens": 2832,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 256,
            "duplicatedTokens": 2233,
            "percentage": 75.74,
            "percentageTokens": 78.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/execution/ScriptExecutionMonitor.tsx": {
            "lines": 345,
            "tokens": 2928,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 256,
            "duplicatedTokens": 2233,
            "percentage": 74.2,
            "percentageTokens": 76.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/PageSelector.tsx": {
            "lines": 140,
            "tokens": 1151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/HierarchyTreeViewerFixed.tsx": {
            "lines": 321,
            "tokens": 3092,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/HierarchyTreeViewer.tsx": {
            "lines": 284,
            "tokens": 2970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/EnhancedHierarchyTreeViewer.tsx": {
            "lines": 332,
            "tokens": 3267,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 267,
            "duplicatedTokens": 2758,
            "percentage": 80.42,
            "percentageTokens": 84.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementXmlHierarchyTab.tsx": {
            "lines": 162,
            "tokens": 1286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementMatchInfo.tsx": {
            "lines": 156,
            "tokens": 1562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementFieldsViewerGuide.tsx": {
            "lines": 157,
            "tokens": 1327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/ElementFieldsViewer.tsx": {
            "lines": 259,
            "tokens": 3014,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/CachedPageSelector.tsx": {
            "lines": 93,
            "tokens": 854,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/CachedHierarchyTreeViewer.tsx": {
            "lines": 358,
            "tokens": 3552,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 267,
            "duplicatedTokens": 2758,
            "percentage": 74.58,
            "percentageTokens": 77.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/CachedElementXmlHierarchyTab.tsx": {
            "lines": 33,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/FieldMatchingController.tsx": {
            "lines": 143,
            "tokens": 1405,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/ElementNameEditor.tsx": {
            "lines": 428,
            "tokens": 3307,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 220,
            "percentage": 3.27,
            "percentageTokens": 6.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/ElementHierarchyDisplay.tsx": {
            "lines": 142,
            "tokens": 1467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/ConstraintFieldEditor.tsx": {
            "lines": 232,
            "tokens": 2183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/BatchRuleConfigPanel.tsx": {
            "lines": 93,
            "tokens": 766,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-discovery-test/ElementDiscoveryTestPage.tsx": {
            "lines": 101,
            "tokens": 895,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/RealTimeDeviceMonitor.tsx": {
            "lines": 262,
            "tokens": 2486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/RealDeviceManager.tsx": {
            "lines": 122,
            "tokens": 963,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/DeviceList.tsx": {
            "lines": 23,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/device/CoordinateCapture.tsx": {
            "lines": 162,
            "tokens": 1362,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/QuickAppSelectorTest.tsx": {
            "lines": 28,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/GlobalAdbMonitor.tsx": {
            "lines": 94,
            "tokens": 806,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/XiaohongshuAutoFollow.tsx": {
            "lines": 1,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/VcfImporter.tsx": {
            "lines": 64,
            "tokens": 533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/VcfImportDialog.tsx": {
            "lines": 210,
            "tokens": 1526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/VcfImportDemo.tsx": {
            "lines": 123,
            "tokens": 1108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/ImportAndFollow.tsx": {
            "lines": 210,
            "tokens": 2029,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/EnhancedImportAndFollow.tsx": {
            "lines": 179,
            "tokens": 1736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/contact/ContactReader.tsx": {
            "lines": 313,
            "tokens": 2840,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/ProgressBar.tsx": {
            "lines": 18,
            "tokens": 206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/PlatformSelector.tsx": {
            "lines": 17,
            "tokens": 101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/ErrorBoundary.tsx": {
            "lines": 2,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/common/BalanceDisplay.tsx": {
            "lines": 22,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/auth/AuthGuard.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/Sidebar.tsx": {
            "lines": 2,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/AppShell.tsx": {
            "lines": 0,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adb-xml-inspector/AdbXmlInspector.tsx": {
            "lines": 550,
            "tokens": 4932,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 74,
            "duplicatedTokens": 792,
            "percentage": 13.45,
            "percentageTokens": 16.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/page-analysis/PageAnalysisProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/ThemeProvider.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/ThemeBridge.tsx": {
            "lines": 41,
            "tokens": 321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/providers/GlobalAdbProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/UniversalUITestPage.tsx": {
            "lines": 57,
            "tokens": 538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/UnifiedViewDemo.tsx": {
            "lines": 138,
            "tokens": 1249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/UIShowcasePage.tsx": {
            "lines": 85,
            "tokens": 856,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ThemeSettingsPage.tsx": {
            "lines": 146,
            "tokens": 1300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ThemeEnhancementDemo.tsx": {
            "lines": 161,
            "tokens": 1272,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/TestCommandFix.tsx": {
            "lines": 68,
            "tokens": 530,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/StrategyDemo.tsx": {
            "lines": 74,
            "tokens": 713,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 104,
            "duplicatedTokens": 1292,
            "percentage": 140.54,
            "percentageTokens": 181.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/StrategyBackendDemo.tsx": {
            "lines": 122,
            "tokens": 1291,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 104,
            "duplicatedTokens": 1292,
            "percentage": 85.25,
            "percentageTokens": 100.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage_New.tsx": {
            "lines": 53,
            "tokens": 350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage.tsx": {
            "lines": 51,
            "tokens": 461,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartNavigationTestPage.tsx": {
            "lines": 136,
            "tokens": 1170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartElementFinderTestPage.tsx": {
            "lines": 98,
            "tokens": 858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ScriptBuilderTestPage.tsx": {
            "lines": 100,
            "tokens": 905,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 278,
            "percentage": 24,
            "percentageTokens": 30.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PermissionTestPage.tsx": {
            "lines": 73,
            "tokens": 665,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/OptimizationSummaryPage.tsx": {
            "lines": 189,
            "tokens": 1779,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/NavigationDetectorTestPage.tsx": {
            "lines": 78,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ModernAdbDiagnosticPage.tsx": {
            "lines": 5,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/InspectorPage.tsx": {
            "lines": 5,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/HealthCheckDemoPage.tsx": {
            "lines": 138,
            "tokens": 1108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ExecutionMonitorPage.tsx": {
            "lines": 14,
            "tokens": 89,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/EmployeePageBrandNew.tsx": {
            "lines": 107,
            "tokens": 730,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/EmployeePage.tsx": {
            "lines": 41,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/EmployeePage.refactored.tsx": {
            "lines": 39,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ElementDiscoveryTestPage_backup.tsx": {
            "lines": 35,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ElementDiscoveryTestPage.tsx": {
            "lines": 35,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DeviceManagementPageBrandNew.tsx": {
            "lines": 241,
            "tokens": 2017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/DesignTokensDemo.tsx": {
            "lines": 285,
            "tokens": 2540,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 60,
            "duplicatedTokens": 758,
            "percentage": 21.05,
            "percentageTokens": 29.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ContactImportPageBrandNew.tsx": {
            "lines": 7,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ContactAutomationPage_sindre.tsx": {
            "lines": 108,
            "tokens": 884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ContactAutomationPage.tsx": {
            "lines": 41,
            "tokens": 382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/BusinessComponentsDemo.tsx": {
            "lines": 104,
            "tokens": 753,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AppLaunchTestPage.tsx": {
            "lines": 198,
            "tokens": 2044,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 37,
            "duplicatedTokens": 433,
            "percentage": 18.69,
            "percentageTokens": 21.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdvancedLoopPage.tsx": {
            "lines": 40,
            "tokens": 402,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 209,
            "percentage": 50,
            "percentageTokens": 51.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbPathTestPage.tsx": {
            "lines": 38,
            "tokens": 281,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbLayoutComparisonPage.tsx": {
            "lines": 4,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard.tsx": {
            "lines": 10,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/UnifiedTaskEngineExample.tsx": {
            "lines": 268,
            "tokens": 2224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/TestUniversalUIClick.tsx": {
            "lines": 49,
            "tokens": 328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/SmartPageFinderExample.tsx": {
            "lines": 61,
            "tokens": 635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/PatternDemos.tsx": {
            "lines": 198,
            "tokens": 1595,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/AppLifecycleExample.tsx": {
            "lines": 224,
            "tokens": 1969,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/AdbModuleUsageExample.tsx": {
            "lines": 47,
            "tokens": 471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/AdapterDemos.tsx": {
            "lines": 237,
            "tokens": 2263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/WatchTargetList.tsx": {
            "lines": 242,
            "tokens": 2094,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/VisualPageAnalyzer.tsx": {
            "lines": 206,
            "tokens": 2310,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 486,
            "percentage": 14.56,
            "percentageTokens": 21.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/UnifiedViewContainer.tsx": {
            "lines": 454,
            "tokens": 3217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/UIAnalyzer.tsx": {
            "lines": 213,
            "tokens": 1921,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/TestResultsDisplay.tsx": {
            "lines": 177,
            "tokens": 1521,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/TaskManagementCenter.tsx": {
            "lines": 503,
            "tokens": 4242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/StepTestButton.tsx": {
            "lines": 74,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/StepBundleManager.tsx": {
            "lines": 39,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/SmartVcfImporterNative.tsx": {
            "lines": 79,
            "tokens": 674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/SmartVcfImporter.tsx": {
            "lines": 206,
            "tokens": 2037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/SmartStepCardWithBackend.tsx": {
            "lines": 12,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/QuickPhoneMirror.tsx": {
            "lines": 59,
            "tokens": 571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/PreciseAcquisitionDemo.tsx": {
            "lines": 188,
            "tokens": 1592,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/NewAdbManagementExample.tsx": {
            "lines": 290,
            "tokens": 2258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/NativeAntDesignApp.tsx": {
            "lines": 127,
            "tokens": 765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ModernDashboard.tsx": {
            "lines": 139,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopEndCardNative.tsx": {
            "lines": 133,
            "tokens": 1037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/LoopEndCard.tsx": {
            "lines": 187,
            "tokens": 1619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/HealthCheckSystem.tsx": {
            "lines": 78,
            "tokens": 624,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ErrorBoundary.tsx": {
            "lines": 27,
            "tokens": 236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EnhancedDraggableStepsContainer.tsx": {
            "lines": 1,
            "tokens": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmployeeTable.tsx": {
            "lines": 9,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EmployeeForm.tsx": {
            "lines": 128,
            "tokens": 995,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepsContainer.tsx": {
            "lines": 85,
            "tokens": 686,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard.tsx": {
            "lines": 370,
            "tokens": 3337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/CsvImportComponent.tsx": {
            "lines": 282,
            "tokens": 2354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/AntDesignDemo.tsx": {
            "lines": 3,
            "tokens": 38,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 78069,
          "tokens": 690088,
          "sources": 685,
          "clones": 104,
          "duplicatedLines": 4070,
          "duplicatedTokens": 38989,
          "percentage": 5.21,
          "percentageTokens": 5.65,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "src/components/universal-ui/views/grid-view/panels/node-detail/enhanced-field-selector/README.md": {
            "lines": 302,
            "tokens": 1603,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/element-presets/TESTING_GUIDE.md": {
            "lines": 108,
            "tokens": 547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/element-presets/README.md": {
            "lines": 43,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/README.md": {
            "lines": 176,
            "tokens": 937,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/hooks/DRAG_CONFLICT_SOLUTION.md": {
            "lines": 126,
            "tokens": 689,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid/components/README.md": {
            "lines": 179,
            "tokens": 1017,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/enhanced-import/README.md": {
            "lines": 233,
            "tokens": 1297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/bulk-actions/README.md": {
            "lines": 137,
            "tokens": 683,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/panels/node-detail/README.md": {
            "lines": 107,
            "tokens": 591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/txt-import/README.md": {
            "lines": 15,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/resizable-layout/README.md": {
            "lines": 187,
            "tokens": 1098,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/number-pool-table/README.md": {
            "lines": 143,
            "tokens": 718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/PANEL_CONTROL_FIX_REPORT.md": {
            "lines": 128,
            "tokens": 758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/EMERGENCY_FIX.md": {
            "lines": 121,
            "tokens": 588,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/DRAG_OPTIMIZATION_README.md": {
            "lines": 128,
            "tokens": 692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/DRAG_FIX_GUIDE.md": {
            "lines": 183,
            "tokens": 811,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/themes/README.md": {
            "lines": 374,
            "tokens": 1801,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/README.md": {
            "lines": 141,
            "tokens": 752,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/step-form/README.md": {
            "lines": 104,
            "tokens": 806,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/SmartScriptBuilderPage/hooks/page-finder/README.md": {
            "lines": 95,
            "tokens": 641,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/components/step-card-system/README.md": {
            "lines": 254,
            "tokens": 1283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/README.md": {
            "lines": 29,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/REFACTOR_NOTES.md": {
            "lines": 48,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/README.md": {
            "lines": 207,
            "tokens": 1049,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/CLEANUP_REPORT.md": {
            "lines": 44,
            "tokens": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/field-detail/README.md": {
            "lines": 45,
            "tokens": 365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/logs/README.md": {
            "lines": 24,
            "tokens": 134,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/REFACTOR_REPORT.md": {
            "lines": 272,
            "tokens": 1669,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/adb/auth/README.md": {
            "lines": 28,
            "tokens": 177,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/examples/NodeDetailIntegrationGuide.md": {
            "lines": 256,
            "tokens": 1133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/ui/README.md": {
            "lines": 32,
            "tokens": 188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/api/README.md": {
            "lines": 32,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/stores/README.md": {
            "lines": 19,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/services/README.md": {
            "lines": 19,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/hooks/README.md": {
            "lines": 19,
            "tokens": 103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/domain/README.md": {
            "lines": 22,
            "tokens": 132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/application/README.md": {
            "lines": 18,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/api/README.md": {
            "lines": 19,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/intelligent-strategy-system/plan/README.md": {
            "lines": 248,
            "tokens": 1337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/README.md": {
            "lines": 17,
            "tokens": 101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/stores/README.md": {
            "lines": 18,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/services/README.md": {
            "lines": 19,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/import-strategies/README.md": {
            "lines": 217,
            "tokens": 1247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/hooks/README.md": {
            "lines": 19,
            "tokens": 103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/domain/README.md": {
            "lines": 21,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/application/README.md": {
            "lines": 18,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/api/README.md": {
            "lines": 18,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/ui/README.md": {
            "lines": 19,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/stores/README.md": {
            "lines": 18,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/services/README.md": {
            "lines": 19,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/hooks/README.md": {
            "lines": 19,
            "tokens": 103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/domain/README.md": {
            "lines": 21,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/application/README.md": {
            "lines": 18,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/api/README.md": {
            "lines": 18,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder-modal/README.md": {
            "lines": 72,
            "tokens": 510,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/README.md": {
            "lines": 19,
            "tokens": 110,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/grid-layout/README.md": {
            "lines": 411,
            "tokens": 2122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/INTEGRATION_GUIDE.md": {
            "lines": 194,
            "tokens": 920,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/dnd/README.md": {
            "lines": 86,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/common-popover/README.md": {
            "lines": 78,
            "tokens": 413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/tap-actions/README.md": {
            "lines": 39,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-card/screen-actions/README.md": {
            "lines": 24,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/feature-modules/page-analyzer/README.md": {
            "lines": 392,
            "tokens": 1992,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-name-editor/tabs/README.md": {
            "lines": 82,
            "tokens": 733,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/message/README.md": {
            "lines": 251,
            "tokens": 1354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/precise-acquisition/ARCHITECTURE_SUMMARY.md": {
            "lines": 321,
            "tokens": 2330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/xpath/README_STAGE3_COMPLETION.md": {
            "lines": 216,
            "tokens": 1167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/AdbAuthorizationWizard/DEPRECATED.md": {
            "lines": 11,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/README.md": {
            "lines": 287,
            "tokens": 1481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/IMPLEMENTATION_COMPLETE.md": {
            "lines": 186,
            "tokens": 1158,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/TESTING_GUIDE.md": {
            "lines": 157,
            "tokens": 903,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/README.md": {
            "lines": 300,
            "tokens": 1450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/INTEGRATION_GUIDE.md": {
            "lines": 253,
            "tokens": 1142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/smart-script-management/INTEGRATION_COMPLETE_REPORT.md": {
            "lines": 319,
            "tokens": 1655,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/enhanced-matching/README.md": {
            "lines": 194,
            "tokens": 998,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/deduplication-control/README.md": {
            "lines": 362,
            "tokens": 1697,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/README.md": {
            "lines": 106,
            "tokens": 826,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/README.md": {
            "lines": 34,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/DESIGN_SYSTEM_COMPLETION_REPORT.md": {
            "lines": 172,
            "tokens": 1157,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/README.md": {
            "lines": 289,
            "tokens": 1315,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/step-cards/README.md": {
            "lines": 228,
            "tokens": 1306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/patterns/README.md": {
            "lines": 322,
            "tokens": 1557,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/native-antd/README.md": {
            "lines": 31,
            "tokens": 184,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/element-xml-hierarchy/README.md": {
            "lines": 222,
            "tokens": 1031,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/app-shell/README.md": {
            "lines": 25,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adb-xml-inspector/README.md": {
            "lines": 85,
            "tokens": 561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/adapters/README.md": {
            "lines": 209,
            "tokens": 1059,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/application/services/README.md": {
            "lines": 264,
            "tokens": 1259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/theme/README.md": {
            "lines": 8,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/README.md": {
            "lines": 77,
            "tokens": 415,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/DESIGN_SYSTEM_GUIDE.md": {
            "lines": 406,
            "tokens": 1953,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 11876,
          "tokens": 64372,
          "sources": 91,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/modules/contact-import/ui/components/grid-layout/styles/scrollable.css": {
            "lines": 109,
            "tokens": 561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/HandleDraggableToolbar.tsx": {
            "lines": 18,
            "tokens": 102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/grid-layout/components/EnhancedDraggableToolbar.module.css": {
            "lines": 23,
            "tokens": 163,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 163,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/components/resizable-table/ResizableTable.css": {
            "lines": 163,
            "tokens": 954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/components/InteractiveTreeNode.module.css": {
            "lines": 103,
            "tokens": 641,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-strategy-mode-selector.tsx": {
            "lines": 233,
            "tokens": 2121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-strategy-candidates-section.tsx": {
            "lines": 13,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/universal-ui/ui/components/universal-enhanced-step-card-integration.tsx": {
            "lines": 8,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepUpload.module.css": {
            "lines": 6,
            "tokens": 31,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepDetectDevices.module.css": {
            "lines": 18,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/steps/StepConfigure.module.css": {
            "lines": 12,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/DeviceAssignmentGrid.module.css": {
            "lines": 49,
            "tokens": 295,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/BatchResultModal.module.css": {
            "lines": 20,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/components/BatchPreviewModal.module.css": {
            "lines": 12,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/batch-manager/BatchManagerDrawer.module.css": {
            "lines": 22,
            "tokens": 106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/list-view/ElementListView.css": {
            "lines": 32,
            "tokens": 184,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/views/grid-view/GridElementView.module.css": {
            "lines": 245,
            "tokens": 2016,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/page-finder/styles/index.css": {
            "lines": 63,
            "tokens": 845,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/universal-ui/element-selection/element-discovery/LightThemeCard.module.css": {
            "lines": 54,
            "tokens": 358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/script-builder/components/script-builder-step-card.tsx": {
            "lines": 67,
            "tokens": 253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/precise-acquisition/components/prospecting-step-card.tsx": {
            "lines": 32,
            "tokens": 110,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/contact-import/ui/ContactImportWorkbench.module.css": {
            "lines": 34,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/modules/adb/components/adb-step-card.tsx": {
            "lines": 76,
            "tokens": 283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/native-antd/native-reset.css": {
            "lines": 26,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/tokens.css": {
            "lines": 377,
            "tokens": 3251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/theme.css": {
            "lines": 40,
            "tokens": 292,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/surfaces.css": {
            "lines": 12,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/EnhancedDraggableToolbar.module.css": {
            "lines": 23,
            "tokens": 163,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 163,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/DraggableStepCard.module.css": {
            "lines": 149,
            "tokens": 897,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/style.css": {
            "lines": 154,
            "tokens": 980,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/index.css": {
            "lines": 244,
            "tokens": 1525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2437,
          "tokens": 16774,
          "sources": 31,
          "clones": 1,
          "duplicatedLines": 23,
          "duplicatedTokens": 163,
          "percentage": 0.94,
          "percentageTokens": 0.97,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 435929,
      "tokens": 3677379,
      "sources": 2701,
      "clones": 650,
      "duplicatedLines": 14419,
      "duplicatedTokens": 139007,
      "percentage": 3.31,
      "percentageTokens": 3.78,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "{\r\n      key: 'pin',\r\n      label: settings.isPinned ? '取消固定' : '固定位置',\r\n      icon: settings.isPinned ? <PushpinFilled /> : <PushpinOutlined />,\r\n      onClick: () => onSettingsChange({ isPinned: !settings.isPinned })\r\n    },\r\n    {\r\n      key: 'expand'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\toolbar-actions\\EnhancedSettingsMenu.tsx",
        "start": 142,
        "end": 149,
        "startLoc": {
          "line": 142,
          "column": 5,
          "position": 1080
        },
        "endLoc": {
          "line": 149,
          "column": 9,
          "position": 1171
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\toolbar-actions\\EnhancedSettingsMenu.tsx",
        "start": 56,
        "end": 63,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 362
        },
        "endLoc": {
          "line": 63,
          "column": 11,
          "position": 453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "useEffect(() => {\r\n    let timeoutId: NodeJS.Timeout;\r\n\r\n    const handleResize = () => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        setViewport({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        });\r\n      }, debounceMs);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    window.addEventListener('orientationchange', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      window.removeEventListener('orientationchange', handleResize);\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [debounceMs]);\r\n\r\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\responsive\\hooks.ts",
        "start": 115,
        "end": 138,
        "startLoc": {
          "line": 115,
          "column": 3,
          "position": 1053
        },
        "endLoc": {
          "line": 138,
          "column": 7,
          "position": 1254
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\responsive\\hooks.ts",
        "start": 60,
        "end": 83,
        "startLoc": {
          "line": 60,
          "column": 3,
          "position": 537
        },
        "endLoc": {
          "line": 83,
          "column": 10,
          "position": 738
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const includes: Record<string, string[]> = {\r\n        'package': ['com.xingin.xhs'],\r\n        'first_child_text': ['关注'],\r\n        'class': ['FrameLayout'],\r\n      };\r\n      const excludes: Record<string, string[]> = {\r\n        'first_child_text': ['已关注', '关注中', '已拉黑', '取消关注'],\r\n      };\r\n\r\n      return {\r\n        strategy,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\element-presets\\registry.ts",
        "start": 48,
        "end": 58,
        "startLoc": {
          "line": 48,
          "column": 7,
          "position": 479
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 589
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\element-presets\\registry.ts",
        "start": 25,
        "end": 33,
        "startLoc": {
          "line": 25,
          "column": 9,
          "position": 233
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 339
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "text: [\r\n          '已关注', '已添加', '已删除', '已移除', '已拉黑', \r\n          '已发送', '已收藏', '已点赞', '已订阅', '已完成',\r\n          'Following', 'Added', 'Sent', 'Done', 'Completed'\r\n        ],\r\n        first_child_text: [\r\n          '已关注', '已添加', '已删除', '已移除', '已拉黑',\r\n          '已发送', '已收藏', '已点赞', '已订阅', '已完成',\r\n          'Following', 'Added', 'Sent', 'Done', 'Completed'\r\n        ],\r\n        // 排除禁用状态",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\element-presets\\registry.ts",
        "start": 169,
        "end": 179,
        "startLoc": {
          "line": 169,
          "column": 9,
          "position": 1788
        },
        "endLoc": {
          "line": 179,
          "column": 10,
          "position": 1912
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\element-presets\\registry.ts",
        "start": 95,
        "end": 97,
        "startLoc": {
          "line": 95,
          "column": 11,
          "position": 941
        },
        "endLoc": {
          "line": 97,
          "column": 10,
          "position": 1017
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": "={{ fontSize: 12, lineHeight: 1.6 }}>\r\n        <p>将删除以下 {selectedRecords.length} 个导入记录：</p>\r\n        <ul style={{ paddingLeft: 18, marginBottom: 12 }}>\r\n          {selectedRecords.slice(0, 5).map((record) => (\r\n            <li key={record.id}>\r\n              {record.fileName} ({record.importedNumbers} 个号码)\r\n            </li>\r\n          ))}\r\n          {selectedRecords.length > 5 && (\r\n            <li>... 另外 {selectedRecords.length - 5} 个记录</li>\r\n          )}\r\n        </ul>\r\n        <p style={{ marginBottom: 0 }}>请选择删除方式：</p>\r\n        <ul style={{ paddingLeft: 18, marginBottom: 0 }}>\r\n          <li><strong>直接删除</strong>：仅移除记录，保留号码当前状态。</li>\r\n          <li><strong>号码归档</strong>：将相关号码恢复为未导入并释放批次占用。</li>\r\n        </ul>\r\n      </div>\r\n    ),\r\n    okButtonProps: { style: { display: 'none' } },\r\n    cancelButtonProps: { style: { display: 'none' } },\r\n    footer: () => (\r\n      <Space style={{ width: '100%', justifyContent: 'flex-end' }}>\r\n        <Button onClick={() => Modal.destroyAll()}>取消</Button>\r\n        <Button\r\n          danger\r\n          onClick={() => {\r\n            Modal.destroyAll();\r\n            onConfirmDelete();\r\n          }}\r\n        >\r\n          直接删除\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            Modal.destroyAll();\r\n            onConfirmArchive();\r\n          }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\logic\\confirmBulkDelete.tsx",
        "start": 19,
        "end": 57,
        "startLoc": {
          "line": 19,
          "column": 6,
          "position": 162
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 612
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\logic\\ConfirmBulkDeleteDialog.tsx",
        "start": 19,
        "end": 57,
        "startLoc": {
          "line": 19,
          "column": 6,
          "position": 162
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 612
        }
      }
    },
    {
      "format": "tsx",
      "lines": 55,
      "fragment": "(\r\n  selectedRecords: TxtImportRecordDto[],\r\n  onConfirmDelete: () => void,\r\n  onConfirmArchive: () => void,\r\n) {\r\n  return Modal.confirm({\r\n    title: `批量删除确认`,\r\n    icon: <ExclamationCircleOutlined />,\r\n    content: (\r\n      <div style={{ fontSize: 12, lineHeight: 1.6 }}>\r\n        <p>将删除以下 {selectedRecords.length} 个导入记录：</p>\r\n        <ul style={{ paddingLeft: 18, marginBottom: 12 }}>\r\n          {selectedRecords.slice(0, 5).map((record) => (\r\n            <li key={record.id}>\r\n              {record.fileName} ({record.importedNumbers} 个号码)\r\n            </li>\r\n          ))}\r\n          {selectedRecords.length > 5 && (\r\n            <li>... 另外 {selectedRecords.length - 5} 个记录</li>\r\n          )}\r\n        </ul>\r\n        <p style={{ marginBottom: 0 }}>请选择删除方式：</p>\r\n        <ul style={{ paddingLeft: 18, marginBottom: 0 }}>\r\n          <li><strong>直接删除</strong>：仅移除记录，保留号码当前状态。</li>\r\n          <li><strong>号码归档</strong>：将相关号码恢复为未导入并释放批次占用。</li>\r\n        </ul>\r\n      </div>\r\n    ),\r\n    okButtonProps: { style: { display: 'none' } },\r\n    cancelButtonProps: { style: { display: 'none' } },\r\n    footer: () => (\r\n      <Space style={{ width: '100%', justifyContent: 'flex-end' }}>\r\n        <Button onClick={() => Modal.destroyAll()}>取消</Button>\r\n        <Button\r\n          danger\r\n          onClick={() => {\r\n            Modal.destroyAll();\r\n            onConfirmDelete();\r\n          }}\r\n        >\r\n          直接删除\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            Modal.destroyAll();\r\n            onConfirmArchive();\r\n          }}\r\n        >\r\n          号码归档后删除\r\n        </Button>\r\n      </Space>\r\n    ),\r\n  });\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\logic\\confirmBulkDelete.tsx",
        "start": 10,
        "end": 64,
        "startLoc": {
          "line": 10,
          "column": 18,
          "position": 77
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 644
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\logic\\ConfirmBulkDeleteDialog.tsx",
        "start": 10,
        "end": 64,
        "startLoc": {
          "line": 10,
          "column": 24,
          "position": 77
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 644
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "targets.forEach(selector => {\r\n      const elements = document.querySelectorAll(selector);\r\n      elements.forEach(el => {\r\n        const element = el as HTMLElement;\r\n        const isResizeHandle = element.hasAttribute('data-resize-handle') || \r\n                              element.getAttribute('role') === 'separator';\r\n        \r\n        if (isResizeHandle) {\r\n          const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDragRestore.ts",
        "start": 175,
        "end": 183,
        "startLoc": {
          "line": 175,
          "column": 5,
          "position": 1484
        },
        "endLoc": {
          "line": 183,
          "column": 6,
          "position": 1582
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDragRestore.ts",
        "start": 140,
        "end": 149,
        "startLoc": {
          "line": 140,
          "column": 5,
          "position": 1137
        },
        "endLoc": {
          "line": 149,
          "column": 14,
          "position": 1237
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "{\r\n  initialPosition?: { x: number; y: number };\r\n  bounds?: 'window' | 'parent' | { top: number; left: number; right: number; bottom: number };\r\n  disabled?: boolean;\r\n  onDragStart?: (position: { x: number; y: number }) => void;\r\n  onDrag?: (position: { x: number; y: number }) => void;\r\n  onDragEnd?: (position: { x: number; y: number }) => void;\r\n  storageKey?: string;\r\n  enablePerformanceMode?: boolean; // 启用性能优化模式",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 8,
        "end": 16,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 68
        },
        "endLoc": {
          "line": 16,
          "column": 12,
          "position": 254
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 10,
        "end": 19,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 105
        },
        "endLoc": {
          "line": 19,
          "column": 20,
          "position": 293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "]);\r\n\r\n  // 从 localStorage 恢复位置\r\n  const getInitialPosition = useCallback(() => {\r\n    if (storageKey && typeof window !== 'undefined') {\r\n      try {\r\n        const saved = localStorage.getItem(storageKey);\r\n        if (saved) {\r\n          const parsed = JSON.parse(saved);\r\n          return { x: parsed.x || initialPosition.x, y: parsed.y || initialPosition.y };\r\n        }\r\n      } catch (error) {\r\n        console.warn('Failed to load draggable position:', error);\r\n      }\r\n    }\r\n    return initialPosition;\r\n  }, [initialPosition, storageKey]);\r\n\r\n  const [state, setState] = useState<DraggableOptimizedState",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 43,
        "end": 61,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 469
        },
        "endLoc": {
          "line": 61,
          "column": 24,
          "position": 675
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 53,
        "end": 71,
        "startLoc": {
          "line": 53,
          "column": 22,
          "position": 589
        },
        "endLoc": {
          "line": 71,
          "column": 16,
          "position": 795
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ".current.parentElement;\r\n      const rect = parent.getBoundingClientRect();\r\n      return {\r\n        top: 0,\r\n        left: 0,\r\n        right: rect.width,\r\n        bottom: rect.height\r\n      };\r\n    } else if (typeof bounds === 'object') {\r\n      return bounds;\r\n    }\r\n    return null;\r\n  }, [bounds]);\r\n\r\n  // 约束位置在边界内\r\n  const constrainPosition = useCallback((pos: { x: number; y: number }) => {\r\n    const boundsRect = getBounds();\r\n    if (!boundsRect || !elementRef",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 103,
        "end": 120,
        "startLoc": {
          "line": 103,
          "column": 11,
          "position": 1152
        },
        "endLoc": {
          "line": 120,
          "column": 11,
          "position": 1332
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 111,
        "end": 128,
        "startLoc": {
          "line": 111,
          "column": 13,
          "position": 1238
        },
        "endLoc": {
          "line": 128,
          "column": 13,
          "position": 1418
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ".current;\r\n    const elementRect = element.getBoundingClientRect();\r\n    \r\n    return {\r\n      x: Math.max(\r\n        boundsRect.left,\r\n        Math.min(pos.x, boundsRect.right - elementRect.width)\r\n      ),\r\n      y: Math.max(\r\n        boundsRect.top,\r\n        Math.min(pos.y, boundsRect.bottom - elementRect.height)\r\n      )\r\n    };\r\n  }, [getBounds]);\r\n\r\n  // 优化的状态更新函数\r\n  const updatePosition = useCallback((newPosition: { x: number; y: number }) => {\r\n    lastPositionRef.current = newPosition;\r\n    \r\n    if (enablePerformanceMode) {\r\n      // 使用批量更新器减少重渲染",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 122,
        "end": 142,
        "startLoc": {
          "line": 122,
          "column": 11,
          "position": 1353
        },
        "endLoc": {
          "line": 142,
          "column": 16,
          "position": 1548
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 130,
        "end": 150,
        "startLoc": {
          "line": 130,
          "column": 13,
          "position": 1439
        },
        "endLoc": {
          "line": 150,
          "column": 17,
          "position": 1634
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "performanceTools.batchUpdater.add(() => {\r\n        setState(prev => ({\r\n          ...prev,\r\n          position: newPosition\r\n        }));\r\n      });\r\n    } else {\r\n      setState(prev => ({\r\n        ...prev,\r\n        position: newPosition\r\n      }));\r\n    }\r\n  }, [enablePerformanceMode, performanceTools.batchUpdater]);\r\n\r\n  // 优化的鼠标移动处理 - 使用RAF节流",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 143,
        "end": 157,
        "startLoc": {
          "line": 143,
          "column": 7,
          "position": 1552
        },
        "endLoc": {
          "line": 157,
          "column": 23,
          "position": 1665
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 150,
        "end": 164,
        "startLoc": {
          "line": 150,
          "column": 7,
          "position": 1634
        },
        "endLoc": {
          "line": 164,
          "column": 18,
          "position": 1747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "e.preventDefault();\r\n\r\n      const dragOffset = state.dragOffset;\r\n      const newPosition = constrainPosition({\r\n        x: e.clientX - dragOffset.x,\r\n        y: e.clientY - dragOffset.y\r\n      });\r\n\r\n      // 只有位置真正改变时才更新\r\n      const lastPos = lastPositionRef.current;\r\n      if (newPosition.x !== lastPos.x || newPosition.y !== lastPos.y) {\r\n        updatePosition(newPosition);\r\n        onDrag?.(newPosition);\r\n      }\r\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 7,
          "position": 1721
        },
        "endLoc": {
          "line": 176,
          "column": 2,
          "position": 1865
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 177,
        "end": 192,
        "startLoc": {
          "line": 177,
          "column": 7,
          "position": 1860
        },
        "endLoc": {
          "line": 192,
          "column": 10,
          "position": 2006
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "]);\r\n\r\n  // 重置位置\r\n  const resetPosition = useCallback(() => {\r\n    const newPosition = constrainPosition(initialPosition);\r\n    updatePosition(newPosition);\r\n    savePosition(newPosition);\r\n  }, [initialPosition, constrainPosition, updatePosition, savePosition]);\r\n\r\n  // 设置位置\r\n  const setPosition = useCallback((newPosition: { x: number; y: number }) => {\r\n    const constrainedPosition = constrainPosition(newPosition);\r\n    updatePosition(constrainedPosition);\r\n    savePosition(constrainedPosition);\r\n  }, [constrainPosition, updatePosition, savePosition]);\r\n\r\n  return {\r\n    // 状态\r\n    position: state.position,\r\n    isDragging: state.isDragging,\r\n    \r\n    // 事件处理器",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 262,
        "end": 283,
        "startLoc": {
          "line": 262,
          "column": 22,
          "position": 2706
        },
        "endLoc": {
          "line": 283,
          "column": 9,
          "position": 2906
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 291,
        "end": 311,
        "startLoc": {
          "line": 291,
          "column": 17,
          "position": 2917
        },
        "endLoc": {
          "line": 311,
          "column": 19,
          "position": 3115
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "{\r\n  initialPosition?: { x: number; y: number };\r\n  bounds?: 'window' | 'parent' | { top: number; left: number; right: number; bottom: number };\r\n  disabled?: boolean;\r\n  onDragStart?: (position: { x: number; y: number }) => void;\r\n  onDrag?: (position: { x: number; y: number }) => void;\r\n  onDragEnd?: (position: { x: number; y: number }) => void;\r\n  storageKey?: string; // 保存位置到 localStorage",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggable.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 45
        },
        "endLoc": {
          "line": 14,
          "column": 22,
          "position": 222
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 10,
        "end": 18,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 105
        },
        "endLoc": {
          "line": 18,
          "column": 22,
          "position": 284
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "// 从 localStorage 恢复位置\r\n  const getInitialPosition = useCallback(() => {\r\n    if (storageKey && typeof window !== 'undefined') {\r\n      try {\r\n        const saved = localStorage.getItem(storageKey);\r\n        if (saved) {\r\n          const parsed = JSON.parse(saved);\r\n          return { x: parsed.x || initialPosition.x, y: parsed.y || initialPosition.y };\r\n        }\r\n      } catch (error) {\r\n        console.warn('Failed to load draggable position:', error);\r\n      }\r\n    }\r\n    return initialPosition;\r\n  }, [initialPosition, storageKey]);\r\n\r\n  const [state, setState] = useState<DraggableState",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggable.ts",
        "start": 32,
        "end": 48,
        "startLoc": {
          "line": 32,
          "column": 3,
          "position": 377
        },
        "endLoc": {
          "line": 48,
          "column": 15,
          "position": 575
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 55,
        "end": 71,
        "startLoc": {
          "line": 55,
          "column": 3,
          "position": 597
        },
        "endLoc": {
          "line": 71,
          "column": 16,
          "position": 795
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "}, [storageKey]);\r\n\r\n  // 计算边界约束\r\n  const getBounds = useCallback(() => {\r\n    if (bounds === 'window') {\r\n      return {\r\n        top: 0,\r\n        left: 0,\r\n        right: window.innerWidth,\r\n        bottom: window.innerHeight\r\n      };\r\n    } else if (bounds === 'parent' && elementRef",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggable.ts",
        "start": 65,
        "end": 76,
        "startLoc": {
          "line": 65,
          "column": 3,
          "position": 762
        },
        "endLoc": {
          "line": 76,
          "column": 11,
          "position": 871
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useHandleDrag.ts",
        "start": 99,
        "end": 110,
        "startLoc": {
          "line": 99,
          "column": 3,
          "position": 1110
        },
        "endLoc": {
          "line": 110,
          "column": 13,
          "position": 1219
        }
      }
    },
    {
      "format": "typescript",
      "lines": 44,
      "fragment": "const getBounds = useCallback(() => {\r\n    if (bounds === 'window') {\r\n      return {\r\n        top: 0,\r\n        left: 0,\r\n        right: window.innerWidth,\r\n        bottom: window.innerHeight\r\n      };\r\n    } else if (bounds === 'parent' && elementRef.current?.parentElement) {\r\n      const parent = elementRef.current.parentElement;\r\n      const rect = parent.getBoundingClientRect();\r\n      return {\r\n        top: 0,\r\n        left: 0,\r\n        right: rect.width,\r\n        bottom: rect.height\r\n      };\r\n    } else if (typeof bounds === 'object') {\r\n      return bounds;\r\n    }\r\n    return null;\r\n  }, [bounds]);\r\n\r\n  // 约束位置在边界内\r\n  const constrainPosition = useCallback((pos: { x: number; y: number }) => {\r\n    const boundsRect = getBounds();\r\n    if (!boundsRect || !elementRef.current) return pos;\r\n\r\n    const element = elementRef.current;\r\n    const elementRect = element.getBoundingClientRect();\r\n    \r\n    return {\r\n      x: Math.max(\r\n        boundsRect.left,\r\n        Math.min(pos.x, boundsRect.right - elementRect.width)\r\n      ),\r\n      y: Math.max(\r\n        boundsRect.top,\r\n        Math.min(pos.y, boundsRect.bottom - elementRect.height)\r\n      )\r\n    };\r\n  }, [getBounds]);\r\n\r\n  // 处理鼠标按下",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggable.ts",
        "start": 68,
        "end": 111,
        "startLoc": {
          "line": 68,
          "column": 3,
          "position": 779
        },
        "endLoc": {
          "line": 111,
          "column": 10,
          "position": 1225
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 94,
        "end": 145,
        "startLoc": {
          "line": 94,
          "column": 3,
          "position": 1041
        },
        "endLoc": {
          "line": 145,
          "column": 13,
          "position": 1573
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const element = elementRef.current;\r\n    if (!element) return;\r\n\r\n    const rect = element.getBoundingClientRect();\r\n    const dragOffset = {\r\n      x: e.clientX - rect.left,\r\n      y: e.clientY - rect.top\r\n    };\r\n\r\n    setState",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggable.ts",
        "start": 115,
        "end": 127,
        "startLoc": {
          "line": 115,
          "column": 5,
          "position": 1277
        },
        "endLoc": {
          "line": 127,
          "column": 9,
          "position": 1387
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 192,
        "end": 204,
        "startLoc": {
          "line": 192,
          "column": 5,
          "position": 2031
        },
        "endLoc": {
          "line": 204,
          "column": 14,
          "position": 2141
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ", savePosition]);\r\n\r\n  return {\r\n    // 状态\r\n    position: state.position,\r\n    isDragging: state.isDragging,\r\n    \r\n    // 事件处理器\r\n    dragHandlers: {\r\n      onMouseDown: handleMouseDown,\r\n      ref: elementRef as React.RefObject<HTMLDivElement>\r\n    },\r\n    \r\n    // 控制方法\r\n    resetPosition,\r\n    setPosition,\r\n    \r\n    // 样式属性\r\n    style: {\r\n      position: 'fixed' as const,\r\n      left: state.position.x,\r\n      top: state.position.y,\r\n      cursor: state.isDragging ? 'grabbing' : 'grab',\r\n      userSelect: 'none' as const,\r\n      zIndex: 9999\r\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggable.ts",
        "start": 203,
        "end": 228,
        "startLoc": {
          "line": 203,
          "column": 18,
          "position": 2123
        },
        "endLoc": {
          "line": 228,
          "column": 2,
          "position": 2308
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useDraggableOptimized.ts",
        "start": 276,
        "end": 300,
        "startLoc": {
          "line": 276,
          "column": 15,
          "position": 2863
        },
        "endLoc": {
          "line": 300,
          "column": 2,
          "position": 3045
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "</Space>\r\n      ),\r\n      onClick: () => onPanelVisibilityChange(panel.i, !panel.visible)\r\n    })), \r\n    [panels, onPanelVisibilityChange]\r\n  );\r\n\r\n  // 设置菜单 - 使用useMemo避免重复创建\r\n  const settingsMenuItems = useMemo(() => [\r\n    {\r\n      key: 'pin',\r\n      label: settings.isPinned ? '取消固定' : '固定位置',\r\n      icon: settings.isPinned ? <PushpinFilled /> : <PushpinOutlined />,\r\n      onClick: () => updateSettings({ isPinned: !settings.isPinned })\r\n    },\r\n    {\r\n      key: 'collapse',\r\n      label: settings.isCollapsed ? '展开工具栏' : '收起工具栏',\r\n      icon: settings.isCollapsed ? <ExpandOutlined /> : <CompressOutlined />,\r\n      onClick: () => updateSettings({ isCollapsed: !settings.isCollapsed })\r\n    },\r\n    {\r\n      type",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HeaderOnlyDragToolbar.tsx",
        "start": 55,
        "end": 77,
        "startLoc": {
          "line": 55,
          "column": 9,
          "position": 470
        },
        "endLoc": {
          "line": 77,
          "column": 5,
          "position": 720
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 90,
        "end": 112,
        "startLoc": {
          "line": 90,
          "column": 9,
          "position": 832
        },
        "endLoc": {
          "line": 112,
          "column": 4,
          "position": 1082
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "</Button>\r\n            </Dropdown>\r\n\r\n            {/* 重置布局 */}\r\n            <Tooltip title=\"重置布局\">\r\n              <Button\r\n                size=\"small\"\r\n                type=\"text\"\r\n                onClick={onLayoutReset}\r\n              >\r\n                重置\r\n              </Button>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n\r\n        {/* 设置菜单 */}\r\n        <Dropdown\r\n          menu={{ items: settingsMenuItems }}\r\n          trigger={['click']}\r\n          placement=\"bottomRight\"\r\n        >\r\n          <Tooltip title=\"工具栏设置",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HeaderOnlyDragToolbar.tsx",
        "start": 131,
        "end": 153,
        "startLoc": {
          "line": 131,
          "column": 15,
          "position": 1157
        },
        "endLoc": {
          "line": 153,
          "column": 6,
          "position": 1286
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 186,
        "end": 208,
        "startLoc": {
          "line": 186,
          "column": 15,
          "position": 1744
        },
        "endLoc": {
          "line": 208,
          "column": 3,
          "position": 1873
        }
      }
    },
    {
      "format": "javascript",
      "lines": 66,
      "fragment": "={{ width: '100%', justifyContent: 'space-between' }}>\r\n          <span style={{ color: panel.visible ? '#1890ff' : '#999' }}>\r\n            {panel.title}\r\n          </span>\r\n          <Text type={panel.visible ? 'success' : 'secondary'} style={{ fontSize: '12px' }}>\r\n            {panel.visible ? '✓ 显示' : '✕ 隐藏'}\r\n          </Text>\r\n        </Space>\r\n      ),\r\n      onClick: () => onPanelVisibilityChange(panel.i, !panel.visible)\r\n    })), \r\n    [panels, onPanelVisibilityChange]\r\n  );\r\n\r\n  // 设置菜单\r\n  const settingsMenuItems = useMemo(() => [\r\n    {\r\n      key: 'pin',\r\n      label: settings.isPinned ? '取消固定' : '固定位置',\r\n      icon: settings.isPinned ? <PushpinFilled /> : <PushpinOutlined />,\r\n      onClick: () => updateSettings({ isPinned: !settings.isPinned })\r\n    },\r\n    {\r\n      key: 'collapse',\r\n      label: settings.isCollapsed ? '展开工具栏' : '收起工具栏',\r\n      icon: settings.isCollapsed ? <ExpandOutlined /> : <CompressOutlined />,\r\n      onClick: () => updateSettings({ isCollapsed: !settings.isCollapsed })\r\n    },\r\n    {\r\n      type: 'divider' as const\r\n    },\r\n    {\r\n      key: 'hide',\r\n      label: '隐藏工具栏',\r\n      icon: <EyeInvisibleOutlined />,\r\n      onClick: () => hideToolbar()\r\n    }\r\n  ], [settings, updateSettings, hideToolbar]);\r\n\r\n  // 如果工具栏被隐藏，不渲染\r\n  if (!isVisible) {\r\n    return null;\r\n  }\r\n\r\n  // 工具栏样式\r\n  const toolbarStyle = useMemo(() => ({\r\n    ...dragStyle,\r\n    background: 'rgba(255, 255, 255, 0.95)',\r\n    border: '1px solid #d9d9d9',\r\n    borderRadius: '8px',\r\n    padding: settings.isCollapsed ? '6px' : '8px 12px',\r\n    boxShadow: isDragging && isThresholdReached\r\n      ? '0 8px 16px rgba(0, 0, 0, 0.15)' \r\n      : '0 2px 8px rgba(0, 0, 0, 0.1)',\r\n    backdropFilter: 'blur(8px)',\r\n    transition: isDragging ? 'none' : 'all 0.2s ease',\r\n    opacity: isDragging && isThresholdReached ? 0.9 : 1,\r\n    cursor: 'default', // 重要：容器本身不显示拖拽光标\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: '8px'\r\n  }), [dragStyle, settings.isCollapsed, isDragging, isThresholdReached]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerHandlers",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HandleDraggableToolbar.tsx",
        "start": 82,
        "end": 147,
        "startLoc": {
          "line": 82,
          "column": 6,
          "position": 678
        },
        "endLoc": {
          "line": 147,
          "column": 18,
          "position": 1362
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 83,
        "end": 146,
        "startLoc": {
          "line": 83,
          "column": 6,
          "position": 718
        },
        "endLoc": {
          "line": 146,
          "column": 13,
          "position": 1375
        }
      }
    },
    {
      "format": "javascript",
      "lines": 56,
      "fragment": " }}>\r\n        {/* 主要功能按钮 - 只在未收起时显示 */}\r\n        {!settings.isCollapsed && (\r\n          <>\r\n            {/* 面板控制 */}\r\n            <Dropdown\r\n              menu={{ \r\n                items: panelMenuItems,\r\n                style: { minWidth: '160px' }\r\n              }}\r\n              trigger={['click']}\r\n              placement=\"bottomLeft\"\r\n            >\r\n              <Button size=\"small\" type=\"text\" style={{ \r\n                fontWeight: panels.some(p => !p.visible) ? 'bold' : 'normal',\r\n                color: panels.some(p => !p.visible) ? '#faad14' : undefined\r\n              }}>\r\n                面板控制 {panels.some(p => !p.visible) && `(${panels.filter(p => !p.visible).length} 隐藏)`}\r\n              </Button>\r\n            </Dropdown>\r\n\r\n            {/* 重置布局 */}\r\n            <Tooltip title=\"重置布局\">\r\n              <Button\r\n                size=\"small\"\r\n                type=\"text\"\r\n                onClick={onLayoutReset}\r\n              >\r\n                重置\r\n              </Button>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n\r\n        {/* 设置菜单 */}\r\n        <Dropdown\r\n          menu={{ items: settingsMenuItems }}\r\n          trigger={['click']}\r\n          placement=\"bottomRight\"\r\n        >\r\n          <Tooltip title=\"设置\">\r\n            <Button\r\n              size=\"small\"\r\n              type=\"text\"\r\n              icon={<SettingOutlined />}\r\n            />\r\n          </Tooltip>\r\n        </Dropdown>\r\n      </div>\r\n\r\n      {/* 拖拽状态指示器 */}\r\n      {isDragging && isThresholdReached && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: -4",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HandleDraggableToolbar.tsx",
        "start": 180,
        "end": 235,
        "startLoc": {
          "line": 180,
          "column": 6,
          "position": 1682
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 2105
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 164,
        "end": 223,
        "startLoc": {
          "line": 164,
          "column": 7,
          "position": 1519
        },
        "endLoc": {
          "line": 223,
          "column": 2,
          "position": 1970
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const calculateInitialPosition = () => {\r\n    if (typeof window !== 'undefined') {\r\n      return { \r\n        x: Math.max(window.innerWidth - 300, 20), // 距离右边300px，最小距离左边20px\r\n        y: 130 // 布局切换器下方50px（80px + 切换器高度）\r\n      };\r\n    }\r\n    return { x: 20, y: 20 }; // 服务端渲染时的回退值\r\n  };\r\n\r\n  // 手柄专用拖拽功能",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HandleDraggableToolbar.tsx",
        "start": 50,
        "end": 60,
        "startLoc": {
          "line": 50,
          "column": 3,
          "position": 392
        },
        "endLoc": {
          "line": 60,
          "column": 12,
          "position": 500
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 55,
        "end": 65,
        "startLoc": {
          "line": 55,
          "column": 3,
          "position": 467
        },
        "endLoc": {
          "line": 65,
          "column": 6,
          "position": 575
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "const panelMenuItems = useMemo(() => \r\n    panels.map(panel => ({\r\n      key: panel.i,\r\n      label: (\r\n        <Space style={{ width: '100%', justifyContent: 'space-between' }}>\r\n          <span style={{ color: panel.visible ? '#1890ff' : '#999' }}>\r\n            {panel.title}\r\n          </span>\r\n          <Text type={panel.visible ? 'success' : 'secondary'} style={{ fontSize: '12px' }}>\r\n            {panel.visible ? '✓ 显示' : '✕ 隐藏'}\r\n          </Text>\r\n        </Space>\r\n      ),\r\n      onClick: () => onPanelVisibilityChange(panel.i, !panel.visible)\r\n    })), \r\n    [panels, onPanelVisibilityChange]\r\n  );\r\n\r\n  // 设置菜单",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HandleDraggableToolbar.tsx",
        "start": 78,
        "end": 96,
        "startLoc": {
          "line": 78,
          "column": 3,
          "position": 629
        },
        "endLoc": {
          "line": 96,
          "column": 8,
          "position": 849
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 79,
        "end": 97,
        "startLoc": {
          "line": 79,
          "column": 3,
          "position": 669
        },
        "endLoc": {
          "line": 97,
          "column": 26,
          "position": 889
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "const settingsMenuItems = useMemo(() => [\r\n    {\r\n      key: 'pin',\r\n      label: settings.isPinned ? '取消固定' : '固定位置',\r\n      icon: settings.isPinned ? <PushpinFilled /> : <PushpinOutlined />,\r\n      onClick: () => updateSettings({ isPinned: !settings.isPinned })\r\n    },\r\n    {\r\n      key: 'collapse',\r\n      label: settings.isCollapsed ? '展开工具栏' : '收起工具栏',\r\n      icon: settings.isCollapsed ? <ExpandOutlined /> : <CompressOutlined />,\r\n      onClick: () => updateSettings({ isCollapsed: !settings.isCollapsed })\r\n    },\r\n    {\r\n      type: 'divider' as const\r\n    },\r\n    {\r\n      key: 'hide',\r\n      label: '隐藏工具栏',\r\n      icon: <EyeInvisibleOutlined />,\r\n      onClick: (",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HandleDraggableToolbar.tsx",
        "start": 97,
        "end": 117,
        "startLoc": {
          "line": 97,
          "column": 3,
          "position": 853
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 1092
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 98,
        "end": 83,
        "startLoc": {
          "line": 98,
          "column": 3,
          "position": 893
        },
        "endLoc": {
          "line": 83,
          "column": 12,
          "position": 770
        }
      }
    },
    {
      "format": "tsx",
      "lines": 48,
      "fragment": "{/* 主要功能按钮 - 只在未收起时显示 */}\r\n        {!settings.isCollapsed && (\r\n          <>\r\n            {/* 面板控制 */}\r\n            <Dropdown\r\n              menu={{ \r\n                items: panelMenuItems,\r\n                style: { minWidth: '160px' }\r\n              }}\r\n              trigger={['click']}\r\n              placement=\"bottomLeft\"\r\n            >\r\n              <Button size=\"small\" type=\"text\" style={{ \r\n                fontWeight: panels.some(p => !p.visible) ? 'bold' : 'normal',\r\n                color: panels.some(p => !p.visible) ? '#faad14' : undefined\r\n              }}>\r\n                面板控制 {panels.some(p => !p.visible) && `(${panels.filter(p => !p.visible).length} 隐藏)`}\r\n              </Button>\r\n            </Dropdown>\r\n\r\n            {/* 重置布局 */}\r\n            <Tooltip title=\"重置布局\">\r\n              <Button\r\n                size=\"small\"\r\n                type=\"text\"\r\n                onClick={onLayoutReset}\r\n              >\r\n                重置\r\n              </Button>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n\r\n        {/* 设置菜单 */}\r\n        <Dropdown\r\n          menu={{ items: settingsMenuItems }}\r\n          trigger={['click']}\r\n          placement=\"bottomRight\"\r\n        >\r\n          <Tooltip title=\"设置\">\r\n            <Button\r\n              size=\"small\"\r\n              type=\"text\"\r\n              icon={<SettingOutlined />}\r\n            />\r\n          </Tooltip>\r\n        </Dropdown>\r\n      </div",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HandleDraggableToolbar.tsx",
        "start": 181,
        "end": 228,
        "startLoc": {
          "line": 181,
          "column": 9,
          "position": 1689
        },
        "endLoc": {
          "line": 228,
          "column": 4,
          "position": 2063
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 169,
        "end": 216,
        "startLoc": {
          "line": 169,
          "column": 9,
          "position": 1546
        },
        "endLoc": {
          "line": 216,
          "column": 6,
          "position": 1920
        }
      }
    },
    {
      "format": "javascript",
      "lines": 91,
      "fragment": "={panel.i}>\r\n          <Space>\r\n            <Switch\r\n              size=\"small\"\r\n              checked={panel.visible}\r\n              onChange={(checked) => onPanelVisibilityChange?.(panel.i, checked)}\r\n            />\r\n            <span>{panel.title}</span>\r\n          </Space>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  // 布局类型菜单\r\n  const layoutTypeMenu = (\r\n    <Menu\r\n      selectedKeys={[compactType || 'none']}\r\n      onClick={({ key }) => {\r\n        const type = key === 'none' ? null : key as 'vertical' | 'horizontal';\r\n        onCompactTypeChange?.(type);\r\n      }}\r\n    >\r\n      <Menu.Item key=\"vertical\">垂直紧凑</Menu.Item>\r\n      <Menu.Item key=\"horizontal\">水平紧凑</Menu.Item>\r\n      <Menu.Item key=\"none\">自由布局</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  // 版本快速切换菜单\r\n  const versionQuickMenu = (\r\n    <Menu>\r\n      {versions.slice(0, 5).map(version => (\r\n        <Menu.Item \r\n          key={version.id}\r\n          onClick={() => onVersionSwitch?.(version)}\r\n        >\r\n          <Space>\r\n            <Text>{version.name}</Text>\r\n            {currentVersion?.id === version.id && <Badge status=\"processing\" />}\r\n            {version.isDefault && <Tag color=\"gold\" style={{ fontSize: '10px' }}>默认</Tag>}\r\n          </Space>\r\n        </Menu.Item>\r\n      ))}\r\n      {versions.length > 5 && <Menu.Divider />}\r\n      <Menu.Item key=\"manage\" onClick={() => setVersionManagerVisible(true)}>\r\n        <Text type=\"secondary\">管理全部版本...</Text>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  // 性能优化设置\r\n  const performancePopover = (\r\n    <div style={{ width: 280 }}>\r\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n        <div>\r\n          <Text strong>性能优化</Text>\r\n        </div>\r\n        \r\n        <div>\r\n          <Space>\r\n            <Switch \r\n              checked={performanceMode}\r\n              onChange={setPerformanceMode}\r\n            />\r\n            <Text>高性能模式</Text>\r\n          </Space>\r\n          <div style={{ marginTop: 4 }}>\r\n            <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n              启用虚拟化渲染，减少内存占用\r\n            </Text>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n            当前面板数量: {panels.length} | \r\n            可见面板: {panels.filter(p => p.visible).length}\r\n          </Text>\r\n        </div>\r\n      </Space>\r\n    </div>\r\n  );\r\n\r\n  // 工具栏操作按钮\r\n  const renderToolbarActions = () => (\r\n    <Space size=\"small\">\r\n      {/* 版本管理 */}\r\n      <Tooltip title=\"布局版本\">\r\n        <Dropdown \r\n          overlay={versionQuickMenu",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\FloatingLayoutToolbar.tsx",
        "start": 75,
        "end": 165,
        "startLoc": {
          "line": 75,
          "column": 4,
          "position": 712
        },
        "endLoc": {
          "line": 165,
          "column": 17,
          "position": 1555
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\LayoutControlToolbar.tsx",
        "start": 51,
        "end": 138,
        "startLoc": {
          "line": 51,
          "column": 4,
          "position": 469
        },
        "endLoc": {
          "line": 138,
          "column": 43,
          "position": 1274
        }
      }
    },
    {
      "format": "javascript",
      "lines": 43,
      "fragment": ": 4 }}\r\n              />\r\n            )}\r\n          </Button>\r\n        </Dropdown>\r\n      </Tooltip>\r\n\r\n      {/* 保存当前布局 */}\r\n      <Tooltip title=\"保存当前布局\">\r\n        <Button \r\n          icon={<SaveOutlined />} \r\n          size=\"small\" \r\n          type=\"text\"\r\n          onClick={() => setVersionManagerVisible(true)}\r\n        >\r\n          {!isCollapsed && '保存'}\r\n        </Button>\r\n      </Tooltip>\r\n\r\n      {/* 面板可见性 */}\r\n      <Tooltip title=\"显示/隐藏面板\">\r\n        <Dropdown \r\n          overlay={visibilityMenu} \r\n          trigger={['click']} \r\n          placement=\"bottomRight\"\r\n        >\r\n          <Button icon={<EyeOutlined />} size=\"small\" type=\"text\">\r\n            {!isCollapsed && '面板'}\r\n          </Button>\r\n        </Dropdown>\r\n      </Tooltip>\r\n\r\n      {/* 布局类型 */}\r\n      <Tooltip title=\"布局模式\">\r\n        <Dropdown \r\n          overlay={layoutTypeMenu} \r\n          trigger={['click']} \r\n          placement=\"bottomRight\"\r\n        >\r\n          <Button \r\n            icon={<LayoutOutlined />} \r\n            size=\"small\" \r\n            type={compactType ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\FloatingLayoutToolbar.tsx",
        "start": 180,
        "end": 222,
        "startLoc": {
          "line": 180,
          "column": 2,
          "position": 1660
        },
        "endLoc": {
          "line": 222,
          "column": 13,
          "position": 1950
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\LayoutControlToolbar.tsx",
        "start": 171,
        "end": 218,
        "startLoc": {
          "line": 171,
          "column": 12,
          "position": 1470
        },
        "endLoc": {
          "line": 218,
          "column": 19,
          "position": 1788
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "{\r\n  panels: any[];\r\n  onPanelVisibilityChange?: (panelId: string, visible: boolean) => void;\r\n  onLayoutReset?: () => void;\r\n  onVersionSwitch?: (version: any) => void;\r\n  compactType?: 'vertical' | 'horizontal' | null;\r\n  onCompactTypeChange?: (type: 'vertical' | 'horizontal' | null) => void;\r\n  \r\n  // 浮动工具栏特有属性",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\FloatingLayoutToolbar.tsx",
        "start": 22,
        "end": 30,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 202
        },
        "endLoc": {
          "line": 30,
          "column": 13,
          "position": 317
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\LayoutControlToolbar.tsx",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 166
        },
        "endLoc": {
          "line": 26,
          "column": 10,
          "position": 279
        }
      }
    },
    {
      "format": "tsx",
      "lines": 91,
      "fragment": ");\r\n\r\n  // 面板可见性菜单\r\n  const visibilityMenu = (\r\n    <Menu>\r\n      {panels.map(panel => (\r\n        <Menu.Item key={panel.i}>\r\n          <Space>\r\n            <Switch\r\n              size=\"small\"\r\n              checked={panel.visible}\r\n              onChange={(checked) => onPanelVisibilityChange?.(panel.i, checked)}\r\n            />\r\n            <span>{panel.title}</span>\r\n          </Space>\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  // 布局类型菜单\r\n  const layoutTypeMenu = (\r\n    <Menu\r\n      selectedKeys={[compactType || 'none']}\r\n      onClick={({ key }) => {\r\n        const type = key === 'none' ? null : key as 'vertical' | 'horizontal';\r\n        onCompactTypeChange?.(type);\r\n      }}\r\n    >\r\n      <Menu.Item key=\"vertical\">垂直紧凑</Menu.Item>\r\n      <Menu.Item key=\"horizontal\">水平紧凑</Menu.Item>\r\n      <Menu.Item key=\"none\">自由布局</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  // 版本快速切换菜单\r\n  const versionQuickMenu = (\r\n    <Menu>\r\n      {versions.slice(0, 5).map(version => (\r\n        <Menu.Item \r\n          key={version.id}\r\n          onClick={() => onVersionSwitch?.(version)}\r\n        >\r\n          <Space>\r\n            <Text>{version.name}</Text>\r\n            {currentVersion?.id === version.id && <Badge status=\"processing\" />}\r\n            {version.isDefault && <Tag color=\"gold\" style={{ fontSize: '10px' }}>默认</Tag>}\r\n          </Space>\r\n        </Menu.Item>\r\n      ))}\r\n      {versions.length > 5 && <Menu.Divider />}\r\n      <Menu.Item key=\"manage\" onClick={() => setVersionManagerVisible(true)}>\r\n        <Text type=\"secondary\">管理全部版本...</Text>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  // 性能优化设置\r\n  const performancePopover = (\r\n    <div style={{ width: 280 }}>\r\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n        <div>\r\n          <Text strong>性能优化</Text>\r\n        </div>\r\n        \r\n        <div>\r\n          <Space>\r\n            <Switch \r\n              checked={performanceMode}\r\n              onChange={setPerformanceMode}\r\n            />\r\n            <Text>高性能模式</Text>\r\n          </Space>\r\n          <div style={{ marginTop: 4 }}>\r\n            <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n              启用虚拟化渲染，减少内存占用\r\n            </Text>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n            当前面板数量: {panels.length} | \r\n            可见面板: {panels.filter(p => p.visible).length}\r\n          </Text>\r\n        </div>\r\n      </Space>\r\n    </div>\r\n  );\r\n\r\n  // 工具栏操作按钮",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\FloatingLayoutToolbar.tsx",
        "start": 69,
        "end": 159,
        "startLoc": {
          "line": 69,
          "column": 2,
          "position": 668
        },
        "endLoc": {
          "line": 159,
          "column": 11,
          "position": 1500
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\LayoutControlToolbar.tsx",
        "start": 45,
        "end": 135,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 425
        },
        "endLoc": {
          "line": 135,
          "column": 7,
          "position": 1257
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": "={{ width: '100%', justifyContent: 'space-between' }}>\r\n          <span style={{ color: panel.visible ? '#1890ff' : '#999' }}>\r\n            {panel.title}\r\n          </span>\r\n          <Text type={panel.visible ? 'success' : 'secondary'} style={{ fontSize: '12px' }}>\r\n            {panel.visible ? '✓ 显示' : '✕ 隐藏'}\r\n          </Text>\r\n        </Space>\r\n      ),\r\n      onClick: () => onPanelVisibilityChange(panel.i, !panel.visible)\r\n    })), \r\n    [panels, onPanelVisibilityChange]\r\n  );\r\n\r\n\r\n\r\n  // 如果工具栏被隐藏，不渲染\r\n  if (!isVisible) {\r\n    return null;\r\n  }\r\n\r\n  // 工具栏样式\r\n  const toolbarStyle = useMemo(() => ({\r\n    ...dragStyle,\r\n    padding: toolbarActions.settings.isCollapsed ? '4px' : '8px 12px',\r\n    transform: enablePerformanceMode ? 'translateZ(0)' : undefined,\r\n    willChange: isDragging ? 'transform, opacity' : 'auto'\r\n  }), [dragStyle, toolbarActions.settings.isCollapsed, isDragging, enablePerformanceMode]);\r\n\r\n  return (\r\n    <div\r\n      ref={dragHandlers.ref}\r\n      style={toolbarStyle}\r\n      className={`",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.tsx",
        "start": 94,
        "end": 127,
        "startLoc": {
          "line": 94,
          "column": 6,
          "position": 781
        },
        "endLoc": {
          "line": 127,
          "column": 2,
          "position": 1116
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 83,
        "end": 148,
        "startLoc": {
          "line": 83,
          "column": 6,
          "position": 718
        },
        "endLoc": {
          "line": 148,
          "column": 20,
          "position": 1389
        }
      }
    },
    {
      "format": "javascript",
      "lines": 48,
      "fragment": ": ''}`}\r\n    >\r\n      <Space size=\"small\" wrap={false}>\r\n        {/* 拖拽手柄 */}\r\n        {!toolbarActions.settings.isPinned && (\r\n          <Tooltip title=\"拖拽移动工具栏\">\r\n            <div\r\n              {...dragHandlers}\r\n              style={{\r\n                cursor: 'grab',\r\n                padding: '2px',\r\n                borderRadius: '2px',\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n              }}\r\n            >\r\n              <DragOutlined style={{ color: '#999', fontSize: '12px' }} />\r\n            </div>\r\n          </Tooltip>\r\n        )}\r\n\r\n        {/* 主要功能按钮 */}\r\n        {!toolbarActions.settings.isCollapsed && (\r\n          <>\r\n            {/* 面板控制 */}\r\n            <Dropdown\r\n              menu={{ \r\n                items: panelMenuItems,\r\n                style: { minWidth: '160px' }\r\n              }}\r\n              trigger={['click']}\r\n              placement=\"bottomLeft\"\r\n            >\r\n              <Button size=\"small\" type=\"text\" style={{ \r\n                fontWeight: panels.some(p => !p.visible) ? 'bold' : 'normal',\r\n                color: panels.some(p => !p.visible) ? '#faad14' : undefined\r\n              }}>\r\n                面板控制 {panels.some(p => !p.visible) && `(${panels.filter(p => !p.visible).length} 隐藏)`}\r\n              </Button>\r\n            </Dropdown>\r\n\r\n\r\n          </>\r\n        )}\r\n\r\n        {/* 设置菜单 */}\r\n        <Dropdown\r\n          menu={{",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.tsx",
        "start": 127,
        "end": 174,
        "startLoc": {
          "line": 127,
          "column": 10,
          "position": 1134
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1523
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 148,
        "end": 194,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1400
        },
        "endLoc": {
          "line": 194,
          "column": 14,
          "position": 1794
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": "}}\r\n          trigger={['click']}\r\n          placement=\"bottomRight\"\r\n        >\r\n          <Tooltip title=\"更多设置\">\r\n            <Button\r\n              size=\"small\"\r\n              type=\"text\"\r\n              icon={<SettingOutlined />}\r\n            />\r\n          </Tooltip>\r\n        </Dropdown>\r\n      </Space>\r\n\r\n      {/* 性能指示器 */}\r\n      {process.env.NODE_ENV === 'development' && enablePerformanceMode && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: -8,\r\n            right: -8,\r\n            width: 8,\r\n            height: 8,\r\n            borderRadius: '50%',\r\n            background: '#52c41a',\r\n            border: '1px solid #f0f0f0'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.tsx",
        "start": 178,
        "end": 203,
        "startLoc": {
          "line": 178,
          "column": 11,
          "position": 1539
        },
        "endLoc": {
          "line": 203,
          "column": 20,
          "position": 1694
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 204,
        "end": 229,
        "startLoc": {
          "line": 204,
          "column": 20,
          "position": 1846
        },
        "endLoc": {
          "line": 229,
          "column": 18,
          "position": 2001
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "{\r\n  panels: PanelConfig[];\r\n  onPanelVisibilityChange: (panelId: string, visible: boolean) => void;\r\n  onLayoutReset?: () => void;\r\n  onLayoutChange?: (layout: any[]) => void;\r\n  onVersionSwitch?: (version: string) => void;\r\n  className?: string;\r\n  enablePerformanceMode?: boolean;\r\n  onPerformanceModeChange?: (enabled: boolean) => void;\r\n  onToolbarVisibilityChange?: (visible: boolean) => void;\r\n  storageKey?: string;\r\n}\r\n\r\n/**\r\n * 增强的高性能拖拽工具栏组件\r\n * 包含完整的布局控制功能和性能优化\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.tsx",
        "start": 19,
        "end": 35,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 174
        },
        "endLoc": {
          "line": 35,
          "column": 4,
          "position": 330
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 24,
        "end": 40,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 191
        },
        "endLoc": {
          "line": 40,
          "column": 4,
          "position": 347
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "// 拖拽功能 - 计算右上角位置（布局切换器下方）\r\n  const calculateInitialPosition = () => {\r\n    if (typeof window !== 'undefined') {\r\n      return { \r\n        x: Math.max(window.innerWidth - 300, 20), // 距离右边300px，最小距离左边20px\r\n        y: 130 // 布局切换器下方50px（80px + 切换器高度）\r\n      };\r\n    }\r\n    return { x: 20, y: 20 }; // 服务端渲染时的回退值\r\n  };\r\n\r\n  const {\r\n    style",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.tsx",
        "start": 54,
        "end": 66,
        "startLoc": {
          "line": 54,
          "column": 3,
          "position": 452
        },
        "endLoc": {
          "line": 66,
          "column": 6,
          "position": 570
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 54,
        "end": 66,
        "startLoc": {
          "line": 54,
          "column": 3,
          "position": 463
        },
        "endLoc": {
          "line": 66,
          "column": 9,
          "position": 581
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "});\r\n\r\n  // 面板操作菜单\r\n  const panelMenuItems = useMemo(() => \r\n    panels.map(panel => ({\r\n      key: panel.i,\r\n      label: (\r\n        <Space style={{ width: '100%', justifyContent: 'space-between' }}>\r\n          <span style={{ color: panel.visible ? '#1890ff' : '#999' }}>\r\n            {panel.title}\r\n          </span>\r\n          <Text type={panel.visible ? 'success' : 'secondary'} style={{ fontSize: '12px' }}>\r\n            {panel.visible ? '✓ 显示' : '✕ 隐藏'}\r\n          </Text>\r\n        </Space>\r\n      ),\r\n      onClick: () => onPanelVisibilityChange(panel.i, !panel.visible)\r\n    })), \r\n    [panels, onPanelVisibilityChange]\r\n  );\r\n\r\n\r\n\r\n  // 如果工具栏被隐藏，不渲染",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.tsx",
        "start": 87,
        "end": 110,
        "startLoc": {
          "line": 87,
          "column": 3,
          "position": 720
        },
        "endLoc": {
          "line": 110,
          "column": 16,
          "position": 956
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\HandleDraggableToolbar.tsx",
        "start": 75,
        "end": 97,
        "startLoc": {
          "line": 75,
          "column": 3,
          "position": 617
        },
        "endLoc": {
          "line": 97,
          "column": 26,
          "position": 889
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "settings.isCollapsed && (\r\n          <>\r\n            {/* 面板控制 */}\r\n            <Dropdown\r\n              menu={{ \r\n                items: panelMenuItems,\r\n                style: { minWidth: '160px' }\r\n              }}\r\n              trigger={['click']}\r\n              placement=\"bottomLeft\"\r\n            >\r\n              <Button size=\"small\" type=\"text\" style={{ \r\n                fontWeight: panels.some(p => !p.visible) ? 'bold' : 'normal',\r\n                color: panels.some(p => !p.visible) ? '#faad14' : undefined\r\n              }}>\r\n                面板控制 {panels.some(p => !p.visible) && `(${panels.filter(p => !p.visible).length} 隐藏)`}\r\n              </Button>\r\n            </Dropdown>\r\n\r\n\r\n          <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.tsx",
        "start": 149,
        "end": 169,
        "startLoc": {
          "line": 149,
          "column": 2,
          "position": 1292
        },
        "endLoc": {
          "line": 169,
          "column": 2,
          "position": 1498
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\PerformantDraggableToolbar.tsx",
        "start": 170,
        "end": 189,
        "startLoc": {
          "line": 170,
          "column": 2,
          "position": 1554
        },
        "endLoc": {
          "line": 189,
          "column": 2,
          "position": 1758
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "{\r\n  title: string | ReactNode;\r\n  children: ReactNode;\r\n  onClose?: () => void;\r\n  onMinimize?: () => void;\r\n  onMaximize?: () => void;\r\n  showCloseButton?: boolean;\r\n  showMinimizeButton?: boolean;\r\n  showMaximizeButton?: boolean;\r\n  headerActions?: ReactNode;\r\n  className?: string;\r\n  enableAutoScroll?: boolean;\r\n  maxContentHeight?: number;\r\n}\r\n\r\n/**\r\n * 可拖拽标题栏面板组件\r\n * 特点：\r\n * - 标题栏空白区域可以拖拽\r\n * - 标题栏按钮不会被拖拽劫持\r\n * - 内容区域完全不受拖拽影响\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\DraggableHeaderPanel.tsx",
        "start": 9,
        "end": 30,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 85
        },
        "endLoc": {
          "line": 30,
          "column": 4,
          "position": 218
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedResizablePanel.tsx",
        "start": 9,
        "end": 24,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 88
        },
        "endLoc": {
          "line": 24,
          "column": 7,
          "position": 221
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "> = ({\r\n  title,\r\n  children,\r\n  onClose,\r\n  onMinimize,\r\n  onMaximize,\r\n  showCloseButton = true,\r\n  showMinimizeButton = false,\r\n  showMaximizeButton = false,\r\n  headerActions,\r\n  className = '',\r\n  enableAutoScroll = true,\r\n  maxContentHeight,\r\n}) => {\r\n  const contentRef = useRef<HTMLDivElement>(null);\r\n  const [contentHeight, setContentHeight] = useState<number | undefined>(undefined);\r\n\r\n  // 动态计算内容高度\r\n  useEffect(() => {\r\n    if (!enableAutoScroll || !contentRef.current) return;\r\n\r\n    const updateContentHeight = () => {\r\n      const container = contentRef.current;\r\n      if (!container) return;\r\n\r\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\DraggableHeaderPanel.tsx",
        "start": 31,
        "end": 56,
        "startLoc": {
          "line": 31,
          "column": 26,
          "position": 233
        },
        "endLoc": {
          "line": 56,
          "column": 6,
          "position": 453
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedResizablePanel.tsx",
        "start": 24,
        "end": 49,
        "startLoc": {
          "line": 24,
          "column": 28,
          "position": 233
        },
        "endLoc": {
          "line": 49,
          "column": 12,
          "position": 453
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "const resizeObserver = new ResizeObserver(updateContentHeight);\r\n    const parentElement = contentRef.current.closest('.react-grid-item');\r\n    if (parentElement) {\r\n      resizeObserver.observe(parentElement);\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [enableAutoScroll, maxContentHeight]);\r\n\r\n  // 头部操作按钮 - 阻止拖拽传播",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\DraggableHeaderPanel.tsx",
        "start": 73,
        "end": 84,
        "startLoc": {
          "line": 73,
          "column": 5,
          "position": 624
        },
        "endLoc": {
          "line": 84,
          "column": 19,
          "position": 725
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedResizablePanel.tsx",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 5,
          "position": 644
        },
        "endLoc": {
          "line": 81,
          "column": 10,
          "position": 745
        }
      }
    },
    {
      "format": "tsx",
      "lines": 33,
      "fragment": "{headerActions}\r\n      {showMinimizeButton && (\r\n        <Button\r\n          type=\"text\"\r\n          icon={<MinusOutlined />}\r\n          size=\"small\"\r\n          onClick={onMinimize}\r\n          title=\"最小化\"\r\n        />\r\n      )}\r\n      {showMaximizeButton && (\r\n        <Button\r\n          type=\"text\"\r\n          icon={<FullscreenOutlined />}\r\n          size=\"small\"\r\n          onClick={onMaximize}\r\n          title=\"最大化\"\r\n        />\r\n      )}\r\n      {showCloseButton && (\r\n        <Button\r\n          type=\"text\"\r\n          icon={<CloseOutlined />}\r\n          size=\"small\"\r\n          onClick={onClose}\r\n          title=\"关闭面板\"\r\n          danger\r\n        />\r\n      )}\r\n    </Space>\r\n  );\r\n\r\n  // 可拖拽的标题栏区域",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\DraggableHeaderPanel.tsx",
        "start": 92,
        "end": 124,
        "startLoc": {
          "line": 92,
          "column": 7,
          "position": 800
        },
        "endLoc": {
          "line": 124,
          "column": 13,
          "position": 983
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedResizablePanel.tsx",
        "start": 84,
        "end": 116,
        "startLoc": {
          "line": 84,
          "column": 7,
          "position": 771
        },
        "endLoc": {
          "line": 116,
          "column": 8,
          "position": 954
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ",\r\n      render: (_, record: SessionTableColumn) => {\r\n        const override = selectedEventBySession?.[record.id] || null;\r\n        const imported = override?.imported_count ?? record.imported_count ?? 0;\r\n        const failed = override?.failed_count ?? record.failed_count ?? 0;\r\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\table-columns\\SessionsTableColumns.tsx",
        "start": 195,
        "end": 200,
        "startLoc": {
          "line": 195,
          "column": 3,
          "position": 1799
        },
        "endLoc": {
          "line": 200,
          "column": 6,
          "position": 1896
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\table-columns\\SessionsTableColumns.tsx",
        "start": 178,
        "end": 183,
        "startLoc": {
          "line": 178,
          "column": 4,
          "position": 1617
        },
        "endLoc": {
          "line": 183,
          "column": 7,
          "position": 1714
        }
      }
    },
    {
      "format": "javascript",
      "lines": 9,
      "fragment": "={mergeClasses(baseClasses, cardPadding)}\r\n      onClick={onClick}\r\n      role={onClick ? \"button\" : undefined}\r\n      tabIndex={onClick ? 0 : undefined}\r\n      onKeyDown={onClick ? (e) => e.key === 'Enter' && onClick() : undefined}\r\n    >\r\n      {isRecommended && (\r\n        <div className={mergeClasses(\r\n          ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyScoreCard.tsx",
        "start": 169,
        "end": 177,
        "startLoc": {
          "line": 169,
          "column": 10,
          "position": 1539
        },
        "endLoc": {
          "line": 177,
          "column": 11,
          "position": 1628
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyScoreCard.tsx",
        "start": 133,
        "end": 140,
        "startLoc": {
          "line": 133,
          "column": 10,
          "position": 1257
        },
        "endLoc": {
          "line": 140,
          "column": 9,
          "position": 1337
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": ")}>\r\n              {formatScore(value)}%\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderDetailedMode = () => (\r\n    <div \r\n      className={mergeClasses(baseClasses, cardPadding)}\r\n      onClick={onClick}\r\n      role={onClick ? \"button\" : undefined}\r\n      tabIndex={onClick ? 0 : undefined}\r\n      onKeyDown={onClick ? (e) => e.key === 'Enter' && onClick() : undefined}\r\n    >\r\n      {isRecommended && (\r\n        <div className={mergeClasses(\r\n          \"absolute -top-1 -right-1 bg-blue-500 text-white px-2 py-1 rounded-full flex items-center gap-1\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyScoreCard.tsx",
        "start": 236,
        "end": 255,
        "startLoc": {
          "line": 236,
          "column": 6,
          "position": 2118
        },
        "endLoc": {
          "line": 255,
          "column": 97,
          "position": 2280
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyScoreCard.tsx",
        "start": 156,
        "end": 177,
        "startLoc": {
          "line": 156,
          "column": 11,
          "position": 1441
        },
        "endLoc": {
          "line": 177,
          "column": 77,
          "position": 1629
        }
      }
    },
    {
      "format": "javascript",
      "lines": 37,
      "fragment": ",\r\n                  useResponsiveValue({\r\n                    xs: \"text-sm\",\r\n                    sm: \"text-sm\",\r\n                    md: \"text-base\"\r\n                  })\r\n                )}>\r\n                  ⚠️ 注意\r\n                </h5>\r\n                <ul className={mergeClasses(\r\n                  \"text-neutral-600 dark:text-neutral-400 space-y-1\",\r\n                  useResponsiveValue({\r\n                    xs: \"space-y-0.5\",\r\n                    sm: \"space-y-1\",\r\n                    md: \"space-y-1\"\r\n                  })\r\n                )}>\r\n                  {strategyDescMap[topRecommendation.strategy].disadvantages.map((dis, idx) => (\r\n                    <li key={idx} className={useResponsiveValue({\r\n                      xs: \"text-xs\",\r\n                      sm: \"text-xs\",\r\n                      md: \"text-sm\"\r\n                    })}>\r\n                      • {dis}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* 所有策略列表 - 响应式网格 */}\r\n      <div>\r\n        <h4 className={mergeClasses(\r\n          ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyRecommendationPanel.tsx",
        "start": 530,
        "end": 566,
        "startLoc": {
          "line": 530,
          "column": 56,
          "position": 3873
        },
        "endLoc": {
          "line": 566,
          "column": 11,
          "position": 4093
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyRecommendationPanel.tsx",
        "start": 500,
        "end": 530,
        "startLoc": {
          "line": 500,
          "column": 54,
          "position": 3681
        },
        "endLoc": {
          "line": 530,
          "column": 19,
          "position": 3871
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "}>\r\n          {sortedRecommendations.map((rec, index) => {\r\n            const strategyKey = rec.strategy as MatchStrategy;\r\n            return (\r\n              <StrategyScoreCard\r\n                key={rec.strategy}\r\n                strategyName={strategyNameMap[rec.strategy] || rec.strategy}\r\n                score={rec.score}\r\n                isRecommended={index === 0}\r\n                size=\"normal\"\r\n                onClick={() => onStrategySelect?.(strategyKey)}\r\n                className={mergeClasses(\r\n                  currentStrategy ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyRecommendationPanel.tsx",
        "start": 575,
        "end": 587,
        "startLoc": {
          "line": 575,
          "column": 17,
          "position": 4149
        },
        "endLoc": {
          "line": 587,
          "column": 35,
          "position": 4265
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\StrategyRecommendationPanel.tsx",
        "start": 305,
        "end": 317,
        "startLoc": {
          "line": 305,
          "column": 2,
          "position": 2287
        },
        "endLoc": {
          "line": 317,
          "column": 33,
          "position": 2419
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "strategy?: CompleteStepCriteria['strategy'];\r\n  fields?: string[];\r\n  values?: Record<string, string>;\r\n  includes?: Record<string, string[]>;\r\n  excludes?: Record<string, string[]>;\r\n  matchMode?: Record<string, 'equals' | 'contains' | 'regex'>;\r\n  regexIncludes?: Record<string, string[]>;\r\n  regexExcludes?: Record<string, string[]>;\r\n}>",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\SetAsStepElementButton.tsx",
        "start": 257,
        "end": 265,
        "startLoc": {
          "line": 257,
          "column": 3,
          "position": 2300
        },
        "endLoc": {
          "line": 265,
          "column": 2,
          "position": 2429
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\SetAsStepElementButton.tsx",
        "start": 52,
        "end": 60,
        "startLoc": {
          "line": 52,
          "column": 5,
          "position": 274
        },
        "endLoc": {
          "line": 60,
          "column": 2,
          "position": 404
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ", onChange }) => {\r\n  const [draft, setDraft] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (open) {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\NegativeConditionsEditor.tsx",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 9,
          "position": 120
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 211
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\PositiveConditionsEditor.tsx",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 9,
          "position": 120
        },
        "endLoc": {
          "line": 20,
          "column": 11,
          "position": 211
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "onChange={(e) => setDraft(e.target.value)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') add();\r\n              if (e.key === 'Escape') { setDraft(''); setOpen(false); }\r\n            }}\r\n          />\r\n          <button type=\"button\" className={styles.btn} onClick={add}>添加</button>\r\n          <button type=\"button\" className={`${styles.btn}`} onClick={() => { setDraft(''); setOpen(false); }}>取消</button>\r\n        </div>\r\n      )}\r\n      <div className=\"flex flex-wrap gap-1\">\r\n        {excludes",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\NegativeConditionsEditor.tsx",
        "start": 59,
        "end": 70,
        "startLoc": {
          "line": 59,
          "column": 13,
          "position": 565
        },
        "endLoc": {
          "line": 70,
          "column": 9,
          "position": 765
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\PositiveConditionsEditor.tsx",
        "start": 46,
        "end": 57,
        "startLoc": {
          "line": 46,
          "column": 13,
          "position": 534
        },
        "endLoc": {
          "line": 57,
          "column": 9,
          "position": 730
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": Record<string, string[]>,\r\n  selectedFields: string[]\r\n): Record<string, string[]> {\r\n  const allowed = new Set(selectedFields);\r\n  const out: Record<string, string[]> = {};\r\n  for (const key of Object.keys(includes",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\helpers.ts",
        "start": 255,
        "end": 260,
        "startLoc": {
          "line": 255,
          "column": 9,
          "position": 2046
        },
        "endLoc": {
          "line": 260,
          "column": 9,
          "position": 2138
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\helpers.ts",
        "start": 238,
        "end": 243,
        "startLoc": {
          "line": 238,
          "column": 9,
          "position": 1796
        },
        "endLoc": {
          "line": 243,
          "column": 9,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "[key] || [])\r\n      .map(s => String(s).trim())\r\n      .filter(s => s.length > 0);\r\n    const uniq = Array.from(new Set(items));\r\n    if (uniq.length > 0) out[key] = uniq;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * 将 UI 策略映射为后端兼容的策略（后端暂不识别 'custom'）。\r\n * - 对于 'custom'：依据是否存在“有效位置约束”映射为 absolute 或 standard\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\helpers.ts",
        "start": 262,
        "end": 274,
        "startLoc": {
          "line": 262,
          "column": 9,
          "position": 2176
        },
        "endLoc": {
          "line": 274,
          "column": 4,
          "position": 2286
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\node-detail\\helpers.ts",
        "start": 245,
        "end": 254,
        "startLoc": {
          "line": 245,
          "column": 9,
          "position": 1926
        },
        "endLoc": {
          "line": 254,
          "column": 7,
          "position": 2036
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ">\r\n            \r\n            {onOpenSelector && (\r\n              <Form.Item>\r\n                <Tooltip title=\"打开页面分析器选择元素\">\r\n                  <Button \r\n                    type=\"dashed\" \r\n                    icon={<EyeOutlined />}\r\n                    onClick={onOpenSelector}\r\n                    disabled={loading}\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    使用页面分析器选择\r\n                  </Button>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {/* 文本点击配置 */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\TapParameters.tsx",
        "start": 221,
        "end": 241,
        "startLoc": {
          "line": 221,
          "column": 10,
          "position": 1699
        },
        "endLoc": {
          "line": 241,
          "column": 13,
          "position": 1819
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\TapParameters.tsx",
        "start": 187,
        "end": 207,
        "startLoc": {
          "line": 187,
          "column": 4,
          "position": 1472
        },
        "endLoc": {
          "line": 207,
          "column": 13,
          "position": 1592
        }
      }
    },
    {
      "format": "javascript",
      "lines": 57,
      "fragment": "}\r\n            placeholder=\"选择步骤类型\"\r\n            disabled={loading}\r\n            size=\"middle\"\r\n          >\r\n            {STEP_TYPE_OPTIONS.map(option => (\r\n              <Option key={option.value} value={option.value}>\r\n                <div>\r\n                  <Text strong style={{ fontSize: token.fontSize }}>\r\n                    {option.label}\r\n                  </Text>\r\n                  <br />\r\n                  <Text \r\n                    type=\"secondary\" \r\n                    style={{ fontSize: token.fontSizeSM }}\r\n                  >\r\n                    {option.description}\r\n                  </Text>\r\n                </div>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        {/* 当前选择的类型信息 */}\r\n        {currentTypeOption && (\r\n          <div \r\n            style={{ \r\n              padding: token.paddingXS,\r\n              backgroundColor: token.colorBgLayout,\r\n              borderRadius: token.borderRadius,\r\n              border: `1px solid ${token.colorBorder}`,\r\n            }}\r\n          >\r\n            <Space>\r\n              <InfoCircleOutlined style={{ color: token.colorInfo }} />\r\n              <div>\r\n                <Text strong style={{ fontSize: token.fontSizeSM }}>\r\n                  {currentTypeOption.label}\r\n                </Text>\r\n                <br />\r\n                <Text \r\n                  type=\"secondary\" \r\n                  style={{ fontSize: token.fontSizeSM }}\r\n                >\r\n                  {currentTypeOption.description}\r\n                </Text>\r\n              </div>\r\n            </Space>\r\n          </div>\r\n        )}\r\n\r\n        {/* 步骤名称 */}\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"步骤名称\"\r\n          rules={[",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\BasicConfig.tsx",
        "start": 81,
        "end": 137,
        "startLoc": {
          "line": 81,
          "column": 13,
          "position": 715
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 1132
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\TapParameters.tsx",
        "start": 91,
        "end": 145,
        "startLoc": {
          "line": 91,
          "column": 19,
          "position": 696
        },
        "endLoc": {
          "line": 145,
          "column": 2,
          "position": 1117
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ".map(option => (\r\n              <Option key={option.value} value={option.value}>\r\n                <div>\r\n                  <Text strong style={{ fontSize: token.fontSize }}>\r\n                    {option.label}\r\n                  </Text>\r\n                  <br />\r\n                  <Text \r\n                    type=\"secondary\" \r\n                    style={{ fontSize: token.fontSizeSM }}\r\n                  >\r\n                    {option.description}\r\n                  </Text>\r\n                </div>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        {/* 当前选择的类型信息 */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\BasicConfig.tsx",
        "start": 86,
        "end": 105,
        "startLoc": {
          "line": 86,
          "column": 18,
          "position": 741
        },
        "endLoc": {
          "line": 105,
          "column": 16,
          "position": 893
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\TapParameters.tsx",
        "start": 95,
        "end": 114,
        "startLoc": {
          "line": 95,
          "column": 19,
          "position": 716
        },
        "endLoc": {
          "line": 114,
          "column": 13,
          "position": 868
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "&& (\r\n          <div \r\n            style={{ \r\n              padding: token.paddingXS,\r\n              backgroundColor: token.colorBgLayout,\r\n              borderRadius: token.borderRadius,\r\n              border: `1px solid ${token.colorBorder}`,\r\n            }}\r\n          >\r\n            <Space>\r\n              <InfoCircleOutlined style={{ color: token.colorInfo }} />\r\n              <div>\r\n                <Text strong style={{ fontSize: token.fontSizeSM }}>\r\n                  {currentTypeOption",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\BasicConfig.tsx",
        "start": 106,
        "end": 119,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 901
        },
        "endLoc": {
          "line": 119,
          "column": 18,
          "position": 1024
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\step-editor\\components\\TapParameters.tsx",
        "start": 115,
        "end": 128,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 876
        },
        "endLoc": {
          "line": 128,
          "column": 14,
          "position": 999
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "> = [\r\n    {\r\n      title: '类型',\r\n      dataIndex: 'type',\r\n      width: 80,\r\n      render: (type) => (\r\n        <Tag color={type === 'account' ? 'blue' : 'green'}>\r\n          {type === 'account' ? (\r\n            <><UserOutlined /> 账号</>\r\n          ) : (\r\n            <><PlayCircleOutlined /> 视频</>\r\n          )}\r\n        </Tag>\r\n      )\r\n    },\r\n    {\r\n      title: '名称/标题',\r\n      dataIndex: 'name',\r\n      ellipsis: true,\r\n      render: (name, record) => (\r\n        <div>\r\n          <div className=\"font-medium\">{name}</div>\r\n          <Button",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\account-monitoring\\components\\AccountMonitoringConfigPanel.tsx",
        "start": 234,
        "end": 256,
        "startLoc": {
          "line": 234,
          "column": 12,
          "position": 1887
        },
        "endLoc": {
          "line": 256,
          "column": 7,
          "position": 2098
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\account-monitoring\\components\\AccountMonitoringConfigPanel.tsx",
        "start": 146,
        "end": 168,
        "startLoc": {
          "line": 146,
          "column": 19,
          "position": 1081
        },
        "endLoc": {
          "line": 168,
          "column": 5,
          "position": 1292
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": "}>\r\n              <Form.Item\r\n                name=\"assignedDevices\"\r\n                label=\"执行设备\"\r\n                rules={[{ required: true, message: '请至少选择一个执行设备' }]}\r\n              >\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  placeholder=\"选择执行设备\"\r\n                  disabled={onlineDevices.length === 0}\r\n                >\r\n                  {onlineDevices.map(device => (\r\n                    <Option key={device.id} value={device.id}>\r\n                      {device.name || device.id} ({device.model})\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* 操作按钮 */}\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <Button onClick={() => form.resetFields()}>\r\n              重置\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              loading={loading}\r\n              disabled={onlineDevices",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\account-monitoring\\components\\AccountMonitoringConfig.tsx",
        "start": 366,
        "end": 396,
        "startLoc": {
          "line": 366,
          "column": 3,
          "position": 2803
        },
        "endLoc": {
          "line": 396,
          "column": 14,
          "position": 3043
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\industry-monitoring\\components\\MonitoringConfigPanel.tsx",
        "start": 406,
        "end": 442,
        "startLoc": {
          "line": 406,
          "column": 15,
          "position": 3426
        },
        "endLoc": {
          "line": 442,
          "column": 9,
          "position": 3689
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ">\r\n                  {onlineDevices.map(device => (\r\n                    <Option key={device.id} value={device.id}>\r\n                      {device.name || device.id} ({device.model})\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* 操作按钮 */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\account-monitoring\\components\\AccountMonitoringConfig.tsx",
        "start": 376,
        "end": 387,
        "startLoc": {
          "line": 376,
          "column": 17,
          "position": 2872
        },
        "endLoc": {
          "line": 387,
          "column": 11,
          "position": 2972
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\industry-monitoring\\components\\MonitoringConfigPanel.tsx",
        "start": 413,
        "end": 424,
        "startLoc": {
          "line": 413,
          "column": 15,
          "position": 3477
        },
        "endLoc": {
          "line": 424,
          "column": 11,
          "position": 3577
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(history: StabilityRecord[]): MatchStrategy {\r\n    const strategyScores: { [key: string]: number[] } = {};\r\n    \r\n    history.forEach(record => {\r\n      if (!strategyScores[record.strategy]) {\r\n        strategyScores[record.strategy] = [];\r\n      }\r\n      strategyScores[record.strategy].push(record.assessment.score);\r\n    });\r\n\r\n    let worstStrategy",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\scoring\\stability-assessment\\core\\StabilityAssessmentEngine.ts",
        "start": 318,
        "end": 328,
        "startLoc": {
          "line": 318,
          "column": 24,
          "position": 2658
        },
        "endLoc": {
          "line": 328,
          "column": 14,
          "position": 2781
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\scoring\\stability-assessment\\core\\StabilityAssessmentEngine.ts",
        "start": 294,
        "end": 304,
        "startLoc": {
          "line": 294,
          "column": 23,
          "position": 2384
        },
        "endLoc": {
          "line": 304,
          "column": 13,
          "position": 2507
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const childElements = context.document.allNodes.filter(el => {\r\n      const elBounds = BoundsCalculator.getBoundsInfo(typeof el.bounds === 'string' ? el.bounds : JSON.stringify(el.bounds));\r\n      return elBounds && this.isElementContainedIn(elBounds, regionBounds);\r\n    });\r\n\r\n    const textElements",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 275,
        "end": 280,
        "startLoc": {
          "line": 275,
          "column": 5,
          "position": 2751
        },
        "endLoc": {
          "line": 280,
          "column": 13,
          "position": 2843
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 232,
        "end": 237,
        "startLoc": {
          "line": 232,
          "column": 5,
          "position": 2291
        },
        "endLoc": {
          "line": 237,
          "column": 8,
          "position": 2383
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "/**\r\n   * 检查是否为容器\r\n   */\r\n  private isContainer(element: any): boolean {\r\n    const containerTags = [\r\n      'LinearLayout', 'RelativeLayout', 'FrameLayout', 'ConstraintLayout',\r\n      'RecyclerView', 'ListView', 'ScrollView', 'ViewGroup'\r\n    ];\r\n    return containerTags.some(tag => element.tag.includes(tag));\r\n  }\r\n\r\n  /**\r\n   * 检查元素是否包含在区域内\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 296,
        "end": 309,
        "startLoc": {
          "line": 296,
          "column": 3,
          "position": 2991
        },
        "endLoc": {
          "line": 309,
          "column": 6,
          "position": 3083
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\strategies\\RegionContainerAnalyzer.ts",
        "start": 192,
        "end": 205,
        "startLoc": {
          "line": 192,
          "column": 3,
          "position": 1732
        },
        "endLoc": {
          "line": 205,
          "column": 6,
          "position": 1824
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'neighbor-relative',\r\n      sourceStep: 'neighbor-relative',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: score * this.getUniquenessMultiplier(criteria.type),\r\n          stability: stability,\r\n          performance: score * 0.7",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\MultiNeighborStrategy.ts",
        "start": 365,
        "end": 373,
        "startLoc": {
          "line": 365,
          "column": 17,
          "position": 3464
        },
        "endLoc": {
          "line": 373,
          "column": 4,
          "position": 3569
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 210,
        "end": 218,
        "startLoc": {
          "line": 210,
          "column": 10,
          "position": 1894
        },
        "endLoc": {
          "line": 218,
          "column": 5,
          "position": 1999
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "reliability: score * this.getReliabilityMultiplier(criteria.type)\r\n        },\r\n        bonuses: this.getBonuses(criteria),\r\n        penalties: this.getPenalties(criteria)\r\n      },\r\n      criteria: {\r\n        fields: this.getFields(criteria),\r\n        values: this.getValues(criteria)\r\n      },\r\n      validation: {\r\n        passed: false,\r\n        matchCount: 0,\r\n        uniqueness: { \r\n          isUnique: criteria.type === 'four-direction-constraint'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\MultiNeighborStrategy.ts",
        "start": 374,
        "end": 387,
        "startLoc": {
          "line": 374,
          "column": 11,
          "position": 3576
        },
        "endLoc": {
          "line": 387,
          "column": 28,
          "position": 3705
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 219,
        "end": 232,
        "startLoc": {
          "line": 219,
          "column": 11,
          "position": 2004
        },
        "endLoc": {
          "line": 232,
          "column": 22,
          "position": 2133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取奖励分数\r\n   */\r\n  private getBonuses(criteria: any): Array<{ reason: string; points: number }> {\r\n    const bonuses: Array<{ reason: string; points: number }> = [];\r\n\r\n    if (criteria.type === 'four-direction-constraint'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\MultiNeighborStrategy.ts",
        "start": 517,
        "end": 527,
        "startLoc": {
          "line": 517,
          "column": 4,
          "position": 4679
        },
        "endLoc": {
          "line": 527,
          "column": 28,
          "position": 4772
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 355,
        "end": 365,
        "startLoc": {
          "line": 355,
          "column": 5,
          "position": 2999
        },
        "endLoc": {
          "line": 365,
          "column": 22,
          "position": 3092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "});\r\n    }\r\n\r\n    return bonuses;\r\n  }\r\n\r\n  /**\r\n   * 获取惩罚分数\r\n   */\r\n  private getPenalties(criteria: any): Array<{ reason: string; points: number }> {\r\n    const penalties: Array<{ reason: string; points: number }> = [];\r\n\r\n    if (criteria.type === 'hierarchy-combination'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\MultiNeighborStrategy.ts",
        "start": 536,
        "end": 548,
        "startLoc": {
          "line": 536,
          "column": 2,
          "position": 4909
        },
        "endLoc": {
          "line": 548,
          "column": 24,
          "position": 5013
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 370,
        "end": 382,
        "startLoc": {
          "line": 370,
          "column": 2,
          "position": 3171
        },
        "endLoc": {
          "line": 382,
          "column": 16,
          "position": 3275
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "async analyze(element: any, context: ElementAnalysisContext): Promise<StrategyCandidate[]> {\r\n    const candidates: StrategyCandidate[] = [];\r\n    const analysis = NeighborFinder.analyzeNeighbors(element, context);\r\n    const bounds = BoundsCalculator.parseBounds(element.bounds);\r\n    \r\n    let baseScore = 60",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DistanceConstraintStrategy.ts",
        "start": 29,
        "end": 34,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 173
        },
        "endLoc": {
          "line": 34,
          "column": 3,
          "position": 263
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\MultiNeighborStrategy.ts",
        "start": 29,
        "end": 34,
        "startLoc": {
          "line": 29,
          "column": 3,
          "position": 175
        },
        "endLoc": {
          "line": 34,
          "column": 3,
          "position": 265
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'neighbor-relative',\r\n      sourceStep: 'neighbor-relative',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: score * this.getUniquenessMultiplier(criteria.type),\r\n          stability: stability,\r\n          performance: score * 0.8",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DistanceConstraintStrategy.ts",
        "start": 305,
        "end": 313,
        "startLoc": {
          "line": 305,
          "column": 11,
          "position": 2923
        },
        "endLoc": {
          "line": 313,
          "column": 4,
          "position": 3028
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 210,
        "end": 218,
        "startLoc": {
          "line": 210,
          "column": 10,
          "position": 1894
        },
        "endLoc": {
          "line": 218,
          "column": 5,
          "position": 1999
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "reliability: score * this.getReliabilityMultiplier(criteria.type)\r\n        },\r\n        bonuses: this.getBonuses(criteria),\r\n        penalties: this.getPenalties(criteria)\r\n      },\r\n      criteria: {\r\n        fields: this.getFields(criteria),\r\n        values: this.getValues(criteria)\r\n      },\r\n      validation: {\r\n        passed: false,\r\n        matchCount: 0,\r\n        uniqueness: { \r\n          isUnique: criteria.type === 'multi-point-distance'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DistanceConstraintStrategy.ts",
        "start": 314,
        "end": 327,
        "startLoc": {
          "line": 314,
          "column": 11,
          "position": 3035
        },
        "endLoc": {
          "line": 327,
          "column": 23,
          "position": 3164
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 219,
        "end": 232,
        "startLoc": {
          "line": 219,
          "column": 11,
          "position": 2004
        },
        "endLoc": {
          "line": 232,
          "column": 22,
          "position": 2133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取奖励分数\r\n   */\r\n  private getBonuses(criteria: any): Array<{ reason: string; points: number }> {\r\n    const bonuses: Array<{ reason: string; points: number }> = [];\r\n\r\n    if (criteria.type === 'multi-point-distance'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DistanceConstraintStrategy.ts",
        "start": 469,
        "end": 479,
        "startLoc": {
          "line": 469,
          "column": 4,
          "position": 4237
        },
        "endLoc": {
          "line": 479,
          "column": 23,
          "position": 4330
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 355,
        "end": 365,
        "startLoc": {
          "line": 355,
          "column": 5,
          "position": 2999
        },
        "endLoc": {
          "line": 365,
          "column": 22,
          "position": 3092
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "});\r\n    }\r\n\r\n    return bonuses;\r\n  }\r\n\r\n  /**\r\n   * 获取惩罚分数\r\n   */\r\n  private getPenalties(criteria: any): Array<{ reason: string; points: number }> {\r\n    const penalties: Array<{ reason: string; points: number }> = [];\r\n\r\n    if (criteria.type === 'center-distance'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DistanceConstraintStrategy.ts",
        "start": 488,
        "end": 500,
        "startLoc": {
          "line": 488,
          "column": 2,
          "position": 4464
        },
        "endLoc": {
          "line": 500,
          "column": 18,
          "position": 4568
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 370,
        "end": 382,
        "startLoc": {
          "line": 370,
          "column": 2,
          "position": 3171
        },
        "endLoc": {
          "line": 382,
          "column": 16,
          "position": 3275
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'neighbor-relative',\r\n      sourceStep: 'neighbor-relative',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: score * 0.8",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DirectNeighborStrategy.ts",
        "start": 144,
        "end": 150,
        "startLoc": {
          "line": 144,
          "column": 18,
          "position": 1191
        },
        "endLoc": {
          "line": 150,
          "column": 4,
          "position": 1269
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 210,
        "end": 216,
        "startLoc": {
          "line": 210,
          "column": 10,
          "position": 1894
        },
        "endLoc": {
          "line": 216,
          "column": 5,
          "position": 1972
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'neighbor-relative',\r\n      sourceStep: 'neighbor-relative',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: score * this.getUniquenessMultiplier(criteria.type),\r\n          stability: stability,\r\n          performance: score * 0.8,\r\n          reliability",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DirectionalStrategy.ts",
        "start": 163,
        "end": 172,
        "startLoc": {
          "line": 163,
          "column": 14,
          "position": 1440
        },
        "endLoc": {
          "line": 172,
          "column": 12,
          "position": 1550
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 210,
        "end": 313,
        "startLoc": {
          "line": 210,
          "column": 10,
          "position": 1894
        },
        "endLoc": {
          "line": 313,
          "column": 15,
          "position": 3031
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ":\r\n        return 0.5;\r\n      default:\r\n        return 0.7;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取奖励分数\r\n   */\r\n  private getBonuses(criteria: any): Array<{ reason: string; points: number }> {\r\n    const bonuses: Array<{ reason: string; points: number }> = [];\r\n\r\n    if (criteria.direction",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DirectionalStrategy.ts",
        "start": 258,
        "end": 271,
        "startLoc": {
          "line": 258,
          "column": 18,
          "position": 2163
        },
        "endLoc": {
          "line": 271,
          "column": 10,
          "position": 2271
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DistanceConstraintStrategy.ts",
        "start": 466,
        "end": 479,
        "startLoc": {
          "line": 466,
          "column": 18,
          "position": 4218
        },
        "endLoc": {
          "line": 479,
          "column": 5,
          "position": 4326
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "});\r\n    }\r\n\r\n    return bonuses;\r\n  }\r\n\r\n  /**\r\n   * 获取惩罚分数\r\n   */\r\n  private getPenalties(criteria: any): Array<{ reason: string; points: number }> {\r\n    const penalties: Array<{ reason: string; points: number }> = [];\r\n\r\n    if (criteria.type === 'directional-nth'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\DirectionalStrategy.ts",
        "start": 276,
        "end": 288,
        "startLoc": {
          "line": 276,
          "column": 2,
          "position": 2354
        },
        "endLoc": {
          "line": 288,
          "column": 18,
          "position": 2458
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\strategies\\SiblingStrategy.ts",
        "start": 370,
        "end": 382,
        "startLoc": {
          "line": 370,
          "column": 2,
          "position": 3171
        },
        "endLoc": {
          "line": 382,
          "column": 16,
          "position": 3275
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": string, direction: string, element: any): string {\r\n    const targetTag = element.tag || '*';\r\n    const directionMap: Record<string, string> = {\r\n      'right': 'following::',\r\n      'left': 'preceding::',\r\n      'below': 'following::',\r\n      'above': 'preceding::'\r\n    };\r\n\r\n    const axis = directionMap[direction] || 'following::';\r\n    const escapedDesc",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\calculators\\NeighborXPathBuilder.ts",
        "start": 49,
        "end": 59,
        "startLoc": {
          "line": 49,
          "column": 12,
          "position": 382
        },
        "endLoc": {
          "line": 59,
          "column": 12,
          "position": 500
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\calculators\\NeighborXPathBuilder.ts",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 5,
          "position": 214
        },
        "endLoc": {
          "line": 42,
          "column": 12,
          "position": 332
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": string, direction: string, element: any): string {\r\n    const targetTag = element.tag || '*';\r\n    const directionMap: Record<string, string> = {\r\n      'right': 'following::',\r\n      'left': 'preceding::',\r\n      'below': 'following::',\r\n      'above': 'preceding::'\r\n    };\r\n\r\n    const axis = directionMap[direction] || 'following::';\r\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\calculators\\NeighborXPathBuilder.ts",
        "start": 66,
        "end": 76,
        "startLoc": {
          "line": 66,
          "column": 10,
          "position": 564
        },
        "endLoc": {
          "line": 76,
          "column": 7,
          "position": 680
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\neighbor-relative\\calculators\\NeighborXPathBuilder.ts",
        "start": 32,
        "end": 42,
        "startLoc": {
          "line": 32,
          "column": 5,
          "position": 214
        },
        "endLoc": {
          "line": 42,
          "column": 6,
          "position": 330
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'index-fallback',\r\n      sourceStep: 'index-fallback',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: score * 0.7,\r\n          stability: stability",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\HierarchyPathStrategy.ts",
        "start": 206,
        "end": 213,
        "startLoc": {
          "line": 206,
          "column": 17,
          "position": 1563
        },
        "endLoc": {
          "line": 213,
          "column": 10,
          "position": 1649
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\XPathDirectStrategy.ts",
        "start": 86,
        "end": 93,
        "startLoc": {
          "line": 86,
          "column": 15,
          "position": 587
        },
        "endLoc": {
          "line": 93,
          "column": 6,
          "position": 673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'index-fallback',\r\n      sourceStep: 'index-fallback',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: score * 0.6",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\ElementIndexStrategy.ts",
        "start": 108,
        "end": 114,
        "startLoc": {
          "line": 108,
          "column": 16,
          "position": 791
        },
        "endLoc": {
          "line": 114,
          "column": 4,
          "position": 869
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\XPathDirectStrategy.ts",
        "start": 86,
        "end": 92,
        "startLoc": {
          "line": 86,
          "column": 15,
          "position": 587
        },
        "endLoc": {
          "line": 92,
          "column": 4,
          "position": 665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'index-fallback',\r\n      sourceStep: 'index-fallback',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: isDesperateStrategy",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\CombinationFallbackStrategy.ts",
        "start": 250,
        "end": 256,
        "startLoc": {
          "line": 250,
          "column": 23,
          "position": 2238
        },
        "endLoc": {
          "line": 256,
          "column": 20,
          "position": 2312
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\XPathDirectStrategy.ts",
        "start": 86,
        "end": 92,
        "startLoc": {
          "line": 86,
          "column": 15,
          "position": 587
        },
        "endLoc": {
          "line": 92,
          "column": 6,
          "position": 661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      strategy: 'index-fallback',\r\n      sourceStep: 'index-fallback',\r\n      scoring: {\r\n        total: score,\r\n        breakdown: {\r\n          uniqueness: score * 0.9",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\AbsolutePositionStrategy.ts",
        "start": 75,
        "end": 81,
        "startLoc": {
          "line": 75,
          "column": 20,
          "position": 512
        },
        "endLoc": {
          "line": 81,
          "column": 4,
          "position": 590
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\index-fallback\\strategies\\XPathDirectStrategy.ts",
        "start": 86,
        "end": 92,
        "startLoc": {
          "line": 86,
          "column": 15,
          "position": 587
        },
        "endLoc": {
          "line": 92,
          "column": 4,
          "position": 665
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "{\r\n  title: string | ReactNode;\r\n  children: ReactNode;\r\n  onClose?: () => void;\r\n  onMinimize?: () => void;\r\n  onMaximize?: () => void;\r\n  showCloseButton?: boolean;\r\n  showMinimizeButton?: boolean;\r\n  showMaximizeButton?: boolean;\r\n  headerActions?: ReactNode;\r\n  bodyStyle",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\ResizablePanel.tsx",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 79
        },
        "endLoc": {
          "line": 19,
          "column": 10,
          "position": 181
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedResizablePanel.tsx",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 88
        },
        "endLoc": {
          "line": 19,
          "column": 10,
          "position": 190
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "// 头部操作按钮\r\n  const headerControls = (\r\n    <Space size=\"small\">\r\n      {headerActions}\r\n      {showMinimizeButton && (\r\n        <Button\r\n          type=\"text\"\r\n          icon={<MinusOutlined />}\r\n          size=\"small\"\r\n          onClick={onMinimize}\r\n          title=\"最小化\"\r\n        />\r\n      )}\r\n      {showMaximizeButton && (\r\n        <Button\r\n          type=\"text\"\r\n          icon={<FullscreenOutlined />}\r\n          size=\"small\"\r\n          onClick={onMaximize}\r\n          title=\"最大化\"\r\n        />\r\n      )}\r\n      {showCloseButton && (\r\n        <Button\r\n          type=\"text\"\r\n          icon={<CloseOutlined />}\r\n          size=\"small\"\r\n          onClick={onClose}\r\n          title=\"关闭",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\ResizablePanel.tsx",
        "start": 36,
        "end": 64,
        "startLoc": {
          "line": 36,
          "column": 3,
          "position": 305
        },
        "endLoc": {
          "line": 64,
          "column": 3,
          "position": 487
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedResizablePanel.tsx",
        "start": 81,
        "end": 109,
        "startLoc": {
          "line": 81,
          "column": 3,
          "position": 745
        },
        "endLoc": {
          "line": 109,
          "column": 5,
          "position": 927
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": "}\r\n      >\r\n        <ResponsiveGridLayout\r\n          className=\"layout\"\r\n          layouts={layouts}\r\n          breakpoints={breakpoints}\r\n          cols={cols}\r\n          rowHeight={rowHeight}\r\n          margin={margin}\r\n          containerPadding={containerPadding}\r\n          onLayoutChange={handleLayoutChange}\r\n          onBreakpointChange={handleBreakpointChange}\r\n          compactType={compactType}\r\n          preventCollision={false}\r\n          isDraggable={true}\r\n          isResizable\r\n          resizeHandles={['se']}\r\n          useCSSTransforms\r\n          draggableHandle={gridLayoutSelector.draggableHandleSelector}  // Employee D适配器：语义化拖拽句柄\r\n        >\r\n          {visiblePanels.map((panel) => (\r\n            <div key={panel.i} className=\"grid-item\">\r\n              <DraggableHeaderPanel\r\n                title={panel.title}\r\n                headerActions={\r\n                  onPanelVisibilityChange && (\r\n                    <Button\r\n                      type=\"text\"\r\n                      size=\"small\"\r\n                      icon={<EyeInvisibleOutlined />}\r\n                      onClick={() => onPanelVisibilityChange(panel.i, false)}\r\n                    />\r\n                  )\r\n                }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\GridLayoutWrapper.tsx",
        "start": 221,
        "end": 254,
        "startLoc": {
          "line": 221,
          "column": 22,
          "position": 2227
        },
        "endLoc": {
          "line": 254,
          "column": 2,
          "position": 2467
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\GridLayoutWrapperEnhanced.tsx",
        "start": 222,
        "end": 238,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 2178
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 2287
        }
      }
    },
    {
      "format": "tsx",
      "lines": 74,
      "fragment": ";\r\nimport 'react-grid-layout/css/styles.css';\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\n\r\nexport interface GridItem {\r\n  i: string; // 唯一标识\r\n  x: number;\r\n  y: number;\r\n  w: number; // 宽度（网格单位）\r\n  h: number; // 高度（网格单位）\r\n  minW?: number;\r\n  maxW?: number;\r\n  minH?: number;\r\n  maxH?: number;\r\n  isDraggable?: boolean;\r\n  isResizable?: boolean;\r\n  static?: boolean; // 是否固定不可移动\r\n}\r\n\r\nexport interface PanelConfig extends GridItem {\r\n  title: string;\r\n  visible: boolean;\r\n  content: React.ReactNode;\r\n  icon?: React.ReactNode;\r\n}\r\n\r\nexport interface GridLayoutWrapperProps {\r\n  panels: PanelConfig[];\r\n  onLayoutChange?: (layout: Layout[]) => void;\r\n  onPanelVisibilityChange?: (panelId: string, visible: boolean) => void;\r\n  className?: string;\r\n  margin?: [number, number];\r\n  containerPadding?: [number, number];\r\n  rowHeight?: number;\r\n  cols?: { lg: number; md: number; sm: number; xs: number; xxs: number };\r\n  breakpoints?: { lg: number; md: number; sm: number; xs: number; xxs: number };\r\n  \r\n  // 版本管理\r\n  enableVersionManagement?: boolean;\r\n  storageKey?: string;\r\n  \r\n  // 性能优化\r\n  enablePerformanceMode?: boolean;\r\n  enableVirtualization?: boolean;\r\n  \r\n  // 工具栏\r\n  showToolbar?: boolean;\r\n  toolbarPosition?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left';\r\n}\r\n\r\nexport const GridLayoutWrapper: React.FC<GridLayoutWrapperProps> = ({\r\n  panels,\r\n  onLayoutChange,\r\n  onPanelVisibilityChange,\r\n  className = '',\r\n  margin = [16, 16],\r\n  containerPadding = [16, 16],\r\n  rowHeight = 60,\r\n  cols = { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\r\n  breakpoints = { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\r\n  \r\n  // 新增功能配置\r\n  enableVersionManagement = true,\r\n  storageKey = 'grid-layout-wrapper',\r\n  enablePerformanceMode = true,\r\n  enableVirtualization = false,\r\n  showToolbar = true,\r\n  toolbarPosition = 'top-right'\r\n}) => {\r\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('lg');\r\n  const [compactType, setCompactType] = useState<'vertical' | 'horizontal' | null>('vertical');\r\n  \r\n  // Employee D适配器：网格布局选择器适配器",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\GridLayoutWrapper.tsx",
        "start": 18,
        "end": 91,
        "startLoc": {
          "line": 18,
          "column": 75,
          "position": 228
        },
        "endLoc": {
          "line": 91,
          "column": 28,
          "position": 992
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\GridLayoutWrapperEnhanced.tsx",
        "start": 15,
        "end": 88,
        "startLoc": {
          "line": 15,
          "column": 31,
          "position": 192
        },
        "endLoc": {
          "line": 88,
          "column": 8,
          "position": 956
        }
      }
    },
    {
      "format": "tsx",
      "lines": 81,
      "fragment": ");\r\n\r\n  // 生成布局配置\r\n  const layouts = useMemo(() => {\r\n    const visiblePanels = panels.filter(panel => panel.visible);\r\n    const layout = visiblePanels.map(panel => ({\r\n      i: panel.i,\r\n      x: panel.x,\r\n      y: panel.y,\r\n      w: panel.w,\r\n      h: panel.h,\r\n      minW: panel.minW,\r\n      maxW: panel.maxW,\r\n      minH: panel.minH,\r\n      maxH: panel.maxH,\r\n      isDraggable: panel.isDraggable !== false,\r\n      isResizable: panel.isResizable !== false,\r\n      static: panel.static || false,\r\n    }));\r\n\r\n    return {\r\n      lg: layout,\r\n      md: layout.map(item => ({ ...item, w: Math.min(item.w, cols.md) })),\r\n      sm: layout.map(item => ({ ...item, w: Math.min(item.w, cols.sm) })),\r\n      xs: layout.map(item => ({ ...item, w: Math.min(item.w, cols.xs) })),\r\n      xxs: layout.map(item => ({ ...item, w: cols.xxs })),\r\n    };\r\n  }, [panels, cols]);\r\n\r\n  // 处理布局变化\r\n  const handleLayoutChange = useCallback((layout: Layout[], layouts: any) => {\r\n    const startTime = performance.startPerformanceTimer();\r\n    \r\n    // 缓存布局\r\n    if (performance.performanceMode) {\r\n      performance.cacheLayout(`${currentBreakpoint}_${Date.now()}`, layout);\r\n    }\r\n    \r\n    // 监控性能\r\n    performance.endPerformanceTimer(\r\n      startTime, \r\n      panels.length, \r\n      panels.filter(p => p.visible).length\r\n    );\r\n    \r\n    onLayoutChange?.(layout);\r\n  }, [onLayoutChange, performance, currentBreakpoint, panels]);\r\n\r\n  // 处理断点变化\r\n  const handleBreakpointChange = useCallback((breakpoint: string) => {\r\n    setCurrentBreakpoint(breakpoint);\r\n  }, []);\r\n  \r\n  // 版本切换处理\r\n  const handleVersionSwitch = useCallback((version: any) => {\r\n    if (version && version.panels) {\r\n      // 这里需要通知父组件更新 panels\r\n      // 由于 GridLayoutWrapper 是受控组件，我们只能通过 callback 通知\r\n      onLayoutChange?.(version.panels);\r\n    }\r\n  }, [onLayoutChange]);\r\n  \r\n  // 重置布局\r\n  const handleLayoutReset = useCallback(() => {\r\n    const defaultVersion = versionManager.defaultVersion;\r\n    if (defaultVersion) {\r\n      handleVersionSwitch(defaultVersion);\r\n    }\r\n  }, [versionManager.defaultVersion, handleVersionSwitch]);\r\n\r\n  // 获取可见面板\r\n  const visiblePanels = useMemo(() => {\r\n    return panels.filter(panel => panel.visible);\r\n  }, [panels]);\r\n\r\n  // 布局控制工具栏\r\n  const renderToolbar = () => {\r\n    if (!showToolbar) return null;\r\n    \r\n    return (\r\n      <EnhancedDraggableToolbar",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\GridLayoutWrapper.tsx",
        "start": 123,
        "end": 203,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1230
        },
        "endLoc": {
          "line": 203,
          "column": 25,
          "position": 2100
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\GridLayoutWrapperEnhanced.tsx",
        "start": 108,
        "end": 188,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 1096
        },
        "endLoc": {
          "line": 188,
          "column": 21,
          "position": 1966
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "configs: ColumnRuntimeConfig[];\r\n  onToggle: (key: string, visible: boolean) => void;\r\n  onWidthChange: (key: string, width?: number) => void;\r\n  onReset: () => void;\r\n  onReorder?: (keys: string[]) => void;\r\n}\r\n\r\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\columns\\ColumnSettingsDropdown.tsx",
        "start": 11,
        "end": 18,
        "startLoc": {
          "line": 11,
          "column": 3,
          "position": 106
        },
        "endLoc": {
          "line": 18,
          "column": 6,
          "position": 200
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\columns\\ColumnSettingsModal.tsx",
        "start": 16,
        "end": 23,
        "startLoc": {
          "line": 16,
          "column": 3,
          "position": 199
        },
        "endLoc": {
          "line": 23,
          "column": 5,
          "position": 293
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\r\n            onClick={() => {\r\n              if (controlledFilters?.onChange) {\r\n                controlledFilters.onChange({ status: statusFilter === 'imported' ? null : 'imported', industry: industryFilter ?? null });\r\n              } else {\r\n                setStatusFilterInner(prev => (prev === 'imported' ? null : 'imported'));\r\n              }\r\n            }}\r\n            style",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\NumbersTable.tsx",
        "start": 272,
        "end": 280,
        "startLoc": {
          "line": 272,
          "column": 10,
          "position": 3965
        },
        "endLoc": {
          "line": 280,
          "column": 6,
          "position": 4077
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\NumbersTable.tsx",
        "start": 197,
        "end": 203,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 2822
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 2929
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\r\n            onClick={() => {\r\n              if (controlledFilters?.onChange) {\r\n                controlledFilters.onChange({ status: statusFilter === 'not_imported' ? null : 'not_imported', industry: industryFilter ?? null });\r\n              } else {\r\n                setStatusFilterInner(prev => (prev === 'not_imported' ? null : 'not_imported'));\r\n              }\r\n            }}\r\n            style",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\NumbersTable.tsx",
        "start": 285,
        "end": 293,
        "startLoc": {
          "line": 285,
          "column": 10,
          "position": 4131
        },
        "endLoc": {
          "line": 293,
          "column": 6,
          "position": 4243
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\NumbersTable.tsx",
        "start": 206,
        "end": 212,
        "startLoc": {
          "line": 206,
          "column": 2,
          "position": 2990
        },
        "endLoc": {
          "line": 212,
          "column": 2,
          "position": 3097
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\r\n            onClick={() => {\r\n              if (controlledFilters?.onChange) {\r\n                controlledFilters.onChange({ status: statusFilter === 'vcf_generated' ? null : 'vcf_generated', industry: industryFilter ?? null });\r\n              } else {\r\n                setStatusFilterInner(prev => (prev === 'vcf_generated' ? null : 'vcf_generated'));\r\n              }\r\n            }}\r\n            style",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\NumbersTable.tsx",
        "start": 298,
        "end": 306,
        "startLoc": {
          "line": 298,
          "column": 10,
          "position": 4297
        },
        "endLoc": {
          "line": 306,
          "column": 6,
          "position": 4409
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\NumbersTable.tsx",
        "start": 215,
        "end": 221,
        "startLoc": {
          "line": 215,
          "column": 2,
          "position": 3158
        },
        "endLoc": {
          "line": 221,
          "column": 2,
          "position": 3265
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ",\r\n        } : undefined}\r\n        pagination={pagination ? {\r\n          current: pagination.current,\r\n          pageSize: pagination.pageSize,\r\n          total: pagination.total,\r\n          onChange: pagination.onChange,\r\n          showSizeChanger: true,\r\n          showTotal: (t) => `共 ${t} 条`,\r\n        } : false}\r\n        columns",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\NumbersTable.tsx",
        "start": 345,
        "end": 355,
        "startLoc": {
          "line": 345,
          "column": 5,
          "position": 4802
        },
        "endLoc": {
          "line": 355,
          "column": 8,
          "position": 4901
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\SessionsTable.tsx",
        "start": 156,
        "end": 166,
        "startLoc": {
          "line": 156,
          "column": 18,
          "position": 1634
        },
        "endLoc": {
          "line": 166,
          "column": 13,
          "position": 1733
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const x1 = parseInt(match[1], 10);\r\n  const y1 = parseInt(match[2], 10);\r\n  const x2 = parseInt(match[3], 10);\r\n  const y2 = parseInt(match[4], 10);\r\n  \r\n  const topLeft",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils\\coordinateTransform.ts",
        "start": 197,
        "end": 202,
        "startLoc": {
          "line": 197,
          "column": 3,
          "position": 1386
        },
        "endLoc": {
          "line": 202,
          "column": 8,
          "position": 1470
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils\\screenGeometry.ts",
        "start": 34,
        "end": 38,
        "startLoc": {
          "line": 34,
          "column": 7,
          "position": 420
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 502
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "*100).toFixed(0)}%</Text>\r\n              <input type=\"range\" min={0.5} max={3} step={0.1} value={previewZoom} onChange={e=>setPreviewZoom && setPreviewZoom(parseFloat(e.target.value))} style={{width:'100%'}} />\r\n            </div>\r\n            <Space align=\"center\" size={8}>\r\n              <input type=\"checkbox\" checked={autoCalibration} onChange={e=>setAutoCalibration && setAutoCalibration(e.target.checked)} />\r\n              <Text style={{fontSize:13}}>自动校准缩放",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\components\\LeftControlPanel.tsx",
        "start": 170,
        "end": 175,
        "startLoc": {
          "line": 170,
          "column": 12,
          "position": 2140
        },
        "endLoc": {
          "line": 175,
          "column": 7,
          "position": 2298
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\components\\LeftControlPanel.tsx",
        "start": 162,
        "end": 167,
        "startLoc": {
          "line": 162,
          "column": 14,
          "position": 1941
        },
        "endLoc": {
          "line": 167,
          "column": 3,
          "position": 2099
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "const BUILTIN_PRESETS: ScrcpyPreset[] = [\r\n  {\r\n    id: 'default:smooth',\r\n    name: '流畅优先 (720p/8M/60fps)',\r\n    options: { resolution: '1280', bitrate: '8M', maxFps: 60 },\r\n    builtIn: true,\r\n  },\r\n  {\r\n    id: 'default:clear',\r\n    name: '清晰优先 (1080p/16M/60fps)',\r\n    options: { resolution: '1920', bitrate: '16M', maxFps: 60 },\r\n    builtIn: true,\r\n  },\r\n  {\r\n    id: 'default:power',\r\n    name: '省电优先 (720p/4M/30fps)',\r\n    options: { resolution: '1280', bitrate: '4M', maxFps: 30 },\r\n    builtIn: true,\r\n  },\r\n];",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\mirror-view\\hooks\\useScrcpyPresets.ts",
        "start": 15,
        "end": 34,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 99
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 294
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\mirror-view\\presets\\presets.ts",
        "start": 14,
        "end": 33,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 81
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 276
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "() {\r\n  const [custom, setCustom] = useState<ScrcpyPreset[]>(() => {\r\n    try {\r\n      const raw = localStorage.getItem(LS_KEY);\r\n      if (!raw) return [];\r\n      const arr = JSON.parse(raw) as ScrcpyPreset[];\r\n      return Array.isArray(arr) ? arr.filter(p => !p.builtIn) : [];\r\n    } catch {\r\n      return [];\r\n    }\r\n  });\r\n\r\n  const all",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\mirror-view\\hooks\\useScrcpyPresets.ts",
        "start": 38,
        "end": 50,
        "startLoc": {
          "line": 38,
          "column": 17,
          "position": 316
        },
        "endLoc": {
          "line": 50,
          "column": 4,
          "position": 472
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\mirror-view\\presets\\usePresets.ts",
        "start": 11,
        "end": 23,
        "startLoc": {
          "line": 11,
          "column": 11,
          "position": 85
        },
        "endLoc": {
          "line": 23,
          "column": 8,
          "position": 241
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "= useMemo(() => [...BUILTIN_PRESETS, ...custom], [custom]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(LS_KEY, JSON.stringify(custom));\r\n    } catch {}\r\n  }, [custom]);\r\n\r\n  const savePreset = (name: string, options: ScrcpyOptions) => {\r\n    const id = `user:${Date.now()}`;\r\n    const preset: ScrcpyPreset = { id, name, options };\r\n    setCustom(prev => [preset, ...prev]);\r\n    return preset;\r\n  };\r\n\r\n  const removePreset = (id: string) => {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\mirror-view\\hooks\\useScrcpyPresets.ts",
        "start": 50,
        "end": 65,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 474
        },
        "endLoc": {
          "line": 65,
          "column": 2,
          "position": 675
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\mirror-view\\presets\\usePresets.ts",
        "start": 23,
        "end": 36,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 243
        },
        "endLoc": {
          "line": 36,
          "column": 10,
          "position": 440
        }
      }
    },
    {
      "format": "javascript",
      "lines": 7,
      "fragment": "={styles.card}>\r\n      <div className={styles.cardHeader} style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <span>XPath 帮助</span>\r\n        <button className={styles.btn} onClick={() => setCollapsed(c => !c)}>{collapsed ? '展开' : '收起'}</button>\r\n      </div>\r\n      {!collapsed && (\r\n        <div className={styles.cardBody}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\XPathHelpPanel.tsx",
        "start": 11,
        "end": 17,
        "startLoc": {
          "line": 11,
          "column": 10,
          "position": 94
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 223
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\XPathTemplatesPanel.tsx",
        "start": 37,
        "end": 43,
        "startLoc": {
          "line": 37,
          "column": 10,
          "position": 808
        },
        "endLoc": {
          "line": 43,
          "column": 2,
          "position": 937
        }
      }
    },
    {
      "format": "javascript",
      "lines": 6,
      "fragment": "={styles.card}>\r\n      <div className={styles.cardHeader} style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <div className=\"flex items-center gap-2\">\r\n          <button className={styles.btn} onClick={() => setCollapsed(c => !c)}>{collapsed ? '展开' : '收起'}</button>\r\n          <div className=\"flex items-center gap-2\">\r\n            <button className={styles.btn",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\ResultsAndXPathPanel.tsx",
        "start": 76,
        "end": 81,
        "startLoc": {
          "line": 76,
          "column": 10,
          "position": 692
        },
        "endLoc": {
          "line": 81,
          "column": 4,
          "position": 816
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\XPathTemplatesPanel.tsx",
        "start": 37,
        "end": 43,
        "startLoc": {
          "line": 37,
          "column": 10,
          "position": 808
        },
        "endLoc": {
          "line": 43,
          "column": 9,
          "position": 936
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "={styles.card}>\r\n      <div className={styles.cardHeader} style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <span>定位建议（评分）</span>\r\n        <button className={styles.btn} onClick={() => setCollapsed(c => !c)}>{collapsed ? '展开' : '收起'}</button>\r\n      </div>\r\n      {!collapsed && (\r\n        <div className={styles.cardBody}>\r\n          <ul className=\"space-y-2\">\r\n            {items.map((it, i) => (\r\n              <li key={i} className=\"p-2 rounded-lg border border-neutral-200 dark:border-neutral-700\">\r\n                <div className=\"flex items-center justify-between gap-2\">\r\n                  <div className=\"text-sm font-medium\">{it.label} <span className=\"ml-2 text-[12px] text-neutral-500\">评分 {it.score}</span></div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {onInsert && <button className={styles.btn} style={{ padding: '2px 6px' }} onClick={() => onInsert(it.xpath)}>仅插入</button>}\r\n                    <button className={styles.btn} style={{ padding: '2px 6px' }} onClick={() => onApply(it.xpath)}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\LocatorAdvisorPanel.tsx",
        "start": 21,
        "end": 35,
        "startLoc": {
          "line": 21,
          "column": 10,
          "position": 241
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 574
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\XPathTemplatesPanel.tsx",
        "start": 37,
        "end": 51,
        "startLoc": {
          "line": 37,
          "column": 10,
          "position": 808
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 1117
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "</div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {onInsert && <button className={styles.btn} style={{ padding: '2px 6px' }} onClick={() => onInsert(it.xpath)}>仅插入</button>}\r\n                    <button className={styles.btn} style={{ padding: '2px 6px' }} onClick={() => onApply(it.xpath)}>应用</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-1 font-mono text-[12px] break-all\">{it.xpath}</div>\r\n                {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\LocatorAdvisorPanel.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 467
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 615
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\XPathTemplatesPanel.tsx",
        "start": 48,
        "end": 55,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 1010
        },
        "endLoc": {
          "line": 55,
          "column": 3,
          "position": 1158
        }
      }
    },
    {
      "format": "javascript",
      "lines": 10,
      "fragment": "={styles.card}>\r\n      <div className={styles.cardHeader} style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <span>字段说明</span>\r\n        <button className={styles.btn} onClick={() => setCollapsed(c => !c)}>{collapsed ? '展开' : '收起'}</button>\r\n      </div>\r\n      {!collapsed && (\r\n        <div className={styles.cardBody}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm\">\r\n            {FIELD_DOCS.map(item => (\r\n              <div key={item",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\FieldDocPanel.tsx",
        "start": 12,
        "end": 21,
        "startLoc": {
          "line": 12,
          "column": 10,
          "position": 108
        },
        "endLoc": {
          "line": 21,
          "column": 5,
          "position": 271
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\panels\\XPathTemplatesPanel.tsx",
        "start": 37,
        "end": 46,
        "startLoc": {
          "line": 37,
          "column": 10,
          "position": 808
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 978
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "{\r\n  root: UiNode | null;\r\n  selected: UiNode | null;\r\n  onSelect: (node: UiNode | null) => void;\r\n  expandAll: boolean;\r\n  collapseVersion: number;\r\n  expandDepth: number;\r\n  showMatchedOnly: boolean;\r\n  matchedSet: Set<UiNode>;\r\n  selectedAncestors: UiNode[];\r\n  leftWidth",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\components\\MainLayout.tsx",
        "start": 16,
        "end": 26,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 90
        },
        "endLoc": {
          "line": 26,
          "column": 10,
          "position": 192
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\components\\TreeView.tsx",
        "start": 18,
        "end": 28,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 112
        },
        "endLoc": {
          "line": 28,
          "column": 12,
          "position": 214
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "const regex = new RegExp(`(${keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`, 'gi');\r\n    const parts = text.split(regex);\r\n    \r\n    return parts.map((part, index) => \r\n      regex.test(part) ? \r\n        <span key={index} className=\"bg-yellow-200 dark:bg-yellow-800 px-1 rounded",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\components\\ChildElementCard.tsx",
        "start": 51,
        "end": 56,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 339
        },
        "endLoc": {
          "line": 56,
          "column": 46,
          "position": 432
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\components\\ChildElementSelectorModal.tsx",
        "start": 86,
        "end": 91,
        "startLoc": {
          "line": 86,
          "column": 5,
          "position": 783
        },
        "endLoc": {
          "line": 91,
          "column": 33,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const centerA = {\r\n      x: (boundsA.left + boundsA.right) / 2,\r\n      y: (boundsA.top + boundsA.bottom) / 2\r\n    };\r\n    \r\n    const centerB = {\r\n      x: (boundsB.left + boundsB.right) / 2,\r\n      y: (boundsB.top + boundsB.bottom) / 2\r\n    };\r\n    \r\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\utils\\boundaryDetector.ts",
        "start": 221,
        "end": 231,
        "startLoc": {
          "line": 221,
          "column": 5,
          "position": 1995
        },
        "endLoc": {
          "line": 231,
          "column": 6,
          "position": 2115
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\utils\\boundaryDetector.ts",
        "start": 146,
        "end": 156,
        "startLoc": {
          "line": 146,
          "column": 5,
          "position": 1233
        },
        "endLoc": {
          "line": 156,
          "column": 10,
          "position": 1353
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".forEach(element => {\r\n      const node: HierarchyNode = {\r\n        id: element.id,\r\n        element,\r\n        parent: null,\r\n        children: [],\r\n        level: 0,\r\n        path: '',\r\n        isClickable: element.is_clickable || false,\r\n        hasText: Boolean(element.text && element.text.trim()),\r\n        isHidden: this.isHiddenElement(element),\r\n        relationship: element",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\services\\LocalArchitectureAnalyzer.ts",
        "start": 76,
        "end": 87,
        "startLoc": {
          "line": 76,
          "column": 14,
          "position": 525
        },
        "endLoc": {
          "line": 87,
          "column": 8,
          "position": 650
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\services\\PureXmlStructureAnalyzer.ts",
        "start": 65,
        "end": 76,
        "startLoc": {
          "line": 65,
          "column": 9,
          "position": 389
        },
        "endLoc": {
          "line": 76,
          "column": 7,
          "position": 514
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "{\r\n    onSwitchToElement?: (element: UIElement) => void;\r\n    onViewDetails?: (element: UIElement) => void;\r\n    onHighlightElement?: (element: UIElement) => void;\r\n    onCopyElementInfo?: (element: UIElement) => void;\r\n    onShowBounds?: (element: UIElement) => void;\r\n  }>",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\hooks\\useArchitectureTree.ts",
        "start": 29,
        "end": 35,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 259
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 354
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\services\\hierarchyBuilder.ts",
        "start": 230,
        "end": 237,
        "startLoc": {
          "line": 230,
          "column": 2,
          "position": 2091
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 2189
        }
      }
    },
    {
      "format": "javascript",
      "lines": 29,
      "fragment": "}\r\n                    >\r\n                      打开智能导航配置器\r\n                    </Button>\r\n                    <br />\r\n                    <Text type=\"secondary\" style={{ marginTop: 8, display: \"block\" }}>\r\n                      包含向导模式（推荐新手）和专业模式（支持自定义配置）\r\n                    </Text>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            }\r\n\r\n            if (stepType === SmartActionType.SMART_FIND_ELEMENT) {\r\n              return (\r\n                <div>\r\n                  <Divider orientation=\"left\">智能元素查找配置</Divider>\r\n                  <Alert\r\n                    message=\"智能元素查找通过分析当前页面UI结构，自动识别可操作元素并支持智能去重和分类，提供精确的元素定位能力\"\r\n                    type=\"info\"\r\n                    showIcon\r\n                    style={{ marginBottom: 16 }}\r\n                  />\r\n                  <Card style={{ marginBottom: 16, textAlign: 'center' }}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      size=\"large\"\r\n                      icon={<EyeOutlined />}\r\n                      onClick={onOpenPageAnalyzer",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 232,
        "end": 260,
        "startLoc": {
          "line": 232,
          "column": 22,
          "position": 1819
        },
        "endLoc": {
          "line": 260,
          "column": 19,
          "position": 2031
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\step-edit-modal-native\\ActionConfigSection.tsx",
        "start": 41,
        "end": 72,
        "startLoc": {
          "line": 41,
          "column": 22,
          "position": 303
        },
        "endLoc": {
          "line": 72,
          "column": 19,
          "position": 514
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "{\r\n      criteria: {\r\n        minViews: 10000,\r\n        minLikes: 1000,\r\n        minComments: 100,\r\n        minEngagement: 5,\r\n        timeRange: 'week',\r\n        publishedWithin: 168, // 7天\r\n        platforms: ['xiaohongshu', 'douyin']\r\n      },\r\n      sortBy: 'score',\r\n      sortOrder: 'desc',\r\n      statusFilter: 'pending'\r\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\smart-recommendation\\RecommendationFilters.tsx",
        "start": 73,
        "end": 86,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 546
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 648
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\smart-recommendation\\SmartRecommendationPanel.tsx",
        "start": 55,
        "end": 68,
        "startLoc": {
          "line": 55,
          "column": 2,
          "position": 430
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 532
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "} ({device.model})\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <Button onClick={() => setReplyModalVisible(false)}>\r\n                  取消\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  loading={loading}\r\n                  icon={<SendOutlined />}\r\n                >\r\n                  发送回复\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n\r\n      {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\reply-management\\EnhancedReplyTaskManager.tsx",
        "start": 579,
        "end": 603,
        "startLoc": {
          "line": 579,
          "column": 3,
          "position": 4863
        },
        "endLoc": {
          "line": 603,
          "column": 2,
          "position": 5018
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\industry-monitoring\\components\\ReplyTaskManager.tsx",
        "start": 383,
        "end": 406,
        "startLoc": {
          "line": 383,
          "column": 2,
          "position": 3143
        },
        "endLoc": {
          "line": 406,
          "column": 2,
          "position": 3296
        }
      }
    },
    {
      "format": "javascript",
      "lines": 36,
      "fragment": "}\r\n        >\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <Form.Item name=\"batchSize\" label=\"批量大小\">\r\n                <InputNumber min={1} max={20} className=\"w-full\" />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Form.Item name=\"intervalMinutes\" label=\"间隔时间（分钟）\">\r\n                <InputNumber min={1} max={120} className=\"w-full\" />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Form.Item name=\"maxDailyFollows\" label=\"每日最大关注数\">\r\n                <InputNumber min={10} max={200} className=\"w-full\" />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Form.Item name=\"safetyInterval\" label=\"安全间隔（秒）\">\r\n                <InputNumber min={1} max={10} className=\"w-full\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form.Item name=\"enableDeduplication\" valuePropName=\"checked\">\r\n            <Switch />\r\n            <span className=\"ml-2\">启用查重保护</span>\r\n          </Form.Item>\r\n\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <Button onClick={() => {\r\n              setSettingsModalVisible",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\follow-executor\\FollowTaskExecutor.tsx",
        "start": 652,
        "end": 687,
        "startLoc": {
          "line": 652,
          "column": 19,
          "position": 5851
        },
        "endLoc": {
          "line": 687,
          "column": 24,
          "position": 6225
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\follow-executor\\FollowTaskExecutor.tsx",
        "start": 566,
        "end": 627,
        "startLoc": {
          "line": 566,
          "column": 3,
          "position": 5208
        },
        "endLoc": {
          "line": 627,
          "column": 22,
          "position": 5700
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ">\r\n                <InputNumber min={1} max={10} className=\"w-full\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Form.Item name=\"enableDeduplication\" valuePropName=\"checked\">\r\n            <Switch />\r\n            <span className=\"ml-2\">启用查重保护</span>\r\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\follow-executor\\FollowTaskExecutor.tsx",
        "start": 674,
        "end": 683,
        "startLoc": {
          "line": 674,
          "column": 2,
          "position": 6102
        },
        "endLoc": {
          "line": 683,
          "column": 3,
          "position": 6192
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\follow-executor\\FollowTaskExecutor.tsx",
        "start": 611,
        "end": 620,
        "startLoc": {
          "line": 611,
          "column": 15,
          "position": 5546
        },
        "endLoc": {
          "line": 620,
          "column": 2,
          "position": 5636
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "\">\r\n                      <InfoCircleOutlined className=\"text-gray-400\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n              >\r\n                <InputNumber min={0} className=\"w-full\" />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col xs={24} md={8}>\r\n              <Form.Item\r\n                name=\"minComments\"\r\n                label={\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <span>最小评论数",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 234,
        "end": 249,
        "startLoc": {
          "line": 234,
          "column": 13,
          "position": 1775
        },
        "endLoc": {
          "line": 249,
          "column": 6,
          "position": 1880
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 218,
        "end": 233,
        "startLoc": {
          "line": 218,
          "column": 13,
          "position": 1658
        },
        "endLoc": {
          "line": 233,
          "column": 6,
          "position": 1763
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "\">\r\n                      <InfoCircleOutlined className=\"text-gray-400\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n              >\r\n                <InputNumber min={0} className=\"w-full\" />\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col xs={24} md={8}>\r\n              <Form.Item\r\n                name=\"minEngagementRate\"\r\n                label={\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <span>最小互动率",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 250,
        "end": 265,
        "startLoc": {
          "line": 250,
          "column": 13,
          "position": 1892
        },
        "endLoc": {
          "line": 265,
          "column": 6,
          "position": 1997
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 218,
        "end": 233,
        "startLoc": {
          "line": 218,
          "column": 13,
          "position": 1658
        },
        "endLoc": {
          "line": 233,
          "column": 6,
          "position": 1763
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Form.Item name=\"maxViews\" className=\"mb-0\">\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder=\"最大值\"\r\n                        className=\"w-full\"\r\n                        formatter={(value) =>\r\n                          `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                        }\r\n                        parser={(value) =>\r\n                          Number(value!.replace(/\\$\\s?|(,*)/g, \"\")) as 0\r\n                        }\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col xs={24",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 316,
        "end": 339,
        "startLoc": {
          "line": 316,
          "column": 25,
          "position": 2528
        },
        "endLoc": {
          "line": 339,
          "column": 3,
          "position": 2693
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 304,
        "end": 320,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 2420
        },
        "endLoc": {
          "line": 320,
          "column": 3,
          "position": 2552
        }
      }
    },
    {
      "format": "javascript",
      "lines": 35,
      "fragment": "\">\r\n                      <InfoCircleOutlined className=\"text-gray-400\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n              >\r\n                <Row gutter={8}>\r\n                  <Col span={12}>\r\n                    <Form.Item name=\"minComments\" className=\"mb-0\">\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder=\"最小值\"\r\n                        className=\"w-full\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Form.Item name=\"maxComments\" className=\"mb-0\">\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder=\"最大值\"\r\n                        className=\"w-full\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col xs={24} md={12}>\r\n              <Form.Item\r\n                name=\"timeRange\"\r\n                label={\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <span>时间范围（小时）",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 378,
        "end": 412,
        "startLoc": {
          "line": 378,
          "column": 13,
          "position": 2981
        },
        "endLoc": {
          "line": 412,
          "column": 9,
          "position": 3219
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 344,
        "end": 377,
        "startLoc": {
          "line": 344,
          "column": 13,
          "position": 2737
        },
        "endLoc": {
          "line": 377,
          "column": 6,
          "position": 2969
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ";\r\n  title: string;\r\n  description: string;\r\n  filters: Partial<DataFilter>;\r\n  score: number;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n}\r\n\r\ninterface DataFilterEnhancementProps {\r\n  onFilterChange: (filters: DataFilter) => void;\r\n  initialFilters?: Partial<DataFilter>;\r\n  showRecommendations",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 59,
        "end": 71,
        "startLoc": {
          "line": 59,
          "column": 12,
          "position": 365
        },
        "endLoc": {
          "line": 71,
          "column": 20,
          "position": 463
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 52,
        "end": 64,
        "startLoc": {
          "line": 52,
          "column": 12,
          "position": 307
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 404
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "}) => {\r\n  const [form] = Form.useForm();\r\n  const [currentFilters, setCurrentFilters] = useState<DataFilter>({\r\n    minViews: 1000,\r\n    maxViews: 1000000,\r\n    minLikes: 10,\r\n    maxLikes: 10000,\r\n    minComments: 5,\r\n    maxComments: 1000,\r\n    minEngagementRate: 2,\r\n    minGrowthRate",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 78,
        "end": 88,
        "startLoc": {
          "line": 78,
          "column": 1,
          "position": 520
        },
        "endLoc": {
          "line": 88,
          "column": 14,
          "position": 622
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 69,
        "end": 79,
        "startLoc": {
          "line": 69,
          "column": 1,
          "position": 443
        },
        "endLoc": {
          "line": 79,
          "column": 10,
          "position": 545
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ";\r\n\r\n  // 应用推荐筛选\r\n  const applyRecommendation = (recommendation: SmartRecommendation) => {\r\n    const newFilters = { ...currentFilters, ...recommendation.filters };\r\n    setCurrentFilters(newFilters);\r\n    form.setFieldsValue(newFilters);\r\n    onFilterChange(newFilters);\r\n  };\r\n\r\n  // 处理筛选变化\r\n  const handleFilterChange = (changedValues: any, allValues: DataFilter) => {\r\n    setCurrentFilters(allValues);\r\n    onFilterChange(allValues);\r\n  };\r\n\r\n  // 重置筛选",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 187,
        "end": 203,
        "startLoc": {
          "line": 187,
          "column": 2,
          "position": 1503
        },
        "endLoc": {
          "line": 203,
          "column": 8,
          "position": 1639
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 149,
        "end": 165,
        "startLoc": {
          "line": 149,
          "column": 2,
          "position": 1057
        },
        "endLoc": {
          "line": 165,
          "column": 7,
          "position": 1193
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "\" className=\"mb-0\">\r\n                      <InputNumber\r\n                        min={0}\r\n                        placeholder=\"最大值\"\r\n                        className=\"w-full\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col xs={24} md={12}>\r\n              <Form.Item\r\n                name",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 395,
        "end": 409,
        "startLoc": {
          "line": 395,
          "column": 12,
          "position": 3107
        },
        "endLoc": {
          "line": 409,
          "column": 5,
          "position": 3196
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 361,
        "end": 375,
        "startLoc": {
          "line": 361,
          "column": 9,
          "position": 2863
        },
        "endLoc": {
          "line": 375,
          "column": 6,
          "position": 2952
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "</Form.Item>\r\n            </Col>\r\n\r\n            <Col xs={24} md={12}>\r\n              <Form.Item\r\n                name=\"timeRange\"\r\n                label={\r\n                  <span className=\"flex items-center space-x-1\">\r\n                    <span>时间范围（小时）</span>\r\n                    <Tooltip title=\"仅筛选指定时间内发布的内容\">\r\n                      <InfoCircleOutlined className=\"text-gray-400\" />\r\n                    </Tooltip>\r\n                  </span>\r\n                }\r\n              >\r\n                <Select>\r\n                  <Option value={1}>最近 1 小时</Option>\r\n                  <Option value={6}>最近 6 小时</Option>\r\n                  <Option value={12}>最近 12 小时</Option>\r\n                  <Option value={24}>最近 24 小时</Option>\r\n                  <Option value={48}>最近 48",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\DataFilterEnhancement.tsx",
        "start": 404,
        "end": 424,
        "startLoc": {
          "line": 404,
          "column": 15,
          "position": 3161
        },
        "endLoc": {
          "line": 424,
          "column": 3,
          "position": 3356
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\data-filter\\SimpleDataFilter.tsx",
        "start": 273,
        "end": 293,
        "startLoc": {
          "line": 273,
          "column": 15,
          "position": 2071
        },
        "endLoc": {
          "line": 293,
          "column": 2,
          "position": 2266
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "{\r\n  /** 分析任务ID */\r\n  analysisJobId?: string;\r\n  /** 选择哈希（防串扰） */\r\n  selectionHash?: string;\r\n  /** 分析状态 */\r\n  analysisState: AnalysisStepState;\r\n  /** 分析进度 */\r\n  analysisProgress?: AnalysisProgress;\r\n  /** 分析结果 */\r\n  analysisResult?: AnalysisResult;\r\n  /** 推荐策略 */\r\n  recommendedStrategy?: StrategyCandidate;\r\n  /** 推荐置信度 */\r\n  recommendedConfidence?: number;\r\n  /** 是否自动跟随智能策略 */\r\n  autoFollowSmart?: boolean;\r\n}\r\n\r\n/**\r\n * 分析操作回调\r\n */\r\nexport interface StepCardAnalysisActions",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\ui\\types\\AnalysisStepCard.ts",
        "start": 21,
        "end": 43,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 112
        },
        "endLoc": {
          "line": 43,
          "column": 24,
          "position": 230
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\ui\\types\\universal-analysis-step-card.ts",
        "start": 21,
        "end": 43,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 112
        },
        "endLoc": {
          "line": 43,
          "column": 33,
          "position": 230
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\r\n  /** 重试分析 */\r\n  onRetryAnalysis?: () => Promise<void>;\r\n  /** 取消分析 */\r\n  onCancelAnalysis?: () => void;\r\n  /** 应用推荐策略 */\r\n  onApplyRecommended?: (strategy: StrategyCandidate) => Promise<void>;\r\n  /** 查看分析详情 */\r\n  onViewAnalysisDetails?: () => void;\r\n  /** 一键升级 */\r\n  onQuickUpgrade?: () => Promise<void>;\r\n}\r\n\r\n/**\r\n * 扩展的步骤卡片属性\r\n */\r\nexport interface AnalysisEnhancedStepCardProps",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\ui\\types\\AnalysisStepCard.ts",
        "start": 43,
        "end": 59,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 232
        },
        "endLoc": {
          "line": 59,
          "column": 30,
          "position": 350
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\ui\\types\\universal-analysis-step-card.ts",
        "start": 43,
        "end": 59,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 232
        },
        "endLoc": {
          "line": 59,
          "column": 39,
          "position": 350
        }
      }
    },
    {
      "format": "javascript",
      "lines": 6,
      "fragment": ".disabled}\r\n                style={{ width: '100%' }}\r\n              >\r\n                <div style={{ marginLeft: 8 }}>\r\n                  <div style={{ display: 'flex', alignItems: 'center', gap: 6, marginBottom: 4 }}>\r\n                    <span style={{ color: modeConfig.smart_variant",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\universal-strategy-mode-selector.tsx",
        "start": 236,
        "end": 241,
        "startLoc": {
          "line": 236,
          "column": 14,
          "position": 1880
        },
        "endLoc": {
          "line": 241,
          "column": 14,
          "position": 1962
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\universal-strategy-mode-selector.tsx",
        "start": 188,
        "end": 193,
        "startLoc": {
          "line": 188,
          "column": 12,
          "position": 1398
        },
        "endLoc": {
          "line": 193,
          "column": 12,
          "position": 1480
        }
      }
    },
    {
      "format": "javascript",
      "lines": 6,
      "fragment": ".disabled}\r\n                style={{ width: '100%' }}\r\n              >\r\n                <div style={{ marginLeft: 8 }}>\r\n                  <div style={{ display: 'flex', alignItems: 'center', gap: 6, marginBottom: 4 }}>\r\n                    <span style={{ color: modeConfig.static_user",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\universal-strategy-mode-selector.tsx",
        "start": 278,
        "end": 283,
        "startLoc": {
          "line": 278,
          "column": 12,
          "position": 2280
        },
        "endLoc": {
          "line": 283,
          "column": 12,
          "position": 2362
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\universal-strategy-mode-selector.tsx",
        "start": 188,
        "end": 193,
        "startLoc": {
          "line": 188,
          "column": 12,
          "position": 1398
        },
        "endLoc": {
          "line": 193,
          "column": 12,
          "position": 1480
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "percent={Math.round(\r\n                  (analysisProgress.currentStep / analysisProgress.totalSteps) *\r\n                    100\r\n                )}\r\n                size=\"small\"\r\n                strokeColor=\"#1890ff\"\r\n                showInfo={false}\r\n              />\r\n              <Text style={{ fontSize: 12, color: \"var(--text-3, #94a3b8)\" }}>\r\n                步骤 {analysisProgress.currentStep}/\r\n                {analysisProgress.totalSteps}\r\n              </Text>\r\n            </>\r\n          )}\r\n        </Space>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 分析完成状态\r\n  if (analysisState === \"completed\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\AnalysisStatusSection.tsx",
        "start": 89,
        "end": 109,
        "startLoc": {
          "line": 89,
          "column": 17,
          "position": 575
        },
        "endLoc": {
          "line": 109,
          "column": 12,
          "position": 715
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\universal-analysis-status-section.tsx",
        "start": 74,
        "end": 90,
        "startLoc": {
          "line": 74,
          "column": 17,
          "position": 564
        },
        "endLoc": {
          "line": 90,
          "column": 12,
          "position": 699
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "}策略\r\n              </Text>\r\n              <Tag color={isHighConfidence ? \"success\" : \"warning\"}>\r\n                {recommendedConfidence}% 置信度\r\n              </Tag>\r\n            </Space>\r\n          </div>\r\n\r\n          <Text style={{ fontSize: 12, color: \"var(--text-3, #94a3b8)\" }}>\r\n            {recommendedStrategy.name}: {recommendedStrategy.description}\r\n          </Text>\r\n\r\n          <div style={{ display: \"flex\", gap: 8, flexWrap: \"wrap\" }}>\r\n            <Button\r\n              ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\AnalysisStatusSection.tsx",
        "start": 141,
        "end": 155,
        "startLoc": {
          "line": 141,
          "column": 5,
          "position": 962
        },
        "endLoc": {
          "line": 155,
          "column": 15,
          "position": 1097
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\ui\\components\\universal-analysis-status-section.tsx",
        "start": 106,
        "end": 120,
        "startLoc": {
          "line": 106,
          "column": 5,
          "position": 933
        },
        "endLoc": {
          "line": 120,
          "column": 15,
          "position": 1068
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\r\n        device_available: false,\r\n        xml_cache_ready: true,\r\n        analysis_engine_ready: true\r\n      };\r\n\r\n      mockInvoke.mockResolvedValue(mockHealthCheck);\r\n\r\n      const result = await analysisHealthService.performHealthCheck();\r\n\r\n      expect(result.healthy).toBe(false);\r\n      expect(result.errors).toContain('未检测到可用设备，请确保设备已连接并授权调试'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\infrastructure\\__tests__\\analysis-health-service.test.ts",
        "start": 74,
        "end": 85,
        "startLoc": {
          "line": 74,
          "column": 5,
          "position": 667
        },
        "endLoc": {
          "line": 85,
          "column": 25,
          "position": 756
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\infrastructure\\__tests__\\analysis-health-service.test.ts",
        "start": 57,
        "end": 68,
        "startLoc": {
          "line": 57,
          "column": 6,
          "position": 519
        },
        "endLoc": {
          "line": 68,
          "column": 26,
          "position": 608
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "}\r\n              title=\"测试步骤\"\r\n              style={{ \r\n                border: 'none', \r\n                background: 'none', \r\n                cursor: 'pointer', \r\n                padding: '4px 6px',\r\n                borderRadius: '3px',\r\n                fontSize: '12px',\r\n                opacity: 0.7,\r\n                transition: 'opacity 0.2s'\r\n              }}\r\n              onMouseEnter={e => e.currentTarget.style.opacity = '1'}\r\n              onMouseLeave={e => e.currentTarget.style.opacity = '0.7'}\r\n            >\r\n              ▶️\r\n            </button>\r\n          )}\r\n          \r\n          {config.enableCopy && (\r\n            <button \r\n              type=\"button\"\r\n              onClick={actions.handleCopy",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\components\\step-card-system\\StepCardSystem.tsx",
        "start": 362,
        "end": 384,
        "startLoc": {
          "line": 362,
          "column": 11,
          "position": 2498
        },
        "endLoc": {
          "line": 384,
          "column": 11,
          "position": 2633
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\components\\step-card-system\\StepCardSystem.tsx",
        "start": 340,
        "end": 362,
        "startLoc": {
          "line": 340,
          "column": 11,
          "position": 2362
        },
        "endLoc": {
          "line": 362,
          "column": 11,
          "position": 2497
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "}\r\n              title=\"复制步骤\"\r\n              style={{ \r\n                border: 'none', \r\n                background: 'none', \r\n                cursor: 'pointer', \r\n                padding: '4px 6px',\r\n                borderRadius: '3px',\r\n                fontSize: '12px',\r\n                opacity: 0.7,\r\n                transition: 'opacity 0.2s'\r\n              }}\r\n              onMouseEnter={e => e.currentTarget.style.opacity = '1'}\r\n              onMouseLeave={e => e.currentTarget.style.opacity = '0.7'}\r\n            >\r\n              📋\r\n            </button>\r\n          )}\r\n          \r\n          {config.enableToggle && (\r\n            <button \r\n              type=\"button\"\r\n              onClick={actions.handleToggle",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\components\\step-card-system\\StepCardSystem.tsx",
        "start": 384,
        "end": 406,
        "startLoc": {
          "line": 384,
          "column": 11,
          "position": 2634
        },
        "endLoc": {
          "line": 406,
          "column": 13,
          "position": 2769
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\components\\step-card-system\\StepCardSystem.tsx",
        "start": 340,
        "end": 362,
        "startLoc": {
          "line": 340,
          "column": 11,
          "position": 2362
        },
        "endLoc": {
          "line": 362,
          "column": 11,
          "position": 2497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const css = `${tagName}:nth-child(${nthChild})`;\r\n    const xpath = element.xpath || `//${tagName}[${nthChild}]`;\r\n\r\n    return {\r\n      kind: 'smart',\r\n      provider: 'heuristic',\r\n      version: '1.0.0',\r\n      selector: {\r\n        css,\r\n        xpath,\r\n        score: 0.65",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\application\\usecases\\GenerateSmartStrategyUseCase.ts",
        "start": 120,
        "end": 130,
        "startLoc": {
          "line": 120,
          "column": 5,
          "position": 922
        },
        "endLoc": {
          "line": 130,
          "column": 5,
          "position": 1018
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\infrastructure\\adapters\\HeuristicProvider.ts",
        "start": 235,
        "end": 245,
        "startLoc": {
          "line": 235,
          "column": 5,
          "position": 1747
        },
        "endLoc": {
          "line": 245,
          "column": 4,
          "position": 1843
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "${response.description}`,\r\n          retry_suggested: this.shouldRetry(response.error_code),\r\n          platform_response: response\r\n        };\r\n      }\r\n      \r\n    } catch (error) {\r\n      return {\r\n        task_id: task.id,\r\n        success: false,\r\n        executed_at: new Date(),\r\n        execution_time_ms: Date.now() - startTime,\r\n        error_message: `关注执行失败: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-execution\\executors\\TaskExecutors.ts",
        "start": 310,
        "end": 322,
        "startLoc": {
          "line": 310,
          "column": 13,
          "position": 2439
        },
        "endLoc": {
          "line": 322,
          "column": 10,
          "position": 2549
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-execution\\executors\\TaskExecutors.ts",
        "start": 264,
        "end": 276,
        "startLoc": {
          "line": 264,
          "column": 11,
          "position": 2009
        },
        "endLoc": {
          "line": 276,
          "column": 10,
          "position": 2119
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n      platform: target.platform,\r\n      status: TaskStatus.NEW,\r\n      priority,\r\n      target_id: target.id,\r\n      target_user_id: target.platform_id_or_url,\r\n      assigned_device_id: undefined,\r\n      retry_count: 0,\r\n      max_retries: 3,\r\n      created_at: new Date(),\r\n      updated_at: new Date(),\r\n      scheduled_time: new Date(),\r\n    };\r\n  }\r\n\r\n  private createLikeTask",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\TaskGenerator.ts",
        "start": 166,
        "end": 181,
        "startLoc": {
          "line": 166,
          "column": 6,
          "position": 1371
        },
        "endLoc": {
          "line": 181,
          "column": 15,
          "position": 1493
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\TaskGenerator.ts",
        "start": 148,
        "end": 163,
        "startLoc": {
          "line": 148,
          "column": 7,
          "position": 1205
        },
        "endLoc": {
          "line": 163,
          "column": 16,
          "position": 1327
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n      platform: target.platform,\r\n      status: TaskStatus.NEW,\r\n      priority,\r\n      target_id: target.id,\r\n      target_user_id: target.platform_id_or_url,\r\n      assigned_device_id: undefined,\r\n      retry_count: 0,\r\n      max_retries: 3,\r\n      created_at: new Date(),\r\n      updated_at: new Date(),\r\n      scheduled_time: new Date(),\r\n    };\r\n  }\r\n\r\n  private async",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\TaskGenerator.ts",
        "start": 184,
        "end": 199,
        "startLoc": {
          "line": 184,
          "column": 5,
          "position": 1537
        },
        "endLoc": {
          "line": 199,
          "column": 6,
          "position": 1659
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\TaskGenerator.ts",
        "start": 148,
        "end": 163,
        "startLoc": {
          "line": 148,
          "column": 7,
          "position": 1205
        },
        "endLoc": {
          "line": 163,
          "column": 16,
          "position": 1327
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\r\n      };\r\n      \r\n    } catch (error) {\r\n      return {\r\n        task_id: task.id,\r\n        status: TaskStatus.FAILED,\r\n        result_code: ResultCode.TEMP_ERROR,\r\n        error_message: error instanceof Error ? error.message : String(error),\r\n        executed_at: new Date(),\r\n        execution_mode: ExecutorMode.MANUAL\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 在设备上执行关注任务\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\prospecting-enhanced-executor-service.ts",
        "start": 235,
        "end": 252,
        "startLoc": {
          "line": 235,
          "column": 9,
          "position": 1792
        },
        "endLoc": {
          "line": 252,
          "column": 6,
          "position": 1912
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\prospecting-task-executor-service.ts",
        "start": 314,
        "end": 331,
        "startLoc": {
          "line": 314,
          "column": 9,
          "position": 2438
        },
        "endLoc": {
          "line": 331,
          "column": 6,
          "position": 2558
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "}\r\n      };\r\n      \r\n    } catch (error) {\r\n      return {\r\n        task_id: task.id,\r\n        status: TaskStatus.FAILED,\r\n        result_code: ResultCode.TEMP_ERROR,\r\n        error_message: error instanceof Error ? error.message : String(error),\r\n        executed_at: new Date(),\r\n        execution_mode: ExecutorMode.MANUAL\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 选择负载最轻的设备\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\prospecting-enhanced-executor-service.ts",
        "start": 276,
        "end": 293,
        "startLoc": {
          "line": 276,
          "column": 9,
          "position": 2128
        },
        "endLoc": {
          "line": 293,
          "column": 6,
          "position": 2248
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\services\\prospecting-task-executor-service.ts",
        "start": 314,
        "end": 331,
        "startLoc": {
          "line": 314,
          "column": 9,
          "position": 2438
        },
        "endLoc": {
          "line": 331,
          "column": 6,
          "position": 2558
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "= (task: Task) => {\r\n    setCurrentTask(task);\r\n    setConfigModalVisible(true);\r\n    \r\n    // 预填充表单\r\n    executionForm.setFieldsValue({\r\n      template_id: '',\r\n      custom_message: '',\r\n      target_nickname: task.target_nickname || '',\r\n      target_topic: '',\r\n      target_industry: '',\r\n      target_region: ''\r\n    });\r\n  };\r\n\r\n  // 统计数据",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\components\\TaskExecutor.tsx",
        "start": 392,
        "end": 407,
        "startLoc": {
          "line": 392,
          "column": 2,
          "position": 3319
        },
        "endLoc": {
          "line": 407,
          "column": 8,
          "position": 3430
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\components\\TaskExecutor.tsx",
        "start": 259,
        "end": 276,
        "startLoc": {
          "line": 259,
          "column": 2,
          "position": 2199
        },
        "endLoc": {
          "line": 276,
          "column": 6,
          "position": 2310
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": ",\r\n  onOk,\r\n  onCancel\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const handleOk = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      await onOk(values);\r\n    } catch (error) {\r\n      console.error('Validation failed:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"分配任务",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\components\\TaskAssignmentModal.tsx",
        "start": 28,
        "end": 50,
        "startLoc": {
          "line": 28,
          "column": 17,
          "position": 218
        },
        "endLoc": {
          "line": 50,
          "column": 5,
          "position": 394
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\components\\TaskGenerationModal.tsx",
        "start": 54,
        "end": 76,
        "startLoc": {
          "line": 54,
          "column": 14,
          "position": 381
        },
        "endLoc": {
          "line": 76,
          "column": 5,
          "position": 557
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\"\r\n              >\r\n                <Option value={TaskType.FOLLOW}>关注</Option>\r\n                <Option value={TaskType.COMMENT}>评论</Option>\r\n                <Option value={TaskType.LIKE}>点赞</Option>\r\n                <Option value={TaskType.SHARE}>分享</Option>\r\n                <Option value={TaskType.VIEW}>观看</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\components\\TaskAssignmentModal.tsx",
        "start": 101,
        "end": 111,
        "startLoc": {
          "line": 101,
          "column": 13,
          "position": 744
        },
        "endLoc": {
          "line": 111,
          "column": 3,
          "position": 858
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\task-engine\\components\\TaskGenerationModal.tsx",
        "start": 121,
        "end": 131,
        "startLoc": {
          "line": 121,
          "column": 11,
          "position": 889
        },
        "endLoc": {
          "line": 131,
          "column": 2,
          "position": 1003
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": " />} />\r\n        </Dropdown>\r\n      )\r\n    }\r\n  ];\r\n\r\n  /**\r\n   * 渲染过滤器\r\n   */\r\n  const renderFilters = () => (\r\n    <Card size=\"small\" title=\"筛选条件\" style={{ marginBottom: 16 }}>\r\n      <Row gutter={16}>\r\n        <Col span={4}>\r\n          <Select\r\n            placeholder=\"平台\"\r\n            allowClear\r\n            value={filters.platform}\r\n            onChange={(value) => setFilters(prev => ({ ...prev, platform: value }))}\r\n            style={{ width: '100%' }}\r\n          >\r\n            {Object.values(Platform).map(platform => (\r\n              <Option key={platform} value={platform}>{platform}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Select\r\n            placeholder=\"地域\"\r\n            allowClear\r\n            value={filters.region",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\CommentSystemManager.tsx",
        "start": 325,
        "end": 354,
        "startLoc": {
          "line": 325,
          "column": 13,
          "position": 2682
        },
        "endLoc": {
          "line": 354,
          "column": 7,
          "position": 2935
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\EnhancedWatchTargetManager.tsx",
        "start": 289,
        "end": 318,
        "startLoc": {
          "line": 289,
          "column": 12,
          "position": 2427
        },
        "endLoc": {
          "line": 318,
          "column": 11,
          "position": 2681
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}>{platform}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Select\r\n            placeholder=\"地域\"\r\n            allowClear\r\n            value={filters.region}\r\n            onChange={(value) => setFilters(prev => ({ ...prev, region: value }))}\r\n            style={{ width: '100%' }}\r\n          >\r\n            {Object.values(RegionTag).map(region => (\r\n              <Option key={region} value={region}>{region}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n        <Col span={4",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\CommentSystemManager.tsx",
        "start": 346,
        "end": 363,
        "startLoc": {
          "line": 346,
          "column": 9,
          "position": 2878
        },
        "endLoc": {
          "line": 363,
          "column": 2,
          "position": 3048
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\EnhancedWatchTargetManager.tsx",
        "start": 335,
        "end": 352,
        "startLoc": {
          "line": 335,
          "column": 7,
          "position": 2882
        },
        "endLoc": {
          "line": 352,
          "column": 2,
          "position": 3052
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ";\r\n\r\n  /**\r\n   * 渲染过滤器\r\n   */\r\n  const renderFilters = () => (\r\n    <Card size=\"small\" title=\"筛选条件\" style={{ marginBottom: 16 }}>\r\n      <Row gutter={16}>\r\n        <Col span={4}>\r\n          <Select\r\n            placeholder=\"平台\"\r\n            allowClear\r\n            value={filters.platform}\r\n            onChange={(value) => setFilters(prev => ({ ...prev, platform: value }))}\r\n            style={{ width: '100%' }}\r\n          >\r\n            {Object.values(Platform).map(platform => (\r\n              <Option key={platform} value={platform}>{platform}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Select\r\n            placeholder=\"地域",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\CommentSystemManager.tsx",
        "start": 329,
        "end": 352,
        "startLoc": {
          "line": 329,
          "column": 2,
          "position": 2705
        },
        "endLoc": {
          "line": 352,
          "column": 3,
          "position": 2925
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\EnhancedWatchTargetManager.tsx",
        "start": 293,
        "end": 316,
        "startLoc": {
          "line": 293,
          "column": 2,
          "position": 2451
        },
        "endLoc": {
          "line": 316,
          "column": 3,
          "position": 2671
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "\"\r\n            allowClear\r\n            value={filters.region}\r\n            onChange={(value) => setFilters(prev => ({ ...prev, region: value }))}\r\n            style={{ width: '100%' }}\r\n          >\r\n            {Object.values(RegionTag).map(region => (\r\n              <Option key={region} value={region}>{region}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Select",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\CommentSystemManager.tsx",
        "start": 352,
        "end": 364,
        "startLoc": {
          "line": 352,
          "column": 3,
          "position": 2926
        },
        "endLoc": {
          "line": 364,
          "column": 7,
          "position": 3055
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\EnhancedWatchTargetManager.tsx",
        "start": 341,
        "end": 353,
        "startLoc": {
          "line": 341,
          "column": 3,
          "position": 2930
        },
        "endLoc": {
          "line": 353,
          "column": 6,
          "position": 3059
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "<Button\r\n              icon={<ReloadOutlined />}\r\n              onClick={loadComments}\r\n              loading={loading}\r\n            >\r\n              刷新\r\n            </Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <Table\r\n          rowSelection={{\r\n            selectedRowKeys,\r\n            onChange: (keys) => setSelectedRowKeys(keys as string[]),\r\n            type: 'checkbox'\r\n          }}\r\n          columns={columns}\r\n          dataSource={data}\r\n          rowKey={",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\CommentSystemManager.tsx",
        "start": 536,
        "end": 554,
        "startLoc": {
          "line": 536,
          "column": 13,
          "position": 4612
        },
        "endLoc": {
          "line": 554,
          "column": 2,
          "position": 4734
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\EnhancedWatchTargetManager.tsx",
        "start": 511,
        "end": 529,
        "startLoc": {
          "line": 511,
          "column": 13,
          "position": 4279
        },
        "endLoc": {
          "line": 529,
          "column": 11,
          "position": 4401
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "loading={loading}\r\n          size=\"small\"\r\n          pagination={{\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `显示 ${range[0]}-${range[1]} 共 ${total} 条`\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      {/* 评论详情模态框 */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\CommentSystemManager.tsx",
        "start": 555,
        "end": 565,
        "startLoc": {
          "line": 555,
          "column": 11,
          "position": 4752
        },
        "endLoc": {
          "line": 565,
          "column": 14,
          "position": 4842
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\components\\EnhancedWatchTargetManager.tsx",
        "start": 530,
        "end": 540,
        "startLoc": {
          "line": 530,
          "column": 11,
          "position": 4405
        },
        "endLoc": {
          "line": 540,
          "column": 15,
          "position": 4495
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(level: DedupLevel, key: string): Promise<DedupRecord | null> {\r\n    try {\r\n      const record = await invoke<DedupRecord | null>('find_dedup_record', {\r\n        level,\r\n        key\r\n      });\r\n      return record;\r\n    } catch (error) {\r\n      console.error('Failed to find dedup record:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\rate-limit\\services\\DedupChecker.ts",
        "start": 227,
        "end": 240,
        "startLoc": {
          "line": 227,
          "column": 16,
          "position": 1742
        },
        "endLoc": {
          "line": 240,
          "column": 8,
          "position": 1863
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\rate-limit\\services\\RecordManager.ts",
        "start": 67,
        "end": 82,
        "startLoc": {
          "line": 67,
          "column": 11,
          "position": 439
        },
        "endLoc": {
          "line": 82,
          "column": 6,
          "position": 560
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(level: DedupLevel, key: string): Promise<DedupRecord[]> {\r\n    try {\r\n      const records = await invoke<DedupRecord[]>('find_dedup_records', {\r\n        level,\r\n        key\r\n      });\r\n      return records;\r\n    } catch (error) {\r\n      console.error('Failed to find dedup records:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\rate-limit\\services\\DedupChecker.ts",
        "start": 240,
        "end": 253,
        "startLoc": {
          "line": 240,
          "column": 17,
          "position": 1868
        },
        "endLoc": {
          "line": 253,
          "column": 8,
          "position": 1986
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\rate-limit\\services\\RecordManager.ts",
        "start": 83,
        "end": 98,
        "startLoc": {
          "line": 83,
          "column": 12,
          "position": 567
        },
        "endLoc": {
          "line": 98,
          "column": 6,
          "position": 685
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\r\n          pagination={{\r\n            current: pagination.current,\r\n            pageSize: pagination.pageSize,\r\n            total: pagination.total,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条，共 ${total} 条`\r\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\candidate-pool\\components\\CandidatePoolManager.tsx",
        "start": 455,
        "end": 463,
        "startLoc": {
          "line": 455,
          "column": 8,
          "position": 3790
        },
        "endLoc": {
          "line": 463,
          "column": 2,
          "position": 3881
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\components\\RecordsTable.tsx",
        "start": 241,
        "end": 248,
        "startLoc": {
          "line": 241,
          "column": 13,
          "position": 2585
        },
        "endLoc": {
          "line": 248,
          "column": 2,
          "position": 2673
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ": AuditQuery = {\r\n        ...query,\r\n        start_time: values.dateRange?.[0]?.toDate(),\r\n        end_time: values.dateRange?.[1]?.toDate(),\r\n        levels: values.levels,\r\n        event_types: values.event_types,\r\n        limit",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\audit-system\\components\\AuditManager.tsx",
        "start": 217,
        "end": 223,
        "startLoc": {
          "line": 217,
          "column": 12,
          "position": 1676
        },
        "endLoc": {
          "line": 223,
          "column": 6,
          "position": 1752
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\audit-system\\components\\AuditManager.tsx",
        "start": 173,
        "end": 179,
        "startLoc": {
          "line": 173,
          "column": 9,
          "position": 1345
        },
        "endLoc": {
          "line": 179,
          "column": 8,
          "position": 1421
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ".match(/\\[(\\d+),(\\d+)\\]\\[(\\d+),(\\d+)\\]/);\r\n    if (!match) return null;\r\n    \r\n    return {\r\n      left: parseInt(match[1]),\r\n      top: parseInt(match[2]),\r\n      right: parseInt(match[3]),\r\n      bottom: parseInt(match[4])\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取最佳相对定位方案\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\siblings\\SiblingRelativeAnalyzer.ts",
        "start": 409,
        "end": 422,
        "startLoc": {
          "line": 409,
          "column": 10,
          "position": 3512
        },
        "endLoc": {
          "line": 422,
          "column": 6,
          "position": 3609
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\utils\\boundaryDetector.ts",
        "start": 88,
        "end": 99,
        "startLoc": {
          "line": 88,
          "column": 7,
          "position": 713
        },
        "endLoc": {
          "line": 99,
          "column": 7,
          "position": 810
        }
      }
    },
    {
      "format": "javascript",
      "lines": 20,
      "fragment": "}>\r\n          刷新\r\n        </Button>\r\n      </Tooltip>\r\n      <Button icon={<ReloadOutlined />} onClick={onRegenerate} loading={loading==='regen'} disabled={mode!=='by-batch'}>\r\n        再生成VCF\r\n      </Button>\r\n      <Button icon={<FolderOpenOutlined />} onClick={onReveal} loading={loading==='reveal'} disabled={!batch?.vcf_file_path}>\r\n        定位VCF\r\n      </Button>\r\n      <Button type=\"primary\" icon={<ImportOutlined />} onClick={onReimport} loading={loading==='import'} disabled={!batch?.vcf_file_path || !deviceId}>\r\n        再导入到设备\r\n      </Button>\r\n      <Tooltip title=\"导出当前号码为 CSV\">\r\n        <Button icon={<FileExcelOutlined />} onClick={onExportCsv} loading={loading==='exportCsv'}>\r\n          导出CSV\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip title=\"导出当前号码为 VCF（按批次命名）\">\r\n        <Button icon={<FileTextOutlined />} onClick={onExportVcf} loading={loading==='exportVcf'} disabled={!batch}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\SessionActionsBar.tsx",
        "start": 273,
        "end": 292,
        "startLoc": {
          "line": 273,
          "column": 10,
          "position": 3598
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 3877
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\ActionsBar.tsx",
        "start": 135,
        "end": 153,
        "startLoc": {
          "line": 135,
          "column": 13,
          "position": 1890
        },
        "endLoc": {
          "line": 153,
          "column": 2,
          "position": 2160
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ";\r\n\r\n  const onRegenerate = async () => {\r\n    if (mode !== 'by-batch' || !batch) return message.warning('请先选择一个批次');\r\n    if (!numbers || numbers.items.length === 0) return message.warning('该批次暂无号码');\r\n    try {\r\n      setLoading('regen');\r\n      const path = await VcfActions.regenerateVcfForBatch(batch, numbers.items as any);\r\n      message.success(`VCF已生成: ${path}`);\r\n      await onActionDone?.();\r\n    } catch (e: any) {\r\n      message.error(`生成失败: ${e?.message ?? e}`);\r\n    } finally {\r\n      setLoading(null);\r\n    }\r\n  };\r\n\r\n  const onReveal = async () => {\r\n    const path = batch?.vcf_file_path;\r\n    if (!path) return message.warning('没有可定位的VCF路径');\r\n    try {\r\n      setLoading('reveal');\r\n      await VcfActions.revealVcfFile(path);\r\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\SessionActionsBar.tsx",
        "start": 39,
        "end": 62,
        "startLoc": {
          "line": 39,
          "column": 3,
          "position": 576
        },
        "endLoc": {
          "line": 62,
          "column": 2,
          "position": 861
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\ActionsBar.tsx",
        "start": 28,
        "end": 51,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 447
        },
        "endLoc": {
          "line": 51,
          "column": 12,
          "position": 732
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "} catch (e: any) {\r\n      message.error(`定位失败: ${e?.message ?? e}`);\r\n    } finally {\r\n      setLoading(null);\r\n    }\r\n  };\r\n\r\n  const onReimport = async () => {\r\n    const path = batch?.vcf_file_path;\r\n    if (!path) return message.warning('没有可导入的VCF路径');\r\n    try",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\SessionActionsBar.tsx",
        "start": 62,
        "end": 72,
        "startLoc": {
          "line": 62,
          "column": 5,
          "position": 861
        },
        "endLoc": {
          "line": 72,
          "column": 4,
          "position": 973
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\ActionsBar.tsx",
        "start": 52,
        "end": 62,
        "startLoc": {
          "line": 52,
          "column": 5,
          "position": 736
        },
        "endLoc": {
          "line": 62,
          "column": 3,
          "position": 848
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "console.warn('标记号码使用失败:', e);\r\n        }\r\n      }\r\n      // 3) 完成会话\r\n      if (sessionId > 0) {\r\n        const status = res.success ? 'success' : 'failed';\r\n        await finishImportSessionRecord(sessionId, status as any, res.importedCount ?? 0, res.failedCount ?? 0, res.success ? undefined : res.message);\r\n      }\r\n      if (res.success) {\r\n        message.success('导入成功');\r\n        // 导入后校验增量",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\SessionActionsBar.tsx",
        "start": 94,
        "end": 104,
        "startLoc": {
          "line": 94,
          "column": 11,
          "position": 1263
        },
        "endLoc": {
          "line": 104,
          "column": 11,
          "position": 1401
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\ActionsBar.tsx",
        "start": 74,
        "end": 84,
        "startLoc": {
          "line": 74,
          "column": 11,
          "position": 1020
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 1158
        }
      }
    },
    {
      "format": "tsx",
      "lines": 44,
      "fragment": "await onActionDone?.({ lastSessionId: sessionId > 0 ? sessionId : undefined });\r\n      } else {\r\n        message.error(`导入失败: ${res.message}`);\r\n      }\r\n    } catch (e: any) {\r\n      message.error(`导入异常: ${e?.message ?? e}`);\r\n    } finally {\r\n      setLoading(null);\r\n    }\r\n  };\r\n\r\n  const onExportCsv = async () => {\r\n    if (!numbers || numbers.items.length === 0) return message.warning('当前没有可导出的号码');\r\n    try {\r\n      setLoading('exportCsv');\r\n      const rows = numbers.items.map(n => ({ id: n.id, phone: n.phone, name: n.name ?? '', source: n.source_file ?? '', created_at: n.created_at }));\r\n      const csv = toCsvWithLabels(rows, ['id', 'phone', 'name', 'source', 'created_at'], ['ID', '号码', '姓名', '来源', '时间']);\r\n      const filename = buildCsvNameFromTemplate(undefined, { prefix: batch ? `numbers-${batch.batch_id}` : 'numbers-view' });\r\n      await invoke('write_file', { path: filename, content: csv });\r\n      await invoke('reveal_in_file_manager', { path: filename });\r\n      message.success(`已导出 CSV 至: ${filename}`);\r\n    } catch (e: any) {\r\n      message.error(`导出失败: ${e?.message ?? e}`);\r\n    } finally {\r\n      setLoading(null);\r\n    }\r\n  };\r\n\r\n  const onExportVcf = async () => {\r\n    if (!numbers || numbers.items.length === 0) return message.warning('当前没有可导出的号码');\r\n    if (!batch) return message.warning('请选择批次以确定 VCF 文件名');\r\n    try {\r\n      setLoading('exportVcf');\r\n      const path = await VcfActions.regenerateVcfForBatch(batch, numbers.items as any);\r\n      await invoke('reveal_in_file_manager', { path });\r\n      message.success(`已导出 VCF 至: ${path}`);\r\n    } catch (e: any) {\r\n      message.error(`导出失败: ${e?.message ?? e}`);\r\n    } finally {\r\n      setLoading(null);\r\n    }\r\n  };\r\n\r\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\SessionActionsBar.tsx",
        "start": 112,
        "end": 155,
        "startLoc": {
          "line": 112,
          "column": 9,
          "position": 1499
        },
        "endLoc": {
          "line": 155,
          "column": 6,
          "position": 2166
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\ActionsBar.tsx",
        "start": 84,
        "end": 127,
        "startLoc": {
          "line": 84,
          "column": 9,
          "position": 1158
        },
        "endLoc": {
          "line": 127,
          "column": 7,
          "position": 1825
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "</Tooltip>\r\n      <Button icon={<ReloadOutlined />} onClick={onRegenerate} loading={loading==='regen'} disabled={mode!=='by-batch'}>\r\n        再生成VCF\r\n      </Button>\r\n      <Button icon={<FolderOpenOutlined />} onClick={onReveal} loading={loading==='reveal'} disabled={!batch?.vcf_file_path}>\r\n        定位VCF\r\n      </Button>\r\n      <Button type=\"primary\" icon={<ImportOutlined />} onClick={onReimport} loading={loading==='import'} disabled={!batch?.vcf_file_path || !deviceId}>\r\n        再导入到设备\r\n      </Button>\r\n      <Tooltip title=\"导出当前号码为 CSV\">\r\n        <Button icon={<FileExcelOutlined />} onClick={onExportCsv} loading={loading==='exportCsv'}>\r\n          导出CSV\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip title=\"导出当前号码为 VCF（按批次命名）\">\r\n        <Button icon={<FileTextOutlined />} onClick={onExportVcf} loading={loading==='exportVcf'} disabled={!batch}>\r\n          导出VCF\r\n        </Button>\r\n      </Tooltip>\r\n      {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\SessionActionsBar.tsx",
        "start": 276,
        "end": 296,
        "startLoc": {
          "line": 276,
          "column": 7,
          "position": 3613
        },
        "endLoc": {
          "line": 296,
          "column": 2,
          "position": 3899
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\components\\ActionsBar.tsx",
        "start": 137,
        "end": 157,
        "startLoc": {
          "line": 137,
          "column": 7,
          "position": 1896
        },
        "endLoc": {
          "line": 157,
          "column": 3,
          "position": 2182
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "const items: any[] = filteredSessions?.items || [];\r\n    const normalizedKeys = selectedSessionKeys\r\n      .map((key) => (typeof key === 'number' ? key : Number(key)))\r\n      .filter((key) => Number.isFinite(key)) as number[];\r\n    const selectedSet = new Set(normalizedKeys);\r\n    const selectedRows = items.filter(row => selectedSet.has(Number(row.id)));\r\n    if (!selectedRows.length) {\r\n      message.warning('请先在列表中勾选要删除的会话');\r\n      return;\r\n    }\r\n\r\n    const total",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\ImportSessionsModal.tsx",
        "start": 223,
        "end": 234,
        "startLoc": {
          "line": 223,
          "column": 5,
          "position": 3145
        },
        "endLoc": {
          "line": 234,
          "column": 6,
          "position": 3320
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\ImportSessionsModal.tsx",
        "start": 162,
        "end": 173,
        "startLoc": {
          "line": 162,
          "column": 5,
          "position": 2375
        },
        "endLoc": {
          "line": 173,
          "column": 11,
          "position": 2550
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</li>\r\n          </ul>\r\n        </div>\r\n      ),\r\n      okButtonProps: { style: { display: 'none' } },\r\n      cancelButtonProps: { style: { display: 'none' } },\r\n      footer: () => (\r\n        <Space style={{ width: '100%', justifyContent: 'flex-end' }}>\r\n          <Button onClick={() => modalRef.destroy()}>取消</Button>\r\n          <Button ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\ImportSessionsModal.tsx",
        "start": 255,
        "end": 264,
        "startLoc": {
          "line": 255,
          "column": 18,
          "position": 3675
        },
        "endLoc": {
          "line": 264,
          "column": 2,
          "position": 3803
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\logic\\ConfirmBulkDeleteDialog.tsx",
        "start": 34,
        "end": 44,
        "startLoc": {
          "line": 34,
          "column": 21,
          "position": 412
        },
        "endLoc": {
          "line": 44,
          "column": 11,
          "position": 540
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "let before: number | null = null;\r\n      if (verifyMode !== 'none') {\r\n        try { before = await ServiceFactory.getDeviceMetricsApplicationService().getContactCount(deviceId); } catch {}\r\n      }\r\n      const outcome = await vcfService.importToDevice(deviceId, batch.vcf_file_path, getImportOptions(scriptKey));\r\n      let ok = !!outcome?.success;\r\n      const importedCount = Number(outcome?.importedCount ?? 0);\r\n      const failedCount = Number(outcome?.failedCount ?? 0);\r\n      let msg = outcome?.message || '';\r\n      let delta: number | undefined = undefined;\r\n      if (verifyMode !== 'none' && before != null) {\r\n        try {\r\n          const after = await ServiceFactory.getDeviceMetricsApplicationService().getContactCount(deviceId);\r\n          delta = after - before;\r\n          if (verifyMode === 'delta-strict' && ok && delta <= 0) {\r\n            ok = false;\r\n            msg = (msg ? `${msg}; ` : '') + `verification failed (delta=${delta})`;\r\n          }\r\n        } catch {}\r\n      }\r\n\r\n      await finishImportSessionRecord(latest",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\services\\sessionImportService.ts",
        "start": 160,
        "end": 181,
        "startLoc": {
          "line": 160,
          "column": 7,
          "position": 1931
        },
        "endLoc": {
          "line": 181,
          "column": 7,
          "position": 2275
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\services\\sessionImportService.ts",
        "start": 77,
        "end": 98,
        "startLoc": {
          "line": 77,
          "column": 9,
          "position": 753
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 1097
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "1;\r\n      }\r\n      detail = { ...detail, success: ok, importedCount, failedCount, message: msg, delta };\r\n    }\r\n  } catch (e: any) {\r\n    const errMsg = e?.message || String(e);\r\n    try { await finishImportSessionRecord(latest",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\services\\sessionImportService.ts",
        "start": 186,
        "end": 192,
        "startLoc": {
          "line": 186,
          "column": 2,
          "position": 2359
        },
        "endLoc": {
          "line": 192,
          "column": 7,
          "position": 2451
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\services\\sessionImportService.ts",
        "start": 104,
        "end": 111,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 1183
        },
        "endLoc": {
          "line": 111,
          "column": 2,
          "position": 1277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(keys: Array<number | string>, chunkSize = 800): Promise<number> {\r\n  // 强制转 number 并过滤无效\r\n  const uniq = Array.from(new Set(keys.map(k => Number(k)).filter(n => Number.isFinite(n)))) as number[];\r\n  if (uniq.length === 0) return 0;\r\n  let total = 0;\r\n  for (let i = 0; i < uniq.length; i += chunkSize) {\r\n    const slice = uniq.slice(i, i + chunkSize);\r\n    // 调用永久删除命令",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\services\\contactNumberService.ts",
        "start": 134,
        "end": 141,
        "startLoc": {
          "line": 134,
          "column": 26,
          "position": 1491
        },
        "endLoc": {
          "line": 141,
          "column": 12,
          "position": 1664
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\services\\contactNumberService.ts",
        "start": 114,
        "end": 121,
        "startLoc": {
          "line": 114,
          "column": 37,
          "position": 1264
        },
        "endLoc": {
          "line": 121,
          "column": 12,
          "position": 1437
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "));\r\n          results.push({ deviceId, success: true });\r\n        } catch (error) {\r\n          results.push({ deviceId, success: false, error });\r\n        }\r\n      }\r\n      \r\n      message.destroy();\r\n      const successCount = results.filter(r => r.success).length;\r\n      const failCount = results.length - successCount;\r\n      \r\n      if (failCount === 0) {\r\n        message.success(`批量导入完成: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\hooks\\useDeviceOperations.ts",
        "start": 143,
        "end": 155,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1318
        },
        "endLoc": {
          "line": 155,
          "column": 10,
          "position": 1459
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\hooks\\useDeviceOperations.ts",
        "start": 109,
        "end": 121,
        "startLoc": {
          "line": 109,
          "column": 4,
          "position": 959
        },
        "endLoc": {
          "line": 121,
          "column": 13,
          "position": 1100
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [page, pageSize, search]);\r\n\r\n  // 加载统计数据\r\n  const loadStats = useCallback(async () => {\r\n    try {\r\n      const statsData = await getContactNumberStats();\r\n      setStats(statsData);\r\n    } catch (error) {\r\n      console.error('加载统计数据失败:', error);\r\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\hooks\\useContactImportState.ts",
        "start": 89,
        "end": 102,
        "startLoc": {
          "line": 89,
          "column": 2,
          "position": 919
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 1040
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\hooks\\useWorkbenchData.ts",
        "start": 79,
        "end": 92,
        "startLoc": {
          "line": 79,
          "column": 2,
          "position": 831
        },
        "endLoc": {
          "line": 92,
          "column": 9,
          "position": 952
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "([]);\r\n    } catch (e) {\r\n      console.error(e);\r\n      const msg = (e as any)?.message || String(e);\r\n      message.error(`删除失败：${msg}`);\r\n    } finally {\r\n      setDeleting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      padding: 'var(--space-2) var(--space-3)',\r\n      background: 'var(--bg-elevated)',\r\n      border: '1px solid var(--border-primary)',\r\n      borderRadius: 'var(--radius-sm)',\r\n      marginBottom: 'var(--space-2)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      flexWrap: 'wrap',\r\n      gap: 'var(--space-2)',\r\n    }}>\r\n      <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\WorkbenchNumbersActionsBar.tsx",
        "start": 101,
        "end": 124,
        "startLoc": {
          "line": 101,
          "column": 17,
          "position": 1095
        },
        "endLoc": {
          "line": 124,
          "column": 2,
          "position": 1263
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\resizable-layout\\NumberPoolPanel.tsx",
        "start": 78,
        "end": 90,
        "startLoc": {
          "line": 78,
          "column": 24,
          "position": 766
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 898
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "description={\r\n            <div>\r\n              <p style={{ marginBottom: '8px' }}>\r\n                确认要<strong style={{ color: 'var(--error)' }}>永久删除</strong> {totalSelected} 条号码记录吗？\r\n              </p>\r\n              <p style={{ \r\n                fontSize: '12px', \r\n                color: 'var(--error)', \r\n                background: 'var(--error-bg)',\r\n                padding: '8px',\r\n                borderRadius: '4px',\r\n                marginTop: '8px'\r\n              }}>\r\n                ⚠️ 此操作不可恢复！记录将从数据库中彻底删除。\r\n              </p>\r\n            </div>\r\n          }\r\n          okText=\"确认删除\"\r\n          cancelText=\"取消\"\r\n          onConfirm={handleDelete}\r\n          disabled={totalSelected === 0}\r\n        >\r\n          <Button\r\n            ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\WorkbenchNumbersActionsBar.tsx",
        "start": 171,
        "end": 194,
        "startLoc": {
          "line": 171,
          "column": 11,
          "position": 1651
        },
        "endLoc": {
          "line": 194,
          "column": 13,
          "position": 1813
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\resizable-layout\\NumberPoolPanel.tsx",
        "start": 147,
        "end": 170,
        "startLoc": {
          "line": 147,
          "column": 15,
          "position": 1306
        },
        "endLoc": {
          "line": 170,
          "column": 17,
          "position": 1468
        }
      }
    },
    {
      "format": "javascript",
      "lines": 27,
      "fragment": "={{ fontSize: 12, lineHeight: 1.6 }}>\r\n          <p>将删除以下 {selectedRecords.length} 个导入记录：</p>\r\n          <ul style={{ paddingLeft: 18, marginBottom: 12 }}>\r\n            {selectedRecords.slice(0, 5).map((record) => (\r\n              <li key={record.id}>\r\n                {record.fileName} ({record.importedNumbers} 个号码)\r\n              </li>\r\n            ))}\r\n            {selectedRecords.length > 5 && (\r\n              <li>... 另外 {selectedRecords.length - 5} 个记录</li>\r\n            )}\r\n          </ul>\r\n          <p style={{ marginBottom: 0 }}>请选择删除方式：</p>\r\n          <ul style={{ paddingLeft: 18, marginBottom: 0 }}>\r\n            <li>\r\n              <strong>直接删除</strong>：仅移除记录，保留号码当前状态。\r\n            </li>\r\n            <li>\r\n              <strong>号码归档</strong>：将相关号码恢复为未导入并释放批次占用。\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ),\r\n      okButtonProps: { style: { display: \"none\" } },\r\n      cancelButtonProps: { style: { display: \"none\" } },\r\n      footer: (_, { OkBtn, CancelBtn }) => (\r\n        <Space style={{ width: \"100%\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 138,
        "end": 164,
        "startLoc": {
          "line": 138,
          "column": 6,
          "position": 1165
        },
        "endLoc": {
          "line": 164,
          "column": 7,
          "position": 1527
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\logic\\ConfirmBulkDeleteDialog.tsx",
        "start": 19,
        "end": 41,
        "startLoc": {
          "line": 19,
          "column": 6,
          "position": 162
        },
        "endLoc": {
          "line": 41,
          "column": 7,
          "position": 501
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "={\r\n        <Space>\r\n          <FileTextOutlined />\r\n          <span>TXT导入记录管理</span>\r\n        </Space>\r\n      }\r\n      open={visible}\r\n      onCancel={onClose}\r\n      width={900}\r\n      footer={[\r\n        <Button key=\"refresh\" icon={<ReloadOutlined />} onClick={loadRecords}>\r\n          刷新\r\n        </Button>,\r\n        <Button key=\"close\" onClick={onClose}>\r\n          关闭\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Space direction=\"vertical\" style={{ width: \"100%\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 384,
        "end": 402,
        "startLoc": {
          "line": 384,
          "column": 6,
          "position": 3368
        },
        "endLoc": {
          "line": 402,
          "column": 7,
          "position": 3492
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\TxtImportRecordsModal.tsx",
        "start": 52,
        "end": 70,
        "startLoc": {
          "line": 52,
          "column": 6,
          "position": 418
        },
        "endLoc": {
          "line": 70,
          "column": 7,
          "position": 542
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "const [records, setRecords] = useState<TxtImportRecordDto[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\r\n  const [bulkDeleting, setBulkDeleting] = useState(false);\r\n\r\n  // 分页设置",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 55,
        "end": 61,
        "startLoc": {
          "line": 55,
          "column": 3,
          "position": 327
        },
        "endLoc": {
          "line": 61,
          "column": 8,
          "position": 438
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\hooks\\useTxtImportRecords.tsx",
        "start": 23,
        "end": 29,
        "startLoc": {
          "line": 23,
          "column": 3,
          "position": 212
        },
        "endLoc": {
          "line": 29,
          "column": 6,
          "position": 323
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ");\r\n      return;\r\n    }\r\n\r\n    const recordIds = selectedRowKeys\r\n      .map((key) => Number(key))\r\n      .filter((id) => !isNaN(id));\r\n    const selectedRecords = records.filter((r) => recordIds.includes(r.id));\r\n\r\n    Modal",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 125,
        "end": 134,
        "startLoc": {
          "line": 125,
          "column": 12,
          "position": 1034
        },
        "endLoc": {
          "line": 134,
          "column": 6,
          "position": 1127
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\hooks\\useTxtImportActions.tsx",
        "start": 78,
        "end": 85,
        "startLoc": {
          "line": 78,
          "column": 12,
          "position": 837
        },
        "endLoc": {
          "line": 85,
          "column": 24,
          "position": 924
        }
      }
    },
    {
      "format": "tsx",
      "lines": 28,
      "fragment": "Modal.confirm({\r\n      title: `批量删除确认`,\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: (\r\n        <div style={{ fontSize: 12, lineHeight: 1.6 }}>\r\n          <p>将删除以下 {selectedRecords.length} 个导入记录：</p>\r\n          <ul style={{ paddingLeft: 18, marginBottom: 12 }}>\r\n            {selectedRecords.slice(0, 5).map((record) => (\r\n              <li key={record.id}>\r\n                {record.fileName} ({record.importedNumbers} 个号码)\r\n              </li>\r\n            ))}\r\n            {selectedRecords.length > 5 && (\r\n              <li>... 另外 {selectedRecords.length - 5} 个记录</li>\r\n            )}\r\n          </ul>\r\n          <p style={{ marginBottom: 0 }}>请选择删除方式：</p>\r\n          <ul style={{ paddingLeft: 18, marginBottom: 0 }}>\r\n            <li>\r\n              <strong>直接删除</strong>：仅移除记录，保留号码当前状态。\r\n            </li>\r\n            <li>\r\n              <strong>号码归档</strong>：将相关号码恢复为未导入并释放批次占用。\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ),\r\n      okButtonProps: { style: { display: \"none\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 134,
        "end": 161,
        "startLoc": {
          "line": 134,
          "column": 5,
          "position": 1127
        },
        "endLoc": {
          "line": 161,
          "column": 7,
          "position": 1463
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\logic\\ConfirmBulkDeleteDialog.tsx",
        "start": 15,
        "end": 38,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 124
        },
        "endLoc": {
          "line": 38,
          "column": 7,
          "position": 448
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "(true);\r\n      const recordIds = selectedRowKeys\r\n        .map((key) => Number(key))\r\n        .filter((id) => !isNaN(id));\r\n      const result = await bulkDeleteTxtImportRecords(\r\n        recordIds,\r\n        archiveNumbers\r\n      );\r\n\r\n      const actionText = archiveNumbers ? \"归档并删除\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 191,
        "end": 200,
        "startLoc": {
          "line": 191,
          "column": 16,
          "position": 1708
        },
        "endLoc": {
          "line": 200,
          "column": 8,
          "position": 1800
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\hooks\\useTxtImportActions.tsx",
        "start": 49,
        "end": 53,
        "startLoc": {
          "line": 49,
          "column": 2,
          "position": 492
        },
        "endLoc": {
          "line": 53,
          "column": 8,
          "position": 570
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ";\r\n\r\n      if (result.succeeded > 0) {\r\n        message.success(\r\n          `已${actionText} ${result.succeeded} 个记录${archiveInfo}`\r\n        );\r\n      }\r\n\r\n      if (result.failed.length > 0) {\r\n        message.error(`${result.failed.length} 个记录删除失败`);\r\n      }\r\n\r\n      setSelectedRowKeys([]);\r\n      await loadRecords();\r\n      onDataRefresh?.();\r\n    } catch (error) {\r\n      console.error(\"批量删除失败:\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 204,
        "end": 220,
        "startLoc": {
          "line": 204,
          "column": 3,
          "position": 1846
        },
        "endLoc": {
          "line": 220,
          "column": 10,
          "position": 1989
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\hooks\\useTxtImportActions.tsx",
        "start": 56,
        "end": 69,
        "startLoc": {
          "line": 56,
          "column": 3,
          "position": 614
        },
        "endLoc": {
          "line": 69,
          "column": 10,
          "position": 749
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "</div>\r\n\r\n        {/* 说明信息 */}\r\n        <Alert\r\n          type=\"info\"\r\n          showIcon\r\n          message=\"导入记录说明\"\r\n          description={\r\n            <div style={{ fontSize: \"12px\" }}>\r\n              <p style={{ marginBottom: 4 }}>\r\n                • <strong>直接删除</strong>：仅移除导入记录，保留号码当前状态\r\n              </p>\r\n              <p style={{ marginBottom: 0 }}>\r\n                • <strong>归档删除</strong>\r\n                ：删除记录同时将相关号码重置为\"未导入\"状态，释放批次占用\r\n              </p>\r\n            </div>\r\n          }\r\n        />\r\n\r\n        {/* 数据表格 */}\r\n        <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\TxtImportRecordsManager.tsx",
        "start": 447,
        "end": 468,
        "startLoc": {
          "line": 447,
          "column": 9,
          "position": 3817
        },
        "endLoc": {
          "line": 468,
          "column": 2,
          "position": 3970
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\txt-import\\TxtImportRecordsModal.tsx",
        "start": 109,
        "end": 129,
        "startLoc": {
          "line": 109,
          "column": 9,
          "position": 878
        },
        "endLoc": {
          "line": 129,
          "column": 2,
          "position": 1028
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "{\r\n  value?: Record<string, Omit<DeviceAssignmentRow, 'deviceId' | 'deviceName'>>;\r\n  onChange?: (value: Record<string, Omit<DeviceAssignmentRow, 'deviceId' | 'deviceName'>>) => void;\r\n  industries?: string[];\r\n  conflictingDeviceIds?: string[];\r\n  conflictPeersByDevice?: Record<string, Array<{ peerId: string; start: number; end: number }>>;\r\n  onJumpToDevice?: (deviceId: string) => void;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\DeviceAssignmentTable.tsx",
        "start": 21,
        "end": 28,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 202
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 338
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\DeviceAssignmentGrid\\DeviceAssignmentGrid.tsx",
        "start": 22,
        "end": 29,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 267
        },
        "endLoc": {
          "line": 29,
          "column": 14,
          "position": 404
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "},\r\n    {\r\n    numbers: { limit: numbersPage.pageSize, offset: (numbersPage.page - 1) * numbersPage.pageSize },\r\n    sessions: { limit: sessionsPage.pageSize, offset: (sessionsPage.page - 1) * sessionsPage.pageSize },\r\n    }\r\n  );\r\n\r\n  // 批量操作回调",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\BatchManagerDrawer.tsx",
        "start": 41,
        "end": 48,
        "startLoc": {
          "line": 41,
          "column": 5,
          "position": 553
        },
        "endLoc": {
          "line": 48,
          "column": 10,
          "position": 647
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\ImportSessionsModal.tsx",
        "start": 54,
        "end": 61,
        "startLoc": {
          "line": 54,
          "column": 2,
          "position": 777
        },
        "endLoc": {
          "line": 61,
          "column": 25,
          "position": 871
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "<NumbersTable\r\n                  data={numbers}\r\n                  loading={loading}\r\n                  pagination={{\r\n                    current: numbersPage.page,\r\n                    pageSize: numbersPage.pageSize,\r\n                    total: numbers?.total || 0,\r\n                    onChange: (page, pageSize) => setNumbersPage({ page, pageSize }),\r\n                  }}\r\n                  onRefresh={reload}\r\n                  controlledFilters={{\r\n                    status: numbersFilters.status ?? null,\r\n                    industry: numbersFilters.industry ?? null,\r\n                    onChange: setNumbersFilters,\r\n                  }}\r\n                  selection",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\batch-manager\\BatchManagerDrawer.tsx",
        "start": 91,
        "end": 106,
        "startLoc": {
          "line": 91,
          "column": 17,
          "position": 1070
        },
        "endLoc": {
          "line": 106,
          "column": 10,
          "position": 1223
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\sessions\\ImportSessionsModal.tsx",
        "start": 343,
        "end": 358,
        "startLoc": {
          "line": 343,
          "column": 17,
          "position": 4564
        },
        "endLoc": {
          "line": 358,
          "column": 2,
          "position": 4717
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const [currentStep, setCurrentStep] = useState(0);\r\n  const [selectedStrategy, setSelectedStrategy] = useState<ImportStrategy | undefined>();\r\n  const [importResult, setImportResult] = useState<ImportResult | undefined>();\r\n  const [isImporting, setIsImporting] = useState(false);\r\n  const [enableVerification, setEnableVerification] = useState(true);\r\n  const [verificationPhones, setVerificationPhones] = useState<string>('');\r\n  const [form] = Form.useForm();\r\n\r\n  const { selectedDevice",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\import-strategies\\ui\\ImportStrategyDialog.tsx",
        "start": 32,
        "end": 40,
        "startLoc": {
          "line": 32,
          "column": 3,
          "position": 304
        },
        "endLoc": {
          "line": 40,
          "column": 15,
          "position": 456
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\DeviceAssignmentGrid\\components\\DeviceSpecificImportDialog.tsx",
        "start": 59,
        "end": 67,
        "startLoc": {
          "line": 59,
          "column": 3,
          "position": 402
        },
        "endLoc": {
          "line": 67,
          "column": 8,
          "position": 554
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "]);\r\n\r\n  const handleNext = () => {\r\n    if (currentStep === 0 && !selectedStrategy) {\r\n      message.error('请选择一个导入策略');\r\n      return;\r\n    }\r\n    setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  const handleStartImport = async () => {\r\n    if (!selectedStrategy || !effectiveDevice",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\import-strategies\\ui\\ImportStrategyDialog.tsx",
        "start": 87,
        "end": 102,
        "startLoc": {
          "line": 87,
          "column": 13,
          "position": 896
        },
        "endLoc": {
          "line": 102,
          "column": 16,
          "position": 1036
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\DeviceAssignmentGrid\\components\\DeviceSpecificImportDialog.tsx",
        "start": 98,
        "end": 113,
        "startLoc": {
          "line": 98,
          "column": 22,
          "position": 868
        },
        "endLoc": {
          "line": 113,
          "column": 15,
          "position": 1008
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": ");\r\n\r\n    } catch (error) {\r\n      console.error('导入过程出错:', error);\r\n      message.error('导入过程出错');\r\n      \r\n      setImportResult({\r\n        success: false,\r\n        importedCount: 0,\r\n        failedCount: 1,\r\n        strategy: selectedStrategy,\r\n        errorMessage: error instanceof Error ? error.message : '未知错误'\r\n      });\r\n      setCurrentStep(2);\r\n    } finally {\r\n      setIsImporting(false);\r\n    }\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setCurrentStep(1);\r\n    setImportResult(undefined);\r\n  };\r\n\r\n  const getStepContent",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\import-strategies\\ui\\ImportStrategyDialog.tsx",
        "start": 140,
        "end": 164,
        "startLoc": {
          "line": 140,
          "column": 3,
          "position": 1326
        },
        "endLoc": {
          "line": 164,
          "column": 15,
          "position": 1510
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\DeviceAssignmentGrid\\components\\DeviceSpecificImportDialog.tsx",
        "start": 162,
        "end": 186,
        "startLoc": {
          "line": 162,
          "column": 15,
          "position": 1398
        },
        "endLoc": {
          "line": 186,
          "column": 18,
          "position": 1582
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "switch (currentStep) {\r\n      case 0:\r\n        return [\r\n          <Button key=\"cancel\" onClick={onClose}>\r\n            取消\r\n          </Button>,\r\n          <Button \r\n            key=\"next\" \r\n            type=\"primary\" \r\n            onClick={handleNext}\r\n            disabled={!selectedStrategy}\r\n          >\r\n            下一步\r\n          </Button>\r\n        ];\r\n\r\n      case 1:\r\n        return [",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\import-strategies\\ui\\ImportStrategyDialog.tsx",
        "start": 272,
        "end": 289,
        "startLoc": {
          "line": 272,
          "column": 5,
          "position": 2403
        },
        "endLoc": {
          "line": 289,
          "column": 2,
          "position": 2513
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\DeviceAssignmentGrid\\components\\DeviceSpecificImportDialog.tsx",
        "start": 265,
        "end": 282,
        "startLoc": {
          "line": 265,
          "column": 5,
          "position": 2215
        },
        "endLoc": {
          "line": 282,
          "column": 12,
          "position": 2325
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\"[^>]*>`;\r\n    \r\n    let nodeMatch = xmlContent.match(new RegExp(nodePattern, 'i'));\r\n    if (!nodeMatch) {\r\n      nodeMatch = xmlContent.match(new RegExp(altNodePattern, 'i'));\r\n    }\r\n    \r\n    if (!nodeMatch) {\r\n      console.log(`❌ AppSelector: 未找到匹配的节点`",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\automation\\detectors\\AppSelectorDetector.ts",
        "start": 71,
        "end": 79,
        "startLoc": {
          "line": 71,
          "column": 13,
          "position": 502
        },
        "endLoc": {
          "line": 79,
          "column": 26,
          "position": 588
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\automation\\detectors\\VCardConfirmDetector.ts",
        "start": 90,
        "end": 98,
        "startLoc": {
          "line": 90,
          "column": 16,
          "position": 616
        },
        "endLoc": {
          "line": 98,
          "column": 27,
          "position": 702
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "${fullNode.substring(0, 100)}...`);\r\n    \r\n    // 第二步：从找到的节点中提取各个属性\r\n    const boundsMatch = fullNode.match(/bounds=\"([^\"]*)\"/i);\r\n    const classMatch = fullNode.match(/class=\"([^\"]*)\"/i);\r\n    const clickableMatch = fullNode.match(/clickable=\"([^\"]*)\"/i);\r\n    \r\n    if (!boundsMatch) {\r\n      console.log(`❌ AppSelector: 未找到bounds属性`",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\automation\\detectors\\AppSelectorDetector.ts",
        "start": 84,
        "end": 92,
        "startLoc": {
          "line": 84,
          "column": 23,
          "position": 626
        },
        "endLoc": {
          "line": 92,
          "column": 29,
          "position": 714
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\automation\\detectors\\VCardConfirmDetector.ts",
        "start": 103,
        "end": 111,
        "startLoc": {
          "line": 103,
          "column": 24,
          "position": 740
        },
        "endLoc": {
          "line": 111,
          "column": 30,
          "position": 828
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "\">\r\n              <Statistic\r\n                title=\"命中率\"\r\n                value={generationHitRate}\r\n                precision={1}\r\n                suffix=\"%\"\r\n                valueStyle={{ \r\n                  color: getHitRateStatus(generationHitRate) === 'success' ? '#3f8600' : \r\n                         getHitRateStatus(generationHitRate) === 'normal' ? '#cf1322' : '#722ed1'\r\n                }}\r\n              />\r\n              <Progress \r\n                percent={generationHitRate} \r\n                status={getHitRateStatus(generationHitRate)}\r\n                size=\"small\"\r\n                style={{ marginTop: 8 }}\r\n              />\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"secondary\">\r\n                  命中: {performanceData.generationHits",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\xpath-monitor\\XPathPerformanceMonitor.tsx",
        "start": 180,
        "end": 199,
        "startLoc": {
          "line": 180,
          "column": 5,
          "position": 1561
        },
        "endLoc": {
          "line": 199,
          "column": 15,
          "position": 1715
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\xpath-monitor\\XPathPerformanceMonitor.tsx",
        "start": 153,
        "end": 172,
        "startLoc": {
          "line": 153,
          "column": 5,
          "position": 1329
        },
        "endLoc": {
          "line": 172,
          "column": 15,
          "position": 1483
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "|| '';\r\n  if (className.includes('Button')) return '按钮';\r\n  if (className.includes('TextView')) return '文本';\r\n  if (className.includes('ImageView')) return '图片';\r\n  if (className.includes('EditText')) return '输入框';\r\n  if (className.includes('RecyclerView')) return '列表';\r\n  if (className.includes('ViewPager')) return '滑动页面';\r\n  if (className.includes('Tab')) return '标签页';\r\n  \r\n  return '未知元素';\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils.ts",
        "start": 89,
        "end": 99,
        "startLoc": {
          "line": 89,
          "column": 2,
          "position": 807
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 949
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils\\categorization.ts",
        "start": 10,
        "end": 21,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 102
        },
        "endLoc": {
          "line": 21,
          "column": 7,
          "position": 246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "elements.reduce((acc, element) => {\r\n      if (!acc[element.type]) {\r\n        acc[element.type] = [];\r\n      }\r\n      acc[element.type].push(element);\r\n      return acc;\r\n    }, {} as Record<string, VisualUIElement[]>)\r\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\list-view\\utils.ts",
        "start": 214,
        "end": 221,
        "startLoc": {
          "line": 214,
          "column": 2,
          "position": 1809
        },
        "endLoc": {
          "line": 221,
          "column": 2,
          "position": 1904
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils.ts",
        "start": 199,
        "end": 205,
        "startLoc": {
          "line": 199,
          "column": 2,
          "position": 2203
        },
        "endLoc": {
          "line": 205,
          "column": 2,
          "position": 2295
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "| null = null;\r\n  let tag = '*';\r\n  let attr: string | null = null;\r\n  let val: string | null = null;\r\n  let m: RegExpMatchArray | null = null;\r\n  if ((m = xp.match(equalRe))) {\r\n    mode = 'equal'; tag = m[1]; attr = m[2] || null; val = (m[4] ?? null) as any;\r\n  } else if ((m = xp.match(containsAttrRe))) {\r\n    mode = 'containsAttr'; tag = m[1]; attr = m[2]; val = m[4];\r\n  } else if ((m = xp.match(textEqualRe))) {\r\n    mode = 'textEqual'; tag = m[1]; val = m[3];\r\n  } else if ((m = xp.match(textContainsRe))) {\r\n    mode = 'textContains'; tag = m[1]; val = m[3];\r\n  } else {\r\n    return [",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\utils.ts",
        "start": 219,
        "end": 233,
        "startLoc": {
          "line": 219,
          "column": 2,
          "position": 3305
        },
        "endLoc": {
          "line": 233,
          "column": 2,
          "position": 3638
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\utils.ts",
        "start": 160,
        "end": 185,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 2402
        },
        "endLoc": {
          "line": 185,
          "column": 5,
          "position": 2757
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": UiNode[] = [];\r\n  const lowerVal = (val || '').toLowerCase();\r\n  while (stk.length) {\r\n    const n = stk.pop()!;\r\n    const tagOk = tag === '*' || n.tag === tag;\r\n    let predOk = true;\r\n    if (mode === 'equal' && attr) predOk",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\utils.ts",
        "start": 237,
        "end": 243,
        "startLoc": {
          "line": 237,
          "column": 4,
          "position": 3671
        },
        "endLoc": {
          "line": 243,
          "column": 7,
          "position": 3784
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\utils.ts",
        "start": 189,
        "end": 196,
        "startLoc": {
          "line": 189,
          "column": 5,
          "position": 2789
        },
        "endLoc": {
          "line": 196,
          "column": 2,
          "position": 2904
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      <div className={styles.cardBody} style={{ maxHeight: 240, overflow: 'auto' }} ref={listRef}>\r\n        {matches.length === 0 ? (\r\n          <div className=\"text-sm text-neutral-500\">无匹配结果</div>\r\n        ) : (\r\n          <ul className=\"space-y-1\">\r\n            {matches.map((n, i) => (\r\n              <li key={i} data-match-item={i} onMouseEnter={() => onHoverNode?.(n)} onMouseLeave={() => onHoverNode?.(null)}>\r\n                <button\r\n                  className={`w-full text-left px-2 py-1 rounded-md border ${n",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\MatchResultsPanel.tsx",
        "start": 271,
        "end": 284,
        "startLoc": {
          "line": 271,
          "column": 20,
          "position": 2965
        },
        "endLoc": {
          "line": 284,
          "column": 2,
          "position": 3146
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\XPathTestResultsPanel.tsx",
        "start": 33,
        "end": 42,
        "startLoc": {
          "line": 33,
          "column": 11,
          "position": 408
        },
        "endLoc": {
          "line": 42,
          "column": 14,
          "position": 587
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ".replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), caseSensitive ? 'g' : 'ig');\r\n    const parts = text.split(re);\r\n    const matches = text.match(re) || [];\r\n    const res: React.ReactNode[] = [];\r\n    parts.forEach((p, i) => {\r\n      res.push(p);\r\n      if (i < matches.length) res.push(<span key={i} className={styles.mark}>{matches[i]}</span>);\r\n    });\r\n    return <>{res}</>;\r\n  } catch {\r\n    return text;\r\n  }\r\n};\r\n\r\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\MatchResultsPanel.tsx",
        "start": 52,
        "end": 66,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 617
        },
        "endLoc": {
          "line": 66,
          "column": 7,
          "position": 815
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\TreeRow.tsx",
        "start": 64,
        "end": 76,
        "startLoc": {
          "line": 64,
          "column": 3,
          "position": 660
        },
        "endLoc": {
          "line": 76,
          "column": 6,
          "position": 856
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": " />\r\n                  </div>\r\n                  <div className=\"text-xs text-neutral-500 truncate\">\r\n                    {(n.attrs['resource-id'] && `id:${n.attrs['resource-id'].split('/').pop()}`) || n.attrs['class'] || n.tag}\r\n                  </div>\r\n                </button>\r\n                <div className=\"mt-1 flex items-center gap-2\">\r\n                  <CopyChip text={buildXPath(n)} label=\"复制 XPath\" />\r\n                  {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\MatchResultsPanel.tsx",
        "start": 290,
        "end": 298,
        "startLoc": {
          "line": 290,
          "column": 2,
          "position": 3271
        },
        "endLoc": {
          "line": 298,
          "column": 2,
          "position": 3390
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\XPathTestResultsPanel.tsx",
        "start": 48,
        "end": 56,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 682
        },
        "endLoc": {
          "line": 56,
          "column": 3,
          "position": 801
        }
      }
    },
    {
      "format": "javascript",
      "lines": 8,
      "fragment": "}\r\n            selected={selected}\r\n            onApplyXPath={(xp) => {\r\n              setXPathInput(xp);\r\n              setTimeout(() => locateXPath(), 0);\r\n            }}\r\n            onInsertOnly={(xp) => setXPathInput(xp)}\r\n            xpathTestNodes={xpathTestNodes",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 843,
        "end": 850,
        "startLoc": {
          "line": 843,
          "column": 16,
          "position": 7279
        },
        "endLoc": {
          "line": 850,
          "column": 15,
          "position": 7341
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 788,
        "end": 821,
        "startLoc": {
          "line": 788,
          "column": 2,
          "position": 6846
        },
        "endLoc": {
          "line": 821,
          "column": 5,
          "position": 7112
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "}\r\n          />\r\n          <XPathTemplatesPanel\r\n            node={selected}\r\n            onApply={(xp) => {\r\n              setXPathInput(xp);\r\n              setTimeout(() => locateXPath(), 0);\r\n            }}\r\n            onInsert={(xp) => setXPathInput(xp)}\r\n          />\r\n          <FieldDocPanel />\r\n          <XPathHelpPanel />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 857,
        "end": 872,
        "startLoc": {
          "line": 857,
          "column": 14,
          "position": 7399
        },
        "endLoc": {
          "line": 872,
          "column": 7,
          "position": 7503
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 788,
        "end": 821,
        "startLoc": {
          "line": 788,
          "column": 2,
          "position": 6846
        },
        "endLoc": {
          "line": 821,
          "column": 5,
          "position": 7112
        }
      }
    },
    {
      "format": "tsx",
      "lines": 34,
      "fragment": ">\r\n              导出当前 XML\r\n            </button>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"relative\">\r\n              <input\r\n                list=\"grid-search-history\"\r\n                value={filter}\r\n                onChange={(e) => setFilter(e.target.value)}\r\n                placeholder=\"搜索：resource-id/text/content-desc/class\"\r\n                className={styles.input}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    locateFirstMatch();\r\n                    addSearchHistory(filter);\r\n                    setSearchHistory(getSearchHistory());\r\n                  }\r\n                }}\r\n                ref={searchRef}\r\n              />\r\n              <datalist id=\"grid-search-history\">\r\n                {favSearch.map((s, i) => (\r\n                  <option key={`fav-${i}`} value={s} />\r\n                ))}\r\n                {searchHistory\r\n                  .filter((s) => !favSearch.includes(s))\r\n                  .map((s, i) => (\r\n                    <option key={`h-${i}`} value={s} />\r\n                  ))}\r\n              </datalist>\r\n            </div>\r\n            <button\r\n              ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 432,
        "end": 465,
        "startLoc": {
          "line": 432,
          "column": 13,
          "position": 3960
        },
        "endLoc": {
          "line": 465,
          "column": 15,
          "position": 4281
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\components\\Toolbar.tsx",
        "start": 126,
        "end": 160,
        "startLoc": {
          "line": 126,
          "column": 11,
          "position": 876
        },
        "endLoc": {
          "line": 160,
          "column": 13,
          "position": 1199
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "async () => {\r\n                try {\r\n                  const txt = await navigator.clipboard.readText();\r\n                  if (txt && txt.trim()) {\r\n                    setXmlText(txt);\r\n                  } else {\r\n                    alert(\"剪贴板为空\");\r\n                  }\r\n                } catch (err) {\r\n                  alert(\"无法读取剪贴板，请检查浏览器/应用权限\");\r\n                }\r\n              }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 486,
        "end": 497,
        "startLoc": {
          "line": 486,
          "column": 2,
          "position": 4434
        },
        "endLoc": {
          "line": 497,
          "column": 2,
          "position": 4541
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\components\\Toolbar.tsx",
        "start": 83,
        "end": 94,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 513
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 620
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "setPanelHighlightNode = (node: UiNode | null) =>\r\n    panelSync.setHighlightNode(node, { refresh: true });\r\n  setPanelActivateTab = (tab: \"results\" | \"xpath\") =>\r\n    panelSync.setPanelActivateTab(tab);\r\n  setPanelActivateKey = (_: any) => panelSync.triggerPanelRefresh();\r\n\r\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.refactored.tsx",
        "start": 101,
        "end": 107,
        "startLoc": {
          "line": 101,
          "column": 3,
          "position": 598
        },
        "endLoc": {
          "line": 107,
          "column": 6,
          "position": 690
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 242,
        "end": 247,
        "startLoc": {
          "line": 242,
          "column": 3,
          "position": 2176
        },
        "endLoc": {
          "line": 247,
          "column": 20,
          "position": 2266
        }
      }
    },
    {
      "format": "tsx",
      "lines": 50,
      "fragment": "// 兼容旧 onParse 调用点（按钮） -> 调用 parse\r\n  const onParse = (xmlToUse?: string) => parse(xmlToUse);\r\n\r\n  // 真机匹配回调：根据返回的 xpath 或 bounds 在当前树中选中并高亮\r\n  const handleMatchedFromDevice = (payload: {\r\n    preview?: { xpath?: string; bounds?: string } | null;\r\n  }) => {\r\n    if (!root) return;\r\n    const xp = payload.preview?.xpath?.trim();\r\n    const bd = payload.preview?.bounds?.trim();\r\n    let target: UiNode | null = null;\r\n    if (xp) {\r\n      target = findByXPathRoot(root, xp) || findByPredicateXPath(root, xp);\r\n    }\r\n    if (!target && bd) {\r\n      const pb = parseBounds(bd);\r\n      if (pb) {\r\n        const stack: UiNode[] = [root];\r\n        while (stack.length && !target) {\r\n          const n = stack.pop()!;\r\n          const nb = parseBounds(n.attrs[\"bounds\"] || \"\");\r\n          if (\r\n            nb &&\r\n            nb.x1 === pb.x1 &&\r\n            nb.y1 === pb.y1 &&\r\n            nb.x2 === pb.x2 &&\r\n            nb.y2 === pb.y2\r\n          ) {\r\n            target = n;\r\n            break;\r\n          }\r\n          for (let i = n.children.length - 1; i >= 0; i--)\r\n            stack.push(n.children[i]);\r\n        }\r\n      }\r\n    }\r\n    if (target) {\r\n      setSelected(target);\r\n      panelSync.setHighlightNode(target, {\r\n        refresh: true,\r\n        switchToResults: true,\r\n      });\r\n    } else {\r\n      alert(\r\n        \"匹配成功，但未能在当前XML树中定位对应节点（可能界面已变化或XPath不兼容）。\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.refactored.tsx",
        "start": 109,
        "end": 158,
        "startLoc": {
          "line": 109,
          "column": 3,
          "position": 713
        },
        "endLoc": {
          "line": 158,
          "column": 7,
          "position": 1256
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 320,
        "end": 369,
        "startLoc": {
          "line": 320,
          "column": 3,
          "position": 2999
        },
        "endLoc": {
          "line": 369,
          "column": 6,
          "position": 3542
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "} />\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onToggle(step.id)}\r\n              style={{ fontSize: 12, padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}\r\n            >\r\n              {disabled ? '启用' : '禁用'}\r\n            </button>\r\n          </div>\r\n        }\r\n        style={{ touchAction: 'none' }}\r\n        bodyStyle={{ padding: 8 }}\r\n      >\r\n        <div style={{ fontSize: 12, color: '#555', lineHeight: 1.4 }}>\r\n          {step.description || <span style={{ fontStyle: 'italic', color: '#999' }}>(无描述)</span>}\r\n        </div>\r\n        <div style={{ marginTop: 6, display: 'flex', gap: 6, flexWrap: 'wrap', fontSize: 10, color: '#888' }}>\r\n          <span style={{ background: '#f5f5f5', padding: '2px 4px', borderRadius: 4 }}>{step.step_type}</span>\r\n          {step.parent_loop_id && (\r\n            <span style={{ background: '#e6f0ff', color: '#1d64c2', padding: '2px 4px', borderRadius: 4 }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItem.tsx",
        "start": 51,
        "end": 71,
        "startLoc": {
          "line": 51,
          "column": 9,
          "position": 592
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 912
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItemBase.tsx",
        "start": 49,
        "end": 69,
        "startLoc": {
          "line": 49,
          "column": 8,
          "position": 582
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 904
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "currentDeviceId?: string;\r\n  devices?: any[];\r\n  onEdit?: (step: StepItemData) => void;\r\n  onDelete?: (id: string) => void;\r\n  onBatchMatch?: (id: string) => void;\r\n  onUpdateStepParameters?: (id: string, nextParams: any) => void;\r\n  StepTestButton?: React.ComponentType<{ step: StepItemData; deviceId?: string; disabled?: boolean }>;\r\n  ENABLE_BATCH_MATCH?: boolean;\r\n  onEditStepParams?: (step: StepItemData) => void;\r\n}\r\n\r\nexport const StepItem: React.FC<StepItemProps> = ({ step, draggingStyle, onToggle, StepTestButton, currentDeviceId }) => {\r\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItem.tsx",
        "start": 25,
        "end": 37,
        "startLoc": {
          "line": 25,
          "column": 3,
          "position": 171
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 377
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItemBase.tsx",
        "start": 24,
        "end": 36,
        "startLoc": {
          "line": 24,
          "column": 3,
          "position": 165
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 371
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "&& <span style={{ fontSize: 10, color: '#999' }}>(已禁用)</span>}\r\n          </div>\r\n        }\r\n        extra={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            {StepTestButton && (\r\n              <StepTestButton step={step} deviceId={currentDeviceId} disabled={disabled} />\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onToggle(step.id)}\r\n              style={{ fontSize: 12, padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}\r\n            >\r\n              {disabled",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItem.tsx",
        "start": 45,
        "end": 58,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 488
        },
        "endLoc": {
          "line": 58,
          "column": 9,
          "position": 660
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItemBase.tsx",
        "start": 43,
        "end": 56,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 475
        },
        "endLoc": {
          "line": 56,
          "column": 5,
          "position": 650
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "}\r\n            </button>\r\n          </div>\r\n        }\r\n        style={{ touchAction: 'none' }}\r\n        bodyStyle={{ padding: 8 }}\r\n      >\r\n        <div style={{ fontSize: 12, color: '#555', lineHeight: 1.4 }}>\r\n          {step.description || <span style={{ fontStyle: 'italic', color: '#999' }}>(无描述)</span>}\r\n        </div>\r\n        <div style={{ marginTop: 6, display: 'flex', gap: 6, flexWrap: 'wrap', fontSize: 10, color: '#888' }}>\r\n          <span style={{ background: '#f5f5f5', padding: '2px 4px', borderRadius: 4 }}>{step.step_type}</span>\r\n          {step.parent_loop_id && (\r\n            <span style={{ background: '#e6f0ff', color: '#1d64c2', padding: '2px 4px', borderRadius: 4 }}>loop:{step.parent_loop_id}</span>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepItem;",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItem.tsx",
        "start": 58,
        "end": 79,
        "startLoc": {
          "line": 58,
          "column": 5,
          "position": 669
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 965
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItemBase.tsx",
        "start": 56,
        "end": 77,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 661
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 957
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": "={draggingStyle}>\r\n      <Card\r\n        size=\"small\"\r\n        title={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            <span style={disabled ? { textDecoration: 'line-through', opacity: 0.55 } : undefined}>{step.name}</span>\r\n            {disabled && <span style={{ fontSize: 10, color: '#999' }}>(已禁用)</span>}\r\n          </div>\r\n        }\r\n        extra={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            {StepTestButton && (\r\n              <StepTestButton step={step} deviceId={currentDeviceId} disabled={disabled} />\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onToggle(step.id)}\r\n              style={{ fontSize: 12, padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}\r\n            >\r\n              {disabled ? '启用' : '禁用'}\r\n            </button>\r\n          </div>\r\n        }\r\n        style={{ touchAction: 'none' }}\r\n        bodyStyle={{ padding: 8 }}\r\n      >\r\n        <div style={{ fontSize: 12, color: '#555', lineHeight: 1.4 }}>\r\n          {step.description || <span style={{ fontStyle: 'italic', color: '#999' }}>(无描述)</span>}\r\n        </div>\r\n        <div style={{ marginTop: 6, display: 'flex', gap: 6, flexWrap: 'wrap', fontSize: 10, color: '#888' }}>\r\n          <span style={{ background: '#f5f5f5', padding: '2px 4px', borderRadius: 4 }}>{step.step_type}</span>\r\n          {step.parent_loop_id && (\r\n            <span style={{ background: '#e6f0ff', color: '#1d64c2', padding: '2px 4px', borderRadius: 4 }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\ScriptStepItemStable.tsx",
        "start": 31,
        "end": 63,
        "startLoc": {
          "line": 31,
          "column": 6,
          "position": 279
        },
        "endLoc": {
          "line": 63,
          "column": 2,
          "position": 790
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItem.tsx",
        "start": 39,
        "end": 69,
        "startLoc": {
          "line": 39,
          "column": 6,
          "position": 401
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 904
        }
      }
    },
    {
      "format": "tsx",
      "lines": 44,
      "fragment": "> = ({ step, draggingStyle, onToggle, StepTestButton, currentDeviceId }) => {\r\n  const disabled = !step.enabled;\r\n  return (\r\n    <div style={draggingStyle}>\r\n      <Card\r\n        size=\"small\"\r\n        title={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            <span style={disabled ? { textDecoration: 'line-through', opacity: 0.55 } : undefined}>{step.name}</span>\r\n            {disabled && <span style={{ fontSize: 10, color: '#999' }}>(已禁用)</span>}\r\n          </div>\r\n        }\r\n        extra={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            {StepTestButton && (\r\n              <StepTestButton step={step} deviceId={currentDeviceId} disabled={disabled} />\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onToggle(step.id)}\r\n              style={{ fontSize: 12, padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}\r\n            >\r\n              {disabled ? '启用' : '禁用'}\r\n            </button>\r\n          </div>\r\n        }\r\n        style={{ touchAction: 'none' }}\r\n        bodyStyle={{ padding: 8 }}\r\n      >\r\n        <div style={{ fontSize: 12, color: '#555', lineHeight: 1.4 }}>\r\n          {step.description || <span style={{ fontStyle: 'italic', color: '#999' }}>(无描述)</span>}\r\n        </div>\r\n        <div style={{ marginTop: 6, display: 'flex', gap: 6, flexWrap: 'wrap', fontSize: 10, color: '#888' }}>\r\n          <span style={{ background: '#f5f5f5', padding: '2px 4px', borderRadius: 4 }}>{step.step_type}</span>\r\n          {step.parent_loop_id && (\r\n            <span style={{ background: '#e6f0ff', color: '#1d64c2', padding: '2px 4px', borderRadius: 4 }}>loop:{step.parent_loop_id}</span>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScriptStepItemStable",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\ScriptStepItemStable.tsx",
        "start": 28,
        "end": 71,
        "startLoc": {
          "line": 28,
          "column": 26,
          "position": 225
        },
        "endLoc": {
          "line": 71,
          "column": 21,
          "position": 842
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItem.tsx",
        "start": 36,
        "end": 77,
        "startLoc": {
          "line": 36,
          "column": 14,
          "position": 347
        },
        "endLoc": {
          "line": 77,
          "column": 9,
          "position": 956
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": "={draggingStyle}>\r\n      <Card\r\n        size=\"small\"\r\n        title={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            <span style={step.enabled ? {} : { textDecoration: 'line-through', opacity: 0.6 }}>{step.name}</span>\r\n            {!step.enabled && <span style={{ fontSize: 10, color: '#999' }}>(已禁用)</span>}\r\n          </div>\r\n        }\r\n        extra={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            {StepTestButton && (\r\n              <StepTestButton step={step} deviceId={currentDeviceId} disabled={!step.enabled} />\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onToggle(step.id)}\r\n              style={{ fontSize: 12, padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}\r\n            >\r\n              {step.enabled ? '禁用' : '启用'}\r\n            </button>\r\n          </div>\r\n        }\r\n        style={{ touchAction: 'none' }}\r\n        bodyStyle={{ padding: 8 }}\r\n      >\r\n        <div style={{ fontSize: 12, color: '#555', lineHeight: 1.4 }}>\r\n          {step.description || <span style={{ fontStyle: 'italic', color: '#999' }}>(无描述)</span>}\r\n        </div>\r\n        <div style={{ marginTop: 6, display: 'flex', gap: 6, flexWrap: 'wrap', fontSize: 10, color: '#888' }}>\r\n          <span style={{ background: '#f5f5f5', padding: '2px 4px', borderRadius: 4 }}>{step.step_type}</span>\r\n          {step.parent_loop_id && (\r\n            <span style={{ background: '#e6f0ff', color: '#1d64c2', padding: '2px 4px', borderRadius: 4 }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\ScriptStepItem.tsx",
        "start": 30,
        "end": 62,
        "startLoc": {
          "line": 30,
          "column": 6,
          "position": 265
        },
        "endLoc": {
          "line": 62,
          "column": 2,
          "position": 788
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItemBase.tsx",
        "start": 37,
        "end": 69,
        "startLoc": {
          "line": 37,
          "column": 6,
          "position": 381
        },
        "endLoc": {
          "line": 69,
          "column": 2,
          "position": 904
        }
      }
    },
    {
      "format": "tsx",
      "lines": 43,
      "fragment": "> = ({ step, draggingStyle, onToggle, StepTestButton, currentDeviceId }) => {\r\n  return (\r\n    <div style={draggingStyle}>\r\n      <Card\r\n        size=\"small\"\r\n        title={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            <span style={step.enabled ? {} : { textDecoration: 'line-through', opacity: 0.6 }}>{step.name}</span>\r\n            {!step.enabled && <span style={{ fontSize: 10, color: '#999' }}>(已禁用)</span>}\r\n          </div>\r\n        }\r\n        extra={\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: 6 }}>\r\n            {StepTestButton && (\r\n              <StepTestButton step={step} deviceId={currentDeviceId} disabled={!step.enabled} />\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onToggle(step.id)}\r\n              style={{ fontSize: 12, padding: '2px 6px', border: '1px solid #ddd', borderRadius: 4 }}\r\n            >\r\n              {step.enabled ? '禁用' : '启用'}\r\n            </button>\r\n          </div>\r\n        }\r\n        style={{ touchAction: 'none' }}\r\n        bodyStyle={{ padding: 8 }}\r\n      >\r\n        <div style={{ fontSize: 12, color: '#555', lineHeight: 1.4 }}>\r\n          {step.description || <span style={{ fontStyle: 'italic', color: '#999' }}>(无描述)</span>}\r\n        </div>\r\n        <div style={{ marginTop: 6, display: 'flex', gap: 6, flexWrap: 'wrap', fontSize: 10, color: '#888' }}>\r\n          <span style={{ background: '#f5f5f5', padding: '2px 4px', borderRadius: 4 }}>{step.step_type}</span>\r\n          {step.parent_loop_id && (\r\n            <span style={{ background: '#e6f0ff', color: '#1d64c2', padding: '2px 4px', borderRadius: 4 }}>loop:{step.parent_loop_id}</span>\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScriptStepItem",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\ScriptStepItem.tsx",
        "start": 28,
        "end": 70,
        "startLoc": {
          "line": 28,
          "column": 20,
          "position": 225
        },
        "endLoc": {
          "line": 70,
          "column": 15,
          "position": 840
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\script-builder\\components\\StepItemBase.tsx",
        "start": 35,
        "end": 77,
        "startLoc": {
          "line": 35,
          "column": 14,
          "position": 341
        },
        "endLoc": {
          "line": 77,
          "column": 9,
          "position": 956
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "{\r\n  strategy: string;\r\n  fields: string[];\r\n  values: Record<string, string>;\r\n  includes?: Record<string, string[]>;\r\n  excludes?: Record<string, string[]>;\r\n  matchMode?: Record<string, \"equals\" | \"contains\" | \"regex\">;\r\n  regexIncludes?: Record<string, string[]>;\r\n  regexExcludes?: Record<string, string[]>;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\page-finder-modal\\types\\index.ts",
        "start": 47,
        "end": 56,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 283
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 409
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\hooks\\useGridElementView.ts",
        "start": 32,
        "end": 41,
        "startLoc": {
          "line": 32,
          "column": 2,
          "position": 348
        },
        "endLoc": {
          "line": 41,
          "column": 8,
          "position": 475
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const parsedElements = await UniversalUIAPI.extractPageElements(xmlContent);\r\n      setUIElements(parsedElements);\r\n      \r\n      // 转换为可视化元素并设置给 VisualElementView\r\n      const visualElements = parsedElements.map(transformUIElement);\r\n      setElements(visualElements);\r\n      \r\n      // 创建快照\r\n      const snapshot: XmlSnapshot = {\r\n        id: `snapshot_${Date.now()}`,\r\n        xmlContent,\r\n        xmlHash: generateXmlHash(xmlContent),\r\n        deviceInfo: {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\page-finder-modal\\hooks\\usePageFinderModal.ts",
        "start": 247,
        "end": 259,
        "startLoc": {
          "line": 247,
          "column": 7,
          "position": 2287
        },
        "endLoc": {
          "line": 259,
          "column": 2,
          "position": 2397
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\page-finder-modal\\hooks\\usePageFinderModal.ts",
        "start": 177,
        "end": 189,
        "startLoc": {
          "line": 177,
          "column": 7,
          "position": 1683
        },
        "endLoc": {
          "line": 189,
          "column": 16,
          "position": 1793
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ",\r\n}) => {\r\n  const contentRef = useRef<HTMLDivElement>(null);\r\n  const [contentHeight, setContentHeight] = useState<number | undefined>(undefined);\r\n\r\n  // 动态计算内容高度\r\n  useEffect(() => {\r\n    if (!enableAutoScroll || !contentRef.current) return;\r\n\r\n    const updateContentHeight = () => {\r\n      const container = contentRef.current;\r\n      if (!container) return;\r\n\r\n      const containerHeight",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\grid-layout\\components\\DraggableHeaderPanel.tsx",
        "start": 68,
        "end": 81,
        "startLoc": {
          "line": 68,
          "column": 10,
          "position": 426
        },
        "endLoc": {
          "line": 81,
          "column": 16,
          "position": 563
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedResizablePanel.tsx",
        "start": 36,
        "end": 56,
        "startLoc": {
          "line": 36,
          "column": 17,
          "position": 318
        },
        "endLoc": {
          "line": 56,
          "column": 14,
          "position": 455
        }
      }
    },
    {
      "format": "javascript",
      "lines": 116,
      "fragment": "}\r\n        onCancel={vi.fn()}\r\n      />\r\n    );\r\n\r\n    const btn = screen.getByRole('button', { name: /直接确定|确定/i });\r\n    await user.click(btn);\r\n\r\n    await waitFor(() => expect(quick).toHaveBeenCalled());\r\n\r\n    // 弹层仍然可见（通过检查 Popover 容器）\r\n    const popover = container.querySelector('[data-testid=\"confirm-popover\"]') || \r\n                    container.querySelector('.ant-popover');\r\n    expect(popover).toBeTruthy();\r\n  });\r\n\r\n  it('✅ 抛错：不关闭、按钮解除禁用、显示错误提示', async () => {\r\n    const consoleErrorSpy = vi.spyOn(console, 'error').mockImplementation(() => {});\r\n    const quick = vi.fn().mockRejectedValue(new Error('测试错误'));\r\n\r\n    render(\r\n      <ElementSelectionPopover\r\n        visible={true}\r\n        selection={mockSelection}\r\n        onQuickCreate={quick}\r\n        onCancel={vi.fn()}\r\n      />\r\n    );\r\n\r\n    const btn = screen.getByRole('button', { name: /直接确定|确定/i });\r\n    await user.click(btn);\r\n\r\n    await waitFor(() => expect(quick).toHaveBeenCalled());\r\n\r\n    // 按钮重新可点（不应该有 disabled 属性或 disabled=false）\r\n    await waitFor(() => {\r\n      expect(btn).not.toBeDisabled();\r\n    });\r\n\r\n    // 弹层仍然可见\r\n    expect(screen.getByText(/测试按钮/i)).toBeInTheDocument();\r\n\r\n    consoleErrorSpy.mockRestore();\r\n  });\r\n\r\n  it('✅ 并发防抖：连续点击只触发一次', async () => {\r\n    const quick = vi.fn().mockImplementation(() => \r\n      new Promise(resolve => setTimeout(() => resolve(true), 100))\r\n    );\r\n\r\n    render(\r\n      <ElementSelectionPopover\r\n        visible={true}\r\n        selection={mockSelection}\r\n        onQuickCreate={quick}\r\n        onCancel={vi.fn()}\r\n      />\r\n    );\r\n\r\n    const btn = screen.getByRole('button', { name: /直接确定|确定/i });\r\n\r\n    // 快速连续点击 3 次\r\n    await user.click(btn);\r\n    await user.click(btn);\r\n    await user.click(btn);\r\n\r\n    // 等待请求完成\r\n    await waitFor(() => expect(quick).toHaveBeenCalledTimes(1), { timeout: 200 });\r\n  });\r\n\r\n  it('✅ 没有提供回调：按钮禁用', () => {\r\n    const { container } = render(\r\n      <ElementSelectionPopover\r\n        visible={true}\r\n        selection={mockSelection}\r\n        onCancel={vi.fn()}\r\n        // 不提供 onQuickCreate 或 onConfirm\r\n        {...({} as any)}\r\n      />\r\n    );\r\n\r\n    const btn = screen.queryByRole('button', { name: /直接确定|确定/i });\r\n    if (btn) {\r\n      expect(btn).toBeDisabled();\r\n    }\r\n  });\r\n\r\n  it('✅ 成功并关闭：返回 true 或 void', async () => {\r\n    const quick = vi.fn().mockResolvedValue(true);\r\n\r\n    const { rerender } = render(\r\n      <ElementSelectionPopover\r\n        visible={true}\r\n        selection={mockSelection}\r\n        onQuickCreate={quick}\r\n        onCancel={vi.fn()}\r\n      />\r\n    );\r\n\r\n    const btn = screen.getByRole('button', { name: /直接确定|确定/i });\r\n    await user.click(btn);\r\n\r\n    await waitFor(() => expect(quick).toHaveBeenCalled());\r\n\r\n    // 注意：实际关闭逻辑在父组件，这里只测试回调被调用\r\n    // 实际项目中需要配合父组件测试完整关闭流程\r\n  });\r\n});\r\n\r\ndescribe('ElementSelectionPopover - 智能分析集成', () => {\r\n  it('✅ 启用智能分析时显示分析按钮', () => {\r\n    render(\r\n      <ElementSelectionPopover\r\n        visible={true}\r\n        selection={mockSelection}\r\n        onQuickCreate={vi",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\__tests__\\ElementSelectionPopover.test.tsx",
        "start": 75,
        "end": 190,
        "startLoc": {
          "line": 75,
          "column": 6,
          "position": 669
        },
        "endLoc": {
          "line": 190,
          "column": 3,
          "position": 1685
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\__tests__\\ElementSelectionPopover.test.tsx",
        "start": 48,
        "end": 129,
        "startLoc": {
          "line": 48,
          "column": 4,
          "position": 444
        },
        "endLoc": {
          "line": 129,
          "column": 6,
          "position": 1164
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "render(\r\n      <ElementSelectionPopover\r\n        visible={true}\r\n        selection={mockSelection}\r\n        onQuickCreate={quick}\r\n        onCancel={vi.fn()}\r\n      />\r\n    );\r\n\r\n    const btn = screen.getByRole('button', { name: /直接确定|确定/i });\r\n    await user.click(btn);\r\n\r\n    await waitFor(() => expect(quick).toHaveBeenCalled());\r\n\r\n    // 按钮重新可点（不应该有 disabled 属性或 disabled=false）",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\__tests__\\ElementSelectionPopover.test.tsx",
        "start": 95,
        "end": 109,
        "startLoc": {
          "line": 95,
          "column": 5,
          "position": 880
        },
        "endLoc": {
          "line": 109,
          "column": 44,
          "position": 991
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\__tests__\\ElementSelectionPopover.test.tsx",
        "start": 71,
        "end": 85,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 645
        },
        "endLoc": {
          "line": 85,
          "column": 27,
          "position": 756
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "} = render(\r\n      <ElementSelectionPopover\r\n        visible={true}\r\n        selection={mockSelection}\r\n        onQuickCreate={quick}\r\n        onCancel={vi.fn()}\r\n      />\r\n    );\r\n\r\n    const btn = screen.getByRole('button', { name: /直接确定|确定/i });\r\n    await user.click(btn);\r\n\r\n    await waitFor(() => expect(quick).toHaveBeenCalled());\r\n\r\n    // 注意：实际关闭逻辑在父组件，这里只测试回调被调用",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\__tests__\\ElementSelectionPopover.test.tsx",
        "start": 165,
        "end": 179,
        "startLoc": {
          "line": 165,
          "column": 2,
          "position": 1499
        },
        "endLoc": {
          "line": 179,
          "column": 28,
          "position": 1614
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\__tests__\\ElementSelectionPopover.test.tsx",
        "start": 71,
        "end": 85,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 641
        },
        "endLoc": {
          "line": 85,
          "column": 27,
          "position": 756
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".reduce((largest, current) => {\r\n        const largestArea = this.getElementArea(largest.element);\r\n        const currentArea = this.getElementArea(current.element);\r\n        return currentArea > largestArea ? current : largest;\r\n      });\r\n      \r\n      console.log('✅ 重建后找到根节点:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\hierarchy\\ElementHierarchyAnalyzer.ts",
        "start": 399,
        "end": 405,
        "startLoc": {
          "line": 399,
          "column": 18,
          "position": 3502
        },
        "endLoc": {
          "line": 405,
          "column": 14,
          "position": 3585
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\hierarchy\\ElementHierarchyAnalyzer.ts",
        "start": 388,
        "end": 394,
        "startLoc": {
          "line": 388,
          "column": 9,
          "position": 3382
        },
        "endLoc": {
          "line": 394,
          "column": 19,
          "position": 3465
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(\r\n      elementB.bounds.left <= elementA.bounds.left &&\r\n      elementB.bounds.top <= elementA.bounds.top &&\r\n      elementB.bounds.right >= elementA.bounds.right &&\r\n      elementB.bounds.bottom >= elementA.bounds.bottom\r\n    );\r\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\hierarchy\\ElementBoundsAnalyzer.ts",
        "start": 148,
        "end": 154,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1146
        },
        "endLoc": {
          "line": 154,
          "column": 2,
          "position": 1225
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\hierarchy\\ElementHierarchyAnalyzer.ts",
        "start": 320,
        "end": 327,
        "startLoc": {
          "line": 320,
          "column": 2,
          "position": 2723
        },
        "endLoc": {
          "line": 327,
          "column": 3,
          "position": 2804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ".sort((a, b) => {\r\n        if (finalOptions.prioritizeTextElements) {\r\n          if (a.hasText && !b.hasText) return -1;\r\n          if (!a.hasText && b.hasText) return 1;\r\n        }\r\n        return b.confidence - a.confidence;\r\n      })\r\n      .slice(0, 20",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\useElementDiscovery.ts",
        "start": 465,
        "end": 472,
        "startLoc": {
          "line": 465,
          "column": 7,
          "position": 4510
        },
        "endLoc": {
          "line": 472,
          "column": 3,
          "position": 4613
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\useElementDiscovery.ts",
        "start": 297,
        "end": 304,
        "startLoc": {
          "line": 297,
          "column": 7,
          "position": 2670
        },
        "endLoc": {
          "line": 304,
          "column": 3,
          "position": 2773
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "{\r\n    return (\r\n      elementB.bounds.left <= elementA.bounds.left &&\r\n      elementB.bounds.top <= elementA.bounds.top &&\r\n      elementB.bounds.right >= elementA.bounds.right &&\r\n      elementB.bounds.bottom >= elementA.bounds.bottom\r\n    );\r\n  },",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\useElementDiscovery.ts",
        "start": 602,
        "end": 609,
        "startLoc": {
          "line": 602,
          "column": 2,
          "position": 5913
        },
        "endLoc": {
          "line": 609,
          "column": 2,
          "position": 5999
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\hierarchy\\ElementBoundsAnalyzer.ts",
        "start": 147,
        "end": 158,
        "startLoc": {
          "line": 147,
          "column": 2,
          "position": 1140
        },
        "endLoc": {
          "line": 158,
          "column": 6,
          "position": 1231
        }
      }
    },
    {
      "format": "tsx",
      "lines": 79,
      "fragment": "</summary>\r\n            <div style={{ \r\n              marginTop: 4, \r\n              padding: 8, \r\n              background: 'var(--bg-light-secondary, #f1f5f9)', \r\n              borderRadius: 4,\r\n              fontSize: 10,\r\n              lineHeight: 1.4\r\n            }}>\r\n              <div><strong>元素字段信息:</strong></div>\r\n              {/* 自适应显示所有有值的字段 */}\r\n              {Object.entries(uiElement)\r\n                .filter(([key, value]) => {\r\n                  // 排除一些不需要显示的字段\r\n                  if (['children', 'bounds'].includes(key)) return false;\r\n                  \r\n                  // 只显示有意义的字段值\r\n                  if (typeof value === 'string') {\r\n                    return value.trim().length > 0;\r\n                  }\r\n                  if (typeof value === 'boolean') {\r\n                    return true; // 布尔值总是显示\r\n                  }\r\n                  if (typeof value === 'number') {\r\n                    return true; // 数字总是显示\r\n                  }\r\n                  return value != null; // 其他非空值\r\n                })\r\n                .map(([key, value]) => {\r\n                  let displayValue = value;\r\n                  let fieldLabel = key;\r\n                  \r\n                  // 字段名称本地化\r\n                  const fieldNames: Record<string, string> = {\r\n                    'text': '文本内容',\r\n                    'content_desc': '内容描述',\r\n                    'resource_id': '资源ID', \r\n                    'class_name': '类名',\r\n                    'element_type': '元素类型',\r\n                    'is_clickable': '可点击',\r\n                    'is_scrollable': '可滚动',\r\n                    'is_enabled': '已启用',\r\n                    'is_focused': '已聚焦',\r\n                    'checkable': '可勾选',\r\n                    'checked': '已勾选',\r\n                    'selected': '已选中',\r\n                    'password': '密码框',\r\n                    'xpath': 'XPath路径',\r\n                    'parentId': '父元素ID'\r\n                  };\r\n                  \r\n                  fieldLabel = fieldNames[key] || key;\r\n                  \r\n                  // 值格式化\r\n                  if (typeof value === 'string') {\r\n                    displayValue = `\"${value}\" (长度: ${value.length})`;\r\n                  } else if (typeof value === 'boolean') {\r\n                    displayValue = value ? '是' : '否';\r\n                  } else {\r\n                    displayValue = String(value);\r\n                  }\r\n                  \r\n                  return (\r\n                    <div key={key}>\r\n                      • {fieldLabel}: {displayValue}\r\n                    </div>\r\n                  );\r\n                })}\r\n              \r\n              {/* 位置信息单独处理 */}\r\n              {uiElement.bounds && (\r\n                <div>• 位置信息: [{uiElement.bounds.left}, {uiElement.bounds.top}, {uiElement.bounds.right}, {uiElement.bounds.bottom}]</div>\r\n              )}\r\n              \r\n              {/* 子元素数量 */}\r\n              {uiElement.children && uiElement.children.length > 0 && (\r\n                <div>• 子元素数量: {uiElement.children.length} 个</div>\r\n              )}\r\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\ParentElementCard.tsx",
        "start": 169,
        "end": 247,
        "startLoc": {
          "line": 169,
          "column": 13,
          "position": 1636
        },
        "endLoc": {
          "line": 247,
          "column": 3,
          "position": 2374
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\element-discovery\\SelfElementCard.tsx",
        "start": 296,
        "end": 375,
        "startLoc": {
          "line": 296,
          "column": 11,
          "position": 2919
        },
        "endLoc": {
          "line": 375,
          "column": 2,
          "position": 3659
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "} style={btnStyle} disabled={disabled || submitting}>\r\n              发现元素\r\n            </Button>\r\n          )}\r\n          <Button size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n            取消\r\n          </Button>\r\n        </Space>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row gutter={[t.gap, t.gap]} style={{ width: 240 }}>\r\n        <Col span={12}>\r\n          <Button \r\n            block \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            icon={<ThunderboltOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 278,
        "end": 296,
        "startLoc": {
          "line": 278,
          "column": 12,
          "position": 2324
        },
        "endLoc": {
          "line": 296,
          "column": 20,
          "position": 2499
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 202,
        "end": 220,
        "startLoc": {
          "line": 202,
          "column": 7,
          "position": 1634
        },
        "endLoc": {
          "line": 220,
          "column": 14,
          "position": 1809
        }
      }
    },
    {
      "format": "javascript",
      "lines": 38,
      "fragment": "} \r\n              style={btnStyle} \r\n              disabled={disabled || submitting}\r\n            >\r\n              取消分析\r\n            </Button>\r\n            <Button \r\n              size=\"small\" \r\n              icon={<CheckOutlined />} \r\n              onClick={handleQuickConfirm} \r\n              style={btnStyle} \r\n              disabled={disabled}\r\n              loading={submitting}\r\n            >\r\n              直接确定\r\n            </Button>\r\n            {onDiscovery && (\r\n              <Button size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n                发现元素\r\n              </Button>\r\n            )}\r\n            <Button size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n              取消\r\n            </Button>\r\n          </Space>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {progressElement}\r\n        <Row gutter={[t.gap, t.gap]} style={{ width: 240 }}>\r\n          <Col span={12}>\r\n            <Button \r\n              block \r\n              size=\"small\" \r\n              icon={<StopOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 366,
        "end": 403,
        "startLoc": {
          "line": 366,
          "column": 17,
          "position": 3103
        },
        "endLoc": {
          "line": 403,
          "column": 13,
          "position": 3407
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 261,
        "end": 220,
        "startLoc": {
          "line": 261,
          "column": 16,
          "position": 2207
        },
        "endLoc": {
          "line": 220,
          "column": 14,
          "position": 1809
        }
      }
    },
    {
      "format": "javascript",
      "lines": 42,
      "fragment": "} \r\n              style={btnStyle} \r\n              disabled={disabled || submitting}\r\n            >\r\n              取消分析\r\n            </Button>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Button \r\n              block \r\n              size=\"small\" \r\n              icon={<CheckOutlined />} \r\n              onClick={handleQuickConfirm} \r\n              style={btnStyle} \r\n              disabled={disabled}\r\n              loading={submitting}\r\n            >\r\n              直接确定\r\n            </Button>\r\n          </Col>\r\n          <Col span={12}>\r\n            {onDiscovery && (\r\n              <Button block size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n                发现元素\r\n              </Button>\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            <Button block size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n              取消\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 分析完成状态按钮\r\n  const renderCompletedButtons = () => {\r\n    const strategyElement = recommendedStrategy && (\r\n      <div style={{ marginBottom: 8, textAlign: 'center' }}>\r\n        <Text style={{ fontSize: '12px', color: '#52c41a'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 404,
        "end": 445,
        "startLoc": {
          "line": 404,
          "column": 17,
          "position": 3416
        },
        "endLoc": {
          "line": 445,
          "column": 10,
          "position": 3781
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 297,
        "end": 337,
        "startLoc": {
          "line": 297,
          "column": 16,
          "position": 2508
        },
        "endLoc": {
          "line": 337,
          "column": 7,
          "position": 2867
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "}\r\n            >\r\n              直接确定\r\n            </Button>\r\n            <Button size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n              取消\r\n            </Button>\r\n          </Space>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {strategyElement}\r\n        <Row gutter={[t.gap, t.gap]} style={{ width: 240 }}>\r\n          <Col span={12}>\r\n            <Button \r\n              block \r\n              type=\"primary\" \r\n              size=\"small\" \r\n              icon={<TrophyOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 490,
        "end": 511,
        "startLoc": {
          "line": 490,
          "column": 11,
          "position": 4117
        },
        "endLoc": {
          "line": 511,
          "column": 15,
          "position": 4292
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 202,
        "end": 220,
        "startLoc": {
          "line": 202,
          "column": 12,
          "position": 1648
        },
        "endLoc": {
          "line": 220,
          "column": 14,
          "position": 1809
        }
      }
    },
    {
      "format": "javascript",
      "lines": 36,
      "fragment": "} \r\n            style={btnStyle} \r\n            disabled={disabled || submitting}\r\n          >\r\n            重试分析\r\n          </Button>\r\n          <Button \r\n            size=\"small\" \r\n            icon={<CheckOutlined />} \r\n            onClick={handleQuickConfirm} \r\n            style={btnStyle} \r\n            disabled={disabled}\r\n            loading={submitting}\r\n          >\r\n            直接确定\r\n          </Button>\r\n          {onDiscovery && (\r\n            <Button size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n              发现元素\r\n            </Button>\r\n          )}\r\n          <Button size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n            取消\r\n          </Button>\r\n        </Space>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row gutter={[t.gap, t.gap]} style={{ width: 240 }}>\r\n        <Col span={12}>\r\n          <Button \r\n            block \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            icon={<RedoOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 563,
        "end": 598,
        "startLoc": {
          "line": 563,
          "column": 16,
          "position": 4686
        },
        "endLoc": {
          "line": 598,
          "column": 13,
          "position": 4978
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 261,
        "end": 220,
        "startLoc": {
          "line": 261,
          "column": 16,
          "position": 2207
        },
        "endLoc": {
          "line": 220,
          "column": 14,
          "position": 1809
        }
      }
    },
    {
      "format": "javascript",
      "lines": 29,
      "fragment": "} \r\n            style={btnStyle} \r\n            disabled={disabled || submitting}\r\n          >\r\n            重试分析\r\n          </Button>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Button \r\n            block \r\n            size=\"small\" \r\n            icon={<CheckOutlined />} \r\n            onClick={handleQuickConfirm} \r\n            style={btnStyle} \r\n            disabled={disabled}\r\n            loading={submitting}\r\n          >\r\n            直接确定\r\n          </Button>\r\n        </Col>\r\n        <Col span={12}>\r\n          {onDiscovery && (\r\n            <Button block size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n              发现元素\r\n            </Button>\r\n          )}\r\n        </Col>\r\n        <Col span={12}>\r\n          <Button block size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 599,
        "end": 627,
        "startLoc": {
          "line": 599,
          "column": 16,
          "position": 4987
        },
        "endLoc": {
          "line": 627,
          "column": 2,
          "position": 5236
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 297,
        "end": 325,
        "startLoc": {
          "line": 297,
          "column": 16,
          "position": 2508
        },
        "endLoc": {
          "line": 325,
          "column": 2,
          "position": 2757
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "</Button>\r\n          )}\r\n          <Button size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n            取消\r\n          </Button>\r\n        </Space>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row gutter={[t.gap, t.gap]} style={{ width: 240 }}>\r\n        <Col span={12}>\r\n          <Button \r\n            block \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            icon={<ThunderboltOutlined />} \r\n            onClick={onStartAnalysis} \r\n            ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 280,
        "end": 298,
        "startLoc": {
          "line": 280,
          "column": 13,
          "position": 2347
        },
        "endLoc": {
          "line": 298,
          "column": 13,
          "position": 2509
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 204,
        "end": 222,
        "startLoc": {
          "line": 204,
          "column": 13,
          "position": 1657
        },
        "endLoc": {
          "line": 222,
          "column": 13,
          "position": 1819
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ">\r\n              直接确定\r\n            </Button>\r\n            {onDiscovery && (\r\n              <Button size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n                发现元素\r\n              </Button>\r\n            )}\r\n            <Button size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n              取消\r\n            </Button>\r\n          </Space>\r\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 379,
        "end": 391,
        "startLoc": {
          "line": 379,
          "column": 13,
          "position": 3175
        },
        "endLoc": {
          "line": 391,
          "column": 3,
          "position": 3313
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 274,
        "end": 286,
        "startLoc": {
          "line": 274,
          "column": 11,
          "position": 2279
        },
        "endLoc": {
          "line": 286,
          "column": 2,
          "position": 2417
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ">\r\n              直接确定\r\n            </Button>\r\n          </Col>\r\n          <Col span={12}>\r\n            {onDiscovery && (\r\n              <Button block size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n                发现元素\r\n              </Button>\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            <Button block size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n              取消\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 420,
        "end": 437,
        "startLoc": {
          "line": 420,
          "column": 13,
          "position": 3508
        },
        "endLoc": {
          "line": 437,
          "column": 3,
          "position": 3692
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 313,
        "end": 330,
        "startLoc": {
          "line": 313,
          "column": 11,
          "position": 2600
        },
        "endLoc": {
          "line": 330,
          "column": 2,
          "position": 2784
        }
      }
    },
    {
      "format": "tsx",
      "lines": 36,
      "fragment": "</Button>\r\n          <Button \r\n            size=\"small\" \r\n            icon={<CheckOutlined />} \r\n            onClick={handleQuickConfirm} \r\n            style={btnStyle} \r\n            disabled={disabled}\r\n            loading={submitting}\r\n          >\r\n            直接确定\r\n          </Button>\r\n          {onDiscovery && (\r\n            <Button size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n              发现元素\r\n            </Button>\r\n          )}\r\n          <Button size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n            取消\r\n          </Button>\r\n        </Space>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Row gutter={[t.gap, t.gap]} style={{ width: 240 }}>\r\n        <Col span={12}>\r\n          <Button \r\n            block \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            icon={<RedoOutlined />} \r\n            onClick={onRetryAnalysis} \r\n            style={btnStyle} \r\n            disabled={disabled || submitting}\r\n          >\r\n            重试分析",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 568,
        "end": 603,
        "startLoc": {
          "line": 568,
          "column": 11,
          "position": 4710
        },
        "endLoc": {
          "line": 603,
          "column": 5,
          "position": 5007
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 266,
        "end": 301,
        "startLoc": {
          "line": 266,
          "column": 11,
          "position": 2231
        },
        "endLoc": {
          "line": 301,
          "column": 5,
          "position": 2528
        }
      }
    },
    {
      "format": "tsx",
      "lines": 32,
      "fragment": "</Button>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Button \r\n            block \r\n            size=\"small\" \r\n            icon={<CheckOutlined />} \r\n            onClick={handleQuickConfirm} \r\n            style={btnStyle} \r\n            disabled={disabled}\r\n            loading={submitting}\r\n          >\r\n            直接确定\r\n          </Button>\r\n        </Col>\r\n        <Col span={12}>\r\n          {onDiscovery && (\r\n            <Button block size=\"small\" icon={<SearchOutlined />} onClick={onDiscovery} style={btnStyle} disabled={disabled || submitting}>\r\n              发现元素\r\n            </Button>\r\n          )}\r\n        </Col>\r\n        <Col span={12}>\r\n          <Button block size=\"small\" icon={<CloseOutlined />} onClick={onCancel} style={btnStyle} ghost disabled={disabled || submitting}>\r\n            取消\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 604,
        "end": 635,
        "startLoc": {
          "line": 604,
          "column": 11,
          "position": 5011
        },
        "endLoc": {
          "line": 635,
          "column": 7,
          "position": 5275
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\components\\PopoverActionButtons.tsx",
        "start": 302,
        "end": 333,
        "startLoc": {
          "line": 302,
          "column": 11,
          "position": 2532
        },
        "endLoc": {
          "line": 333,
          "column": 11,
          "position": 2796
        }
      }
    },
    {
      "format": "javascript",
      "lines": 103,
      "fragment": "}\r\n        >\r\n          主题 <SettingOutlined />\r\n        </Button>\r\n      </Dropdown>\r\n    </span>\r\n  );\r\n};\r\n\r\n/**\r\n * Icon 模式的主题切换器\r\n */\r\nconst IconThemeSwitcher: React.FC<ThemeSwitcherProps> = ({\r\n  size = 'middle',\r\n  disabled,\r\n  onChange,\r\n  variant: _variant,\r\n  className,\r\n  style,\r\n}) => {\r\n  const { mode } = useThemeState();\r\n  const { toggleMode } = useThemeActions();\r\n\r\n  const handleClick = () => {\r\n    const newMode = mode === 'dark' ? 'light' : 'dark';\r\n    toggleMode();\r\n    onChange?.(newMode);\r\n  };\r\n\r\n  const icon = mode === 'dark' ? <SunOutlined /> : <MoonOutlined />;\r\n  const text = mode === 'dark' ? '切换到亮色模式' : '切换到暗色模式';\r\n\r\n  return (\r\n    <Tooltip title={text}>\r\n      <Button\r\n        type=\"text\"\r\n        size={size === 'small' ? 'small' : size === 'large' ? 'large' : 'middle'}\r\n        shape=\"circle\"\r\n        icon={icon}\r\n        disabled={disabled}\r\n        onClick={handleClick}\r\n        className={className}\r\n        style={style as any}\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\n/**\r\n * 主题切换器组件\r\n */\r\nexport const ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ \r\n  variant = 'switch', \r\n  ...props \r\n}) => {\r\n  switch (variant) {\r\n    case 'button':\r\n      return <ButtonThemeSwitcher {...props} />;\r\n    case 'dropdown':\r\n      return <DropdownThemeSwitcher {...props} />;\r\n    case 'icon':\r\n      return <IconThemeSwitcher {...props} />;\r\n    case 'switch':\r\n    default:\r\n      return <SwitchThemeSwitcher {...props} />;\r\n  }\r\n};\r\n\r\n/**\r\n * 主题指示器组件\r\n * 显示当前主题状态，不提供切换功能\r\n */\r\nexport interface ThemeIndicatorProps {\r\n  /** 显示模式 */\r\n  variant?: 'badge' | 'text' | 'icon';\r\n  /** 尺寸 */\r\n  size?: 'small' | 'middle' | 'large';\r\n  /** 自定义类名 */\r\n  className?: string;\r\n  /** 自定义样式 */\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport const ThemeIndicator: React.FC<ThemeIndicatorProps> = ({\r\n  variant = 'badge',\r\n  size = 'middle',\r\n  className,\r\n  style,\r\n}) => {\r\n  const { mode } = useThemeState();\r\n\r\n  if (variant === 'icon') {\r\n    const icon = mode === 'dark' ? <MoonOutlined /> : <SunOutlined />;\r\n    return (\r\n      <span className={className} style={style}>\r\n        {icon}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  if (variant === 'text') {\r\n    return (\r\n      <span className={className",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeSwitcher.tsx",
        "start": 183,
        "end": 285,
        "startLoc": {
          "line": 183,
          "column": 12,
          "position": 1534
        },
        "endLoc": {
          "line": 285,
          "column": 10,
          "position": 2346
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeSwitcher.tsx",
        "start": 75,
        "end": 174,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 620
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1453
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "className,\r\n  style,\r\n}) => {\r\n  const { mode } = useThemeState();\r\n  const { toggleMode } = useThemeActions();\r\n\r\n  const handleClick = () => {\r\n    const newMode = mode === 'dark' ? 'light' : 'dark';\r\n    toggleMode();\r\n    onChange?.(newMode);\r\n  };\r\n\r\n  const icon = mode === 'dark' ? <SunOutlined /> : <MoonOutlined />;\r\n  const text = mode === 'dark' ? '切换到亮色模式' : '切换到暗色模式';\r\n\r\n  return (\r\n    <Tooltip title={text}>\r\n      <Button\r\n        type=\"text\"\r\n        size={size === 'small' ? 'small' : size === 'large' ? 'large' : 'middle'}\r\n        shape",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeSwitcher.tsx",
        "start": 200,
        "end": 220,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1626
        },
        "endLoc": {
          "line": 220,
          "column": 6,
          "position": 1850
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeSwitcher.tsx",
        "start": 89,
        "end": 109,
        "startLoc": {
          "line": 89,
          "column": 3,
          "position": 703
        },
        "endLoc": {
          "line": 109,
          "column": 5,
          "position": 927
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\r\n      \r\n      // 重新排序\r\n      steps.forEach((step, index) => {\r\n        step.order = index;\r\n      });\r\n      \r\n      const updatedScript = {\r\n        ...prev.currentScript,\r\n        steps,\r\n        updatedAt: Date.now(),\r\n      };\r\n      \r\n      return {\r\n        ...prev,\r\n        currentScript: updatedScript,\r\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\hooks\\useScriptBuilderState.ts",
        "start": 274,
        "end": 290,
        "startLoc": {
          "line": 274,
          "column": 10,
          "position": 2357
        },
        "endLoc": {
          "line": 290,
          "column": 2,
          "position": 2466
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\hooks\\useScriptBuilderState.ts",
        "start": 245,
        "end": 260,
        "startLoc": {
          "line": 245,
          "column": 7,
          "position": 2037
        },
        "endLoc": {
          "line": 260,
          "column": 13,
          "position": 2144
        }
      }
    },
    {
      "format": "javascript",
      "lines": 85,
      "fragment": "}>\r\n                {warnings.map((warning, index) => (\r\n                  <li key={index}>{warning}</li>\r\n                ))}\r\n              </ul>\r\n            }\r\n            type=\"warning\"\r\n            showIcon\r\n          />\r\n        )}\r\n      </Space>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={`${isNew ? '新建' : '编辑'}步骤`}\r\n      open={visible}\r\n      onCancel={onClose}\r\n      width={800}\r\n      footer={\r\n        <Space>\r\n          <Button onClick={onClose} disabled={loading}>\r\n            取消\r\n          </Button>\r\n          {onTest && (\r\n            <Button\r\n              icon={<PlayCircleOutlined />}\r\n              onClick={handleTest}\r\n              disabled={loading}\r\n            >\r\n              测试\r\n            </Button>\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<SaveOutlined />}\r\n            onClick={handleSave}\r\n            loading={loading}\r\n          >\r\n            保存\r\n          </Button>\r\n        </Space>\r\n      }\r\n      styles={{\r\n        body: { \r\n          padding: token.padding,\r\n          maxHeight: '70vh',\r\n          overflowY: 'auto'\r\n        }\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        initialValues={{\r\n          enabled: true,\r\n          type: 'tap',\r\n        }}\r\n      >\r\n        <Tabs \r\n          activeKey={activeTab} \r\n          onChange={setActiveTab}\r\n          size=\"small\"\r\n        >\r\n          <TabPane tab=\"基础配置\" key=\"basic\">\r\n            <BasicConfig\r\n              stepType={currentStepType}\r\n              onTypeChange={handleTypeChange}\r\n              form={form}\r\n              loading={loading}\r\n            />\r\n          </TabPane>\r\n          \r\n          <TabPane tab=\"参数配置\" key=\"parameters\">\r\n            {renderParameterConfig()}\r\n          </TabPane>\r\n          \r\n          {validation && (\r\n            <TabPane \r\n              tab={\r\n                <Space>\r\n                  <span>验证结果</span>\r\n                  {validation.isValid ? (\r\n                    <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor-Refactored.tsx",
        "start": 295,
        "end": 379,
        "startLoc": {
          "line": 295,
          "column": 2,
          "position": 2287
        },
        "endLoc": {
          "line": 379,
          "column": 2,
          "position": 2824
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor.tsx",
        "start": 277,
        "end": 362,
        "startLoc": {
          "line": 277,
          "column": 6,
          "position": 2131
        },
        "endLoc": {
          "line": 362,
          "column": 2,
          "position": 2688
        }
      }
    },
    {
      "format": "tsx",
      "lines": 55,
      "fragment": ",\r\n} from 'antd';\r\nimport {\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  PlayCircleOutlined,\r\n  SaveOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// 导入模块化组件\r\nimport {\r\n  BasicConfig,\r\n  TapParameters,\r\n} from './step-editor';\r\n\r\nimport type { \r\n  ScriptStep, \r\n  StepType, \r\n  StepValidation,\r\n  TapStepParameters,\r\n  InputStepParameters,\r\n  SwipeStepParameters,\r\n  WaitStepParameters,\r\n  LoopStepParameters,\r\n} from '../types';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n/**\r\n * StepEditor 组件属性\r\n */\r\ninterface StepEditorProps {\r\n  visible: boolean;\r\n  step: ScriptStep | null;\r\n  isNew?: boolean;\r\n  validation?: StepValidation;\r\n  availableStepTypes?: StepType[];\r\n  onClose: () => void;\r\n  onSave: (step: ScriptStep) => void;\r\n  onTest?: (step: ScriptStep) => void;\r\n  onOpenPageSelector?: () => void;\r\n}\r\n\r\nconst StepEditor: React.FC<StepEditorProps> = ({\r\n  visible,\r\n  step,\r\n  isNew = false,\r\n  validation,\r\n  availableStepTypes,\r\n  onClose,\r\n  onSave,\r\n  onTest,\r\n  onOpenPageSelector,\r\n}) => {\r\n  const {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor-Refactored.tsx",
        "start": 22,
        "end": 76,
        "startLoc": {
          "line": 22,
          "column": 6,
          "position": 93
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor.tsx",
        "start": 18,
        "end": 72,
        "startLoc": {
          "line": 18,
          "column": 8,
          "position": 73
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 424
        }
      }
    },
    {
      "format": "tsx",
      "lines": 199,
      "fragment": "const [form] = Form.useForm();\r\n  const [currentStepType, setCurrentStepType] = useState<StepType>('tap');\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('basic');\r\n\r\n  // 初始化表单数据\r\n  useEffect(() => {\r\n    if (visible && step) {\r\n      form.setFieldsValue(step);\r\n      setCurrentStepType(step.type);\r\n      setActiveTab('basic');\r\n    } else if (visible && isNew) {\r\n      form.resetFields();\r\n      setCurrentStepType('tap');\r\n      setActiveTab('basic');\r\n    }\r\n  }, [visible, step, isNew, form]);\r\n\r\n  // 处理步骤类型变化\r\n  const handleTypeChange = (type: StepType) => {\r\n    setCurrentStepType(type);\r\n    // 清空当前参数，设置默认参数\r\n    const defaultParameters = getDefaultParametersForType(type);\r\n    form.setFieldsValue({ parameters: defaultParameters });\r\n  };\r\n\r\n  // 获取默认参数\r\n  const getDefaultParametersForType = (type: StepType) => {\r\n    switch (type) {\r\n      case 'tap':\r\n        return {\r\n          method: 'coordinates',\r\n          coordinates: { x: 0, y: 0 },\r\n          duration: 100,\r\n          pressure: 1.0,\r\n        } as TapStepParameters;\r\n      case 'input':\r\n        return {\r\n          text: '',\r\n          method: 'element',\r\n          clearBefore: true,\r\n        } as InputStepParameters;\r\n      case 'swipe':\r\n        return {\r\n          startCoordinates: { x: 0, y: 0 },\r\n          endCoordinates: { x: 0, y: 0 },\r\n          duration: 300,\r\n        } as SwipeStepParameters;\r\n      case 'wait':\r\n        return {\r\n          duration: 1000,\r\n          condition: { \r\n            type: 'custom' as const,\r\n            timeout: 5000\r\n          },\r\n        } as WaitStepParameters;\r\n      case 'loop':\r\n        return {\r\n          count: 1,\r\n          steps: [],\r\n        } as LoopStepParameters;\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // 处理参数变化\r\n  const handleParametersChange = (params: any) => {\r\n    const currentParams = form.getFieldValue('parameters') || {};\r\n    const newParams = { ...currentParams, ...params };\r\n    form.setFieldsValue({ parameters: newParams });\r\n  };\r\n\r\n  // 保存步骤\r\n  const handleSave = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const values = await form.validateFields();\r\n      \r\n      const newStep: ScriptStep = {\r\n        id: step?.id || `step_${Date.now()}`,\r\n        type: currentStepType,\r\n        name: values.name,\r\n        description: values.description || '',\r\n        enabled: values.enabled !== false,\r\n        parameters: values.parameters || {},\r\n        status: step?.status || 'pending',\r\n        order: step?.order || 0,\r\n        createdAt: step?.createdAt || Date.now(),\r\n        updatedAt: Date.now(),\r\n      };\r\n\r\n      onSave(newStep);\r\n      message.success(isNew ? '步骤创建成功' : '步骤更新成功');\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('保存步骤失败:', error);\r\n      message.error('保存失败，请检查输入内容');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 测试步骤\r\n  const handleTest = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      const testStep: ScriptStep = {\r\n        id: 'test_step',\r\n        type: currentStepType,\r\n        name: values.name,\r\n        description: values.description || '',\r\n        enabled: true,\r\n        parameters: values.parameters || {},\r\n        status: 'pending',\r\n        order: 0,\r\n        createdAt: Date.now(),\r\n        updatedAt: Date.now(),\r\n      };\r\n\r\n      onTest?.(testStep);\r\n    } catch (error) {\r\n      message.error('请先完善步骤配置');\r\n    }\r\n  };\r\n\r\n  // 渲染参数配置\r\n  const renderParameterConfig = () => {\r\n    switch (currentStepType) {\r\n      case 'tap':\r\n        return (\r\n          <TapParameters\r\n            parameters={form.getFieldValue('parameters') || {}}\r\n            onParametersChange={handleParametersChange}\r\n            onOpenSelector={onOpenPageSelector}\r\n            loading={loading}\r\n          />\r\n        );\r\n      \r\n      case 'input':\r\n        return (\r\n          <Alert\r\n            message=\"输入参数配置\"\r\n            description=\"输入参数配置组件开发中...\"\r\n            type=\"info\"\r\n            showIcon\r\n          />\r\n        );\r\n      \r\n      case 'swipe':\r\n        return (\r\n          <Alert\r\n            message=\"滑动参数配置\"\r\n            description=\"滑动参数配置组件开发中...\"\r\n            type=\"info\"\r\n            showIcon\r\n          />\r\n        );\r\n      \r\n      case 'wait':\r\n        return (\r\n          <Alert\r\n            message=\"等待参数配置\"\r\n            description=\"等待参数配置组件开发中...\"\r\n            type=\"info\"\r\n            showIcon\r\n          />\r\n        );\r\n      \r\n      case 'loop':\r\n        return (\r\n          <Alert\r\n            message=\"循环参数配置\"\r\n            description=\"循环参数配置组件开发中...\"\r\n            type=\"info\"\r\n            showIcon\r\n          />\r\n        );\r\n      \r\n      default:\r\n        return (\r\n          <Alert\r\n            message=\"参数配置\"\r\n            description=\"请先选择步骤类型\"\r\n            type=\"warning\"\r\n            showIcon\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  // 渲染验证状态\r\n  const renderValidationStatus = () => {\r\n    if (!validation) return null;\r\n\r\n    const { isValid, errors, warnings } = validation;\r\n    \r\n    return (\r\n      <Space direction=\"vertical\" ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor-Refactored.tsx",
        "start": 77,
        "end": 275,
        "startLoc": {
          "line": 77,
          "column": 3,
          "position": 461
        },
        "endLoc": {
          "line": 275,
          "column": 2,
          "position": 2097
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor.tsx",
        "start": 72,
        "end": 270,
        "startLoc": {
          "line": 72,
          "column": 3,
          "position": 422
        },
        "endLoc": {
          "line": 270,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ">\r\n                {warnings.map((warning, index) => (\r\n                  <li key={index}>{warning}</li>\r\n                ))}\r\n              </ul>\r\n            }\r\n            type=\"warning\"\r\n            showIcon\r\n          />\r\n        )}\r\n      </Space>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={`${isNew ? '新建' : '编辑'}步骤`}\r\n      open={visible}\r\n      onCancel={onClose}\r\n      width",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor-Refactored.tsx",
        "start": 295,
        "end": 314,
        "startLoc": {
          "line": 295,
          "column": 2,
          "position": 2288
        },
        "endLoc": {
          "line": 314,
          "column": 6,
          "position": 2428
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor.tsx",
        "start": 290,
        "end": 309,
        "startLoc": {
          "line": 290,
          "column": 3,
          "position": 2215
        },
        "endLoc": {
          "line": 309,
          "column": 7,
          "position": 2355
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "}\r\n      footer={\r\n        <Space>\r\n          <Button onClick={onClose} disabled={loading}>\r\n            取消\r\n          </Button>\r\n          {onTest && (\r\n            <Button\r\n              icon={<PlayCircleOutlined />}\r\n              onClick={handleTest}\r\n              disabled={loading}\r\n            >\r\n              测试\r\n            </Button>\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<SaveOutlined />}\r\n            onClick={handleSave}\r\n            loading={loading}\r\n          >\r\n            保存\r\n          </Button>\r\n        </Space>\r\n      }\r\n      styles",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor-Refactored.tsx",
        "start": 314,
        "end": 339,
        "startLoc": {
          "line": 314,
          "column": 4,
          "position": 2432
        },
        "endLoc": {
          "line": 339,
          "column": 7,
          "position": 2582
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor.tsx",
        "start": 308,
        "end": 333,
        "startLoc": {
          "line": 308,
          "column": 8,
          "position": 2351
        },
        "endLoc": {
          "line": 333,
          "column": 2,
          "position": 2501
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ">\r\n          <TabPane tab=\"基础配置\" key=\"basic\">\r\n            <BasicConfig\r\n              stepType={currentStepType}\r\n              onTypeChange={handleTypeChange}\r\n              form={form}\r\n              loading={loading}\r\n            />\r\n          </TabPane>\r\n          \r\n          <TabPane tab=\"参数配置\" key=\"parameters\">\r\n            {renderParameterConfig()}\r\n          </TabPane>\r\n          \r\n          {validation && (\r\n            <TabPane \r\n              tab={\r\n                <Space>\r\n                  <span>验证结果</span>\r\n                  {validation.isValid ? (\r\n                    <CheckCircleOutlined style={{ color: token.colorSuccess }} ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor-Refactored.tsx",
        "start": 359,
        "end": 379,
        "startLoc": {
          "line": 359,
          "column": 9,
          "position": 2693
        },
        "endLoc": {
          "line": 379,
          "column": 2,
          "position": 2836
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\StepEditor.tsx",
        "start": 342,
        "end": 368,
        "startLoc": {
          "line": 342,
          "column": 2,
          "position": 2557
        },
        "endLoc": {
          "line": 368,
          "column": 15,
          "position": 2712
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ", null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\script-builder\\components\\ScriptBuilderContainer.tsx",
        "start": 259,
        "end": 265,
        "startLoc": {
          "line": 259,
          "column": 14,
          "position": 1755
        },
        "endLoc": {
          "line": 265,
          "column": 2,
          "position": 1845
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeConfigPanel.tsx",
        "start": 122,
        "end": 127,
        "startLoc": {
          "line": 122,
          "column": 12,
          "position": 1020
        },
        "endLoc": {
          "line": 127,
          "column": 15,
          "position": 1108
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= useCallback((nodeId: string) => {\r\n    setExpandedNodes(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(nodeId)) {\r\n        newSet.delete(nodeId);\r\n      } else {\r\n        newSet.add(nodeId);\r\n      }\r\n      return newSet;\r\n    });\r\n  }, []);\r\n\r\n  // 展开所有节点",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\page-analyzer\\hooks\\useElementTree.ts",
        "start": 54,
        "end": 66,
        "startLoc": {
          "line": 54,
          "column": 2,
          "position": 486
        },
        "endLoc": {
          "line": 66,
          "column": 10,
          "position": 601
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\tree-view\\hooks\\useTreeState.ts",
        "start": 78,
        "end": 90,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 782
        },
        "endLoc": {
          "line": 90,
          "column": 6,
          "position": 897
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "background: colors.surface, border: `1px solid ${colors.border}` }}\r\n      headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n      bodyStyle={{ background: colors.surface }}\r\n    >\r\n      <Alert\r\n        message={<Text style={{ color: '#fff' }}><",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\FieldListCard.tsx",
        "start": 39,
        "end": 44,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 330
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 429
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\RealtimeEditorCard.tsx",
        "start": 17,
        "end": 22,
        "startLoc": {
          "line": 17,
          "column": 2,
          "position": 184
        },
        "endLoc": {
          "line": 22,
          "column": 7,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ">}\r\n      style={{ background: colors.surface, border: `1px solid ${colors.border}` }}\r\n      headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n      bodyStyle={{ background: colors.surface }}\r\n    >\r\n      <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\DisplayNameCard.tsx",
        "start": 20,
        "end": 25,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 187
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 277
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\FieldListCard.tsx",
        "start": 37,
        "end": 21,
        "startLoc": {
          "line": 37,
          "column": 6,
          "position": 317
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 264
        }
      }
    },
    {
      "format": "javascript",
      "lines": 6,
      "fragment": " }}>\r\n          <div><Text style={{ color: textStyles.subtle.color, fontSize: 11 }}>📊 使用频次: {values.usageCount}</Text></div>\r\n          <div><Text style={{ color: textStyles.subtle.color, fontSize: 11 }}>🕐 最后使用: {values.lastUpdated}</Text></div>\r\n        </div>\r\n        <div style={{ padding: 8, background: colors.surfaceAlt, borderRadius: 4, border: `1px solid ${colors.border}` }}>\r\n          <Text style={{ color: textStyles.subtle.color, fontSize: 10",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\CachedMappingCard.tsx",
        "start": 36,
        "end": 41,
        "startLoc": {
          "line": 36,
          "column": 2,
          "position": 507
        },
        "endLoc": {
          "line": 41,
          "column": 3,
          "position": 673
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\DisplayNameCard.tsx",
        "start": 32,
        "end": 39,
        "startLoc": {
          "line": 32,
          "column": 16,
          "position": 515
        },
        "endLoc": {
          "line": 39,
          "column": 3,
          "position": 683
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "</Tag></span>}\r\n      style={{ background: colors.surface, border: `1px solid ${colors.border}` }}\r\n      headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n      bodyStyle={{ background: colors.surface }}\r\n    >\r\n      <div",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\CachedMappingCard.tsx",
        "start": 26,
        "end": 31,
        "startLoc": {
          "line": 26,
          "column": 4,
          "position": 225
        },
        "endLoc": {
          "line": 31,
          "column": 4,
          "position": 321
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\DisplayNameCard.tsx",
        "start": 20,
        "end": 21,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 182
        },
        "endLoc": {
          "line": 21,
          "column": 6,
          "position": 265
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "</Tag></span>}\r\n      style={{ background: colors.surface, border: `1px solid ${colors.border}` }}\r\n      headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n      bodyStyle={{ background: colors.surface }}\r\n    >\r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: 8 }}>\r\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\AiRecommendationsCard.tsx",
        "start": 17,
        "end": 23,
        "startLoc": {
          "line": 17,
          "column": 5,
          "position": 153
        },
        "endLoc": {
          "line": 23,
          "column": 2,
          "position": 276
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\DisplayNameCard.tsx",
        "start": 20,
        "end": 32,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 182
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 348
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "</Tag></span>}\r\n      style={{ background: colors.surface, border: `1px solid ${colors.border}` }}\r\n      headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n      bodyStyle={{ background: colors.surface }}\r\n    >\r\n      <div style={{ display: 'flex', flexDirection: 'column', gap: 8, maxHeight: 200, overflowY: 'auto' }}>\r\n        {commands",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\AdbCommandsCard.tsx",
        "start": 26,
        "end": 32,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 245
        },
        "endLoc": {
          "line": 32,
          "column": 9,
          "position": 379
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\DisplayNameCard.tsx",
        "start": 20,
        "end": 23,
        "startLoc": {
          "line": 20,
          "column": 5,
          "position": 182
        },
        "endLoc": {
          "line": 23,
          "column": 16,
          "position": 277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(content: string): string {\r\n    let hash = 0;\r\n    for (let i = 0; i < content.length; i++) {\r\n      const char = content.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash;\r\n    }\r\n    return hash",
      "tokens": 0,
      "firstFile": {
        "name": "src\\utils\\xpath\\cache\\XmlReuseManager.ts",
        "start": 412,
        "end": 419,
        "startLoc": {
          "line": 412,
          "column": 20,
          "position": 3115
        },
        "endLoc": {
          "line": 419,
          "column": 5,
          "position": 3229
        }
      },
      "secondFile": {
        "name": "src\\utils\\xpath\\cache\\XmlReuseManager.ts",
        "start": 146,
        "end": 153,
        "startLoc": {
          "line": 146,
          "column": 14,
          "position": 1007
        },
        "endLoc": {
          "line": 153,
          "column": 5,
          "position": 1121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "hashString(str: string): string {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash;\r\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\unified-view-data\\utils\\ElementEnhancer.ts",
        "start": 304,
        "end": 310,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 2731
        },
        "endLoc": {
          "line": 310,
          "column": 2,
          "position": 2840
        }
      },
      "secondFile": {
        "name": "src\\utils\\xpath\\cache\\xpath-precompiler-cache.ts",
        "start": 117,
        "end": 122,
        "startLoc": {
          "line": 117,
          "column": 2,
          "position": 718
        },
        "endLoc": {
          "line": 122,
          "column": 12,
          "position": 825
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": "}>\r\n              累计关注用户数量\r\n            </Text>\r\n          </Space>\r\n        </Card>\r\n      </Col>\r\n\r\n      {/* 今日关注 */}\r\n      <Col xs={24} sm={12} md={6}>\r\n        <Card\r\n          style={{\r\n            borderRadius: token.borderRadiusLG,\r\n            background: `linear-gradient(135deg, ${token.colorSuccess}, ${token.colorSuccessBg})`\r\n          }}\r\n          bodyStyle={{ padding: token.paddingLG }}\r\n        >\r\n          <Space direction=\"vertical\" size={token.sizeXS} style={{ width: '100%' }}>\r\n            <Space align=\"center\">\r\n              <TrophyOutlined \r\n                style={{ \r\n                  fontSize: token.fontSizeHeading3,\r\n                  color: 'white'\r\n                }} \r\n              />\r\n              <Text style={{ color: 'white', fontSize: token.fontSize }}>\r\n                今日关注\r\n              </Text>\r\n            </Space>\r\n            <Statistic\r\n              value={statistics.daily_follows",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsCards.tsx",
        "start": 63,
        "end": 92,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 496
        },
        "endLoc": {
          "line": 92,
          "column": 14,
          "position": 744
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsCards.tsx",
        "start": 33,
        "end": 56,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 230
        },
        "endLoc": {
          "line": 56,
          "column": 14,
          "position": 448
        }
      }
    },
    {
      "format": "javascript",
      "lines": 30,
      "fragment": "}\r\n              valueStyle={{\r\n                color: 'white',\r\n                fontSize: token.fontSizeHeading1,\r\n                fontWeight: token.fontWeightStrong\r\n              }}\r\n            />\r\n            <Text style={{ color: 'rgba(255, 255, 255, 0.8)', fontSize: token.fontSizeSM }}>\r\n              今日新增关注数\r\n            </Text>\r\n          </Space>\r\n        </Card>\r\n      </Col>\r\n\r\n      {/* 成功率 */}\r\n      <Col xs={24} sm={12} md={6}>\r\n        <Card\r\n          style={{\r\n            borderRadius: token.borderRadiusLG,\r\n            background: token.colorBgContainer,\r\n            border: `1px solid ${token.colorBorder}`\r\n          }}\r\n          bodyStyle={{ padding: token.paddingLG }}\r\n        >\r\n          <Space direction=\"vertical\" size={token.sizeXS} style={{ width: '100%' }}>\r\n            <Space align=\"center\">\r\n              <PercentageOutlined \r\n                style={{ \r\n                  fontSize: token.fontSizeHeading3,\r\n                  color: token",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsCards.tsx",
        "start": 92,
        "end": 121,
        "startLoc": {
          "line": 92,
          "column": 14,
          "position": 745
        },
        "endLoc": {
          "line": 121,
          "column": 7,
          "position": 987
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsCards.tsx",
        "start": 56,
        "end": 84,
        "startLoc": {
          "line": 56,
          "column": 14,
          "position": 449
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 687
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "}\r\n      <Col xs={24} sm={12} md={6}>\r\n        <Card\r\n          style={{\r\n            borderRadius: token.borderRadiusLG,\r\n            background: token.colorBgContainer,\r\n            border: `1px solid ${token.colorBorder}`\r\n          }}\r\n          bodyStyle={{ padding: token.paddingLG }}\r\n        >\r\n          <Space direction=\"vertical\" size={token.sizeXS} style={{ width: '100%' }}>\r\n            <Space align=\"center\">\r\n              <DollarOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsCards.tsx",
        "start": 147,
        "end": 159,
        "startLoc": {
          "line": 147,
          "column": 11,
          "position": 1133
        },
        "endLoc": {
          "line": 159,
          "column": 15,
          "position": 1277
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsCards.tsx",
        "start": 106,
        "end": 118,
        "startLoc": {
          "line": 106,
          "column": 10,
          "position": 829
        },
        "endLoc": {
          "line": 118,
          "column": 19,
          "position": 973
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [editingStep, setEditingStep] = useState<ExtendedSmartScriptStep | null>(null);\r\n  const [internalForm] = !externalForm ? Form.useForm() : [null];\r\n  const form = externalForm ?? internalForm;\r\n\r\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 71,
        "end": 76,
        "startLoc": {
          "line": 71,
          "column": 3,
          "position": 629
        },
        "endLoc": {
          "line": 76,
          "column": 6,
          "position": 720
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\step-form\\useStepFormModular.tsx",
        "start": 35,
        "end": 40,
        "startLoc": {
          "line": 35,
          "column": 3,
          "position": 242
        },
        "endLoc": {
          "line": 40,
          "column": 9,
          "position": 333
        }
      }
    },
    {
      "format": "javascript",
      "lines": 229,
      "fragment": "={{ fontWeight: \"bold\", marginBottom: \"4px\" }}>\r\n                🚀 快捷步骤生成成功！\r\n              </div>\r\n              <div style={{ fontSize: \"12px\", color: \"#666\" }}>\r\n                {stepInfo.name} - 请点击确定完成创建\r\n              </div>\r\n            </div>\r\n          ),\r\n          duration: 4,\r\n        });\r\n        // 🆕 快捷模式下尝试自动保存：在打开弹窗后短延时触发保存，避免用户忘记点击\"确定\"导致未生成步骤\r\n        // 说明：若表单项尚未完成挂载或校验不通过，handleSaveStep 内部会安全地记录并保留弹窗，用户仍可手动确认\r\n        setTimeout(async () => {\r\n          console.log('🤖 [快捷模式] 开始自动保存步骤...');\r\n          console.log('🔍 [快捷模式] 表单字段状态检查:', {\r\n            step_type: form.getFieldValue('step_type'),\r\n            name: form.getFieldValue('name'),\r\n            description: form.getFieldValue('description'),\r\n            matching: form.getFieldValue('matching'),\r\n            elementBinding: form.getFieldValue('elementBinding'),\r\n            xmlSnapshot: form.getFieldValue('xmlSnapshot')\r\n          });\r\n          // 🔧 快捷模式允许跳过严格XML验证\r\n          setAllowSaveWithoutXmlOnce(true);\r\n          try {\r\n            await handleSaveStep();\r\n            console.log('✅ [快捷模式] 自动保存成功');\r\n          } catch (e) {\r\n            console.warn('⚠️ [快捷模式] 自动保存失败（用户可手动点击确定）:', e);\r\n          }\r\n        }, 200);\r\n      } else {\r\n  messageApi.success({\r\n          content: (\r\n            <div>\r\n              <div style={{ fontWeight: \"bold\", marginBottom: \"4px\" }}>\r\n                🎯 智能步骤生成成功！\r\n              </div>\r\n              <div style={{ fontSize: \"12px\", color: \"#666\" }}>\r\n                {stepInfo.name}\r\n              </div>\r\n            </div>\r\n          ),\r\n          duration: 3,\r\n        });\r\n      }\r\n      SmartStepGenerator.previewStepInfo(element);\r\n    } catch (error) {\r\n      console.error(\"❌ 智能步骤生成失败:\", error);\r\n  messageApi.error(\"智能步骤生成失败\");\r\n    }\r\n  };\r\n\r\n  const onApplyCriteria = (criteria: any) => {\r\n    console.log('🎯 [usePageFinder] onApplyCriteria 被调用，criteria:', criteria);\r\n    try {\r\n      const matchCriteria: UIMatchCriteria = {\r\n        strategy: criteria.strategy as UIMatchStrategy,\r\n        fields: criteria.fields,\r\n        values: criteria.values,\r\n        includes: criteria.includes,\r\n        excludes: criteria.excludes,\r\n      };\r\n      const nextTitle: string = buildShortTitleFromCriteria(matchCriteria);\r\n      const nextDesc: string = buildShortDescriptionFromCriteria(matchCriteria);\r\n\r\n      if (editingStepForParams) {\r\n        const stepId = editingStepForParams.id;\r\n        setSteps((prev) =>\r\n          prev.map((s) => {\r\n            if (s.id !== stepId) return s;\r\n            const p: any = { ...(s.parameters || {}) };\r\n            p.matching = {\r\n              strategy: criteria.strategy,\r\n              fields: criteria.fields,\r\n              values: criteria.values,\r\n              includes: criteria.includes,\r\n              excludes: criteria.excludes,\r\n              // 🆕 添加正则表达式相关参数\r\n              ...(criteria.matchMode && { matchMode: criteria.matchMode }),\r\n              ...(criteria.regexIncludes && { regexIncludes: criteria.regexIncludes }),\r\n              ...(criteria.regexExcludes && { regexExcludes: criteria.regexExcludes }),\r\n              updatedAt: Date.now(),\r\n            };\r\n            p.elementLocator = p.elementLocator || {};\r\n            p.elementLocator.additionalInfo = {\r\n              ...(p.elementLocator.additionalInfo || {}),\r\n              xpath: criteria.preview?.xpath || p.elementLocator.additionalInfo?.xpath,\r\n              resourceId: p.elementLocator.additionalInfo?.resourceId || criteria.values[\"resource-id\"],\r\n              text: p.elementLocator.additionalInfo?.text || criteria.values[\"text\"],\r\n              contentDesc: p.elementLocator.additionalInfo?.contentDesc || criteria.values[\"content-desc\"],\r\n              className: p.elementLocator.additionalInfo?.className || criteria.values[\"class\"],\r\n              bounds: criteria.preview?.bounds || p.elementLocator.additionalInfo?.bounds || p.bounds,\r\n            };\r\n            if (criteria.preview?.bounds) {\r\n              p.bounds = criteria.preview.bounds;\r\n            } else if (criteria.values[\"bounds\"]) {\r\n              p.bounds = criteria.values[\"bounds\"];\r\n            }\r\n            if (criteria.values[\"resource-id\"]) p.resource_id = criteria.values[\"resource-id\"];\r\n            if (criteria.values[\"text\"]) p.text = criteria.values[\"text\"];\r\n            if (criteria.values[\"content-desc\"]) p.content_desc = criteria.values[\"content-desc\"];\r\n            if (criteria.values[\"class\"]) p.class_name = criteria.values[\"class\"];\r\n\r\n            // 🆕 保存元素绑定（elementBinding）：需要 xmlSnapshot 与 preview.xpath（优先来自 enhancedElement.nodePath.xpath）\r\n            try {\r\n              const snap = (p.xmlSnapshot || form.getFieldValue(\"xmlSnapshot\")) as XmlSnapshot | undefined;\r\n              const xpath: string | undefined = criteria.preview?.xpath;\r\n              if (snap && typeof snap.xmlContent === 'string' && xpath && xpath.trim()) {\r\n                const bindingSnapshot = {\r\n                  source: 'memory' as const,\r\n                  text: snap.xmlContent,\r\n                  sha1: snap.xmlHash,\r\n                  capturedAt: snap.timestamp || Date.now(),\r\n                  deviceId: snap.deviceInfo?.deviceId,\r\n                };\r\n                // 延迟加载以避免顶部循环依赖\r\n                const binding = createBindingFromSnapshotAndXPath(bindingSnapshot, xpath);\r\n                if (binding) {\r\n                  p.elementBinding = binding;\r\n                }\r\n              }\r\n            } catch (e) {\r\n              console.warn('elementBinding 生成失败（允许跳过）：', e);\r\n            }\r\n            \r\n            const patched = { ...s, parameters: p } as any;\r\n            patched.name = nextTitle || s.name;\r\n            patched.description = nextDesc || s.description;\r\n            return patched;\r\n          })\r\n        );\r\n        setShowPageAnalyzer(false);\r\n        setIsQuickAnalyzer(false);\r\n        setEditingStepForParams(null);\r\n      } else {\r\n        form.setFieldValue(\"step_type\", SmartActionType.SMART_FIND_ELEMENT);\r\n        form.setFieldValue(\"name\", nextTitle || \"查找元素\");\r\n        form.setFieldValue(\"description\", nextDesc || \"根据匹配条件查找元素\");\r\n        form.setFieldValue(\"matching\", {\r\n          strategy: criteria.strategy,\r\n          fields: criteria.fields,\r\n          values: criteria.values,\r\n          includes: criteria.includes,\r\n          excludes: criteria.excludes,\r\n          // 🆕 同步正则/匹配模式到表单\r\n          ...(criteria.matchMode ? { matchMode: criteria.matchMode } : {}),\r\n          ...(criteria.regexIncludes ? { regexIncludes: criteria.regexIncludes } : {}),\r\n          ...(criteria.regexExcludes ? { regexExcludes: criteria.regexExcludes } : {}),\r\n          updatedAt: Date.now(),\r\n        });\r\n\r\n        const additionalInfo = {\r\n          xpath: criteria.preview?.xpath,\r\n          resourceId: criteria.values[\"resource-id\"],\r\n          text: criteria.values[\"text\"],\r\n          contentDesc: criteria.values[\"content-desc\"],\r\n          className: criteria.values[\"class\"],\r\n          bounds: criteria.preview?.bounds,\r\n        };\r\n        const builtLocator: ElementLocator | undefined =\r\n          additionalInfo.xpath || criteria.preview?.bounds\r\n            ? {\r\n                selectedBounds: (() => {\r\n                  const b = criteria.preview?.bounds;\r\n                  if (!b) return { left: 0, top: 0, right: 0, bottom: 0 };\r\n                  if (typeof b === \"string\") {\r\n                    return parseBoundsString(b) || { left: 0, top: 0, right: 0, bottom: 0 };\r\n                  }\r\n                  return b;\r\n                })(),\r\n                elementPath: criteria.preview?.xpath || \"\",\r\n                confidence: 0.8,\r\n                additionalInfo: {\r\n                  ...additionalInfo,\r\n                  bounds:\r\n                    typeof criteria.preview?.bounds === \"string\"\r\n                      ? criteria.preview?.bounds\r\n                      : criteria.preview?.bounds\r\n                      ? rectToBoundsString(criteria.preview?.bounds)\r\n                      : undefined,\r\n                },\r\n              }\r\n            : undefined;\r\n        if (builtLocator) {\r\n          form.setFieldValue(\"elementLocator\", builtLocator);\r\n        }\r\n\r\n        const snap = buildXmlSnapshotFromContext({\r\n          currentXmlContent,\r\n          currentDeviceInfo,\r\n          currentPageInfo,\r\n          fallbackDeviceId: currentDeviceId,\r\n          fallbackDeviceName: devices.find((d) => d.id === currentDeviceId)?.name,\r\n        });\r\n        if (snap) form.setFieldValue(\"xmlSnapshot\", snap);\r\n\r\n        // 🆕 新建步骤表单态：生成并写入 elementBinding（随表单保存）\r\n        try {\r\n          const xpath: string | undefined = criteria.preview?.xpath;\r\n          const effectiveSnap: XmlSnapshot | undefined = snap || form.getFieldValue(\"xmlSnapshot\");\r\n          if (effectiveSnap && typeof effectiveSnap.xmlContent === 'string' && xpath && xpath.trim()) {\r\n            const bindingSnapshot = {\r\n              source: 'memory' as const,\r\n              text: effectiveSnap.xmlContent,\r\n              sha1: effectiveSnap.xmlHash,\r\n              capturedAt: effectiveSnap.timestamp || Date.now(),\r\n              deviceId: effectiveSnap.deviceInfo?.deviceId,\r\n            };\r\n            const binding = createBindingFromSnapshotAndXPath(bindingSnapshot, xpath);\r\n            if (binding) {\r\n              form.setFieldValue('elementBinding', binding);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.warn('elementBinding（新建表单）生成失败（允许跳过）：', e);\r\n        }\r\n\r\n        setShowPageAnalyzer(false);\r\n        setIsQuickAnalyzer(false);\r\n        setEditingStepForParams(null);\r\n  setEditingStep(null);\r\n  setAllowSaveWithoutXmlOnce(true);\r\n  showAddModal({ resetFields: false });\r\n\r\n  messageApi.success({\r\n          content: (\r\n            <div>\r\n              <div style={{ fontWeight: \"bold\", marginBottom: 4",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 568,
        "end": 796,
        "startLoc": {
          "line": 568,
          "column": 6,
          "position": 6396
        },
        "endLoc": {
          "line": 796,
          "column": 2,
          "position": 9086
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 552,
        "end": 603,
        "startLoc": {
          "line": 552,
          "column": 6,
          "position": 6233
        },
        "endLoc": {
          "line": 603,
          "column": 6,
          "position": 6737
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "text: element.text,\r\n              element_text: element.text,\r\n              element_type: element.element_type,\r\n              resource_id: element.resource_id,\r\n              content_desc: sanitizeContentDesc(element.content_desc),\r\n              bounds: element.bounds\r\n                ? `[${element.bounds.left},${element.bounds.top}][${element.bounds.right},${element.bounds.bottom}]`\r\n                : existingStep",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 455,
        "end": 462,
        "startLoc": {
          "line": 455,
          "column": 15,
          "position": 5060
        },
        "endLoc": {
          "line": 462,
          "column": 13,
          "position": 5162
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 294,
        "end": 301,
        "startLoc": {
          "line": 294,
          "column": 9,
          "position": 3057
        },
        "endLoc": {
          "line": 301,
          "column": 10,
          "position": 3159
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "const textLike = [\"text\", \"content-desc\"] as const;\r\n              const matchMode: Record<string, \"equals\" | \"contains\" | \"regex\"> = {};\r\n              const regexIncludes: Record<string, string[]> = {};\r\n              for (const f of built.fields) {\r\n                if ((textLike as readonly string[]).includes(f) && typeof built.values[f] === 'string') {\r\n                  const v = String(built.values[f]).trim();\r\n                  if (v) {\r\n                    matchMode[f] = 'regex';\r\n                    regexIncludes[f] = [`^${escapeRegex(v)}$`];\r\n                  }\r\n                }\r\n              }\r\n              updatedParameters",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 474,
        "end": 486,
        "startLoc": {
          "line": 474,
          "column": 15,
          "position": 5310
        },
        "endLoc": {
          "line": 486,
          "column": 18,
          "position": 5518
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 420,
        "end": 432,
        "startLoc": {
          "line": 420,
          "column": 9,
          "position": 4595
        },
        "endLoc": {
          "line": 432,
          "column": 5,
          "position": 4803
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ".index) : undefined,\r\n                },\r\n                ...(Object.keys(matchMode).length ? { matchMode } : {}),\r\n                ...(Object.keys(regexIncludes).length ? { regexIncludes } : {}),\r\n                updatedAt: Date.now(),\r\n              };",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 492,
        "end": 497,
        "startLoc": {
          "line": 492,
          "column": 2,
          "position": 5595
        },
        "endLoc": {
          "line": 497,
          "column": 2,
          "position": 5680
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\usePageFinder.tsx",
        "start": 438,
        "end": 443,
        "startLoc": {
          "line": 438,
          "column": 16,
          "position": 4869
        },
        "endLoc": {
          "line": 443,
          "column": 2,
          "position": 4954
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ";\r\n        if (!effectiveXmlContent && (parameters as any).xmlCacheId) {\r\n          try {\r\n            const cm = XmlCacheManager.getInstance();\r\n            const ce = cm.getCachedXml((parameters as any).xmlCacheId);\r\n            if (ce?.xmlContent) {\r\n              effectiveXmlContent = ce.xmlContent;\r\n              effectiveDeviceInfo = effectiveDeviceInfo || {\r\n                deviceId: ce.deviceId || \"unknown\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 113,
        "end": 121,
        "startLoc": {
          "line": 113,
          "column": 18,
          "position": 1387
        },
        "endLoc": {
          "line": 121,
          "column": 10,
          "position": 1504
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 167,
        "end": 175,
        "startLoc": {
          "line": 167,
          "column": 18,
          "position": 1906
        },
        "endLoc": {
          "line": 175,
          "column": 10,
          "position": 2023
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\r\n          };\r\n\r\n          if (missingXml) {\r\n            const hasLocatorOrMatching = Boolean(\r\n              (parameters as any)?.elementLocator ||\r\n                (parameters as any)?.matching ||\r\n                (parameters as any)?.bounds ||\r\n                (parameters as any)?.xpath\r\n            );\r\n            if",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 168,
        "end": 178,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 2006
        },
        "endLoc": {
          "line": 178,
          "column": 3,
          "position": 2101
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 264,
        "end": 274,
        "startLoc": {
          "line": 264,
          "column": 10,
          "position": 2860
        },
        "endLoc": {
          "line": 274,
          "column": 8,
          "position": 2955
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ");\r\n          message.warning({\r\n            content: (\r\n              <div>\r\n                <div style={{ fontWeight: 600, marginBottom: 6 }}>XML 快照存在问题，建议修复后再保存</div>\r\n                <pre style={{ whiteSpace: \"pre-wrap\", fontSize: 12 }}>{warnTips}</pre>\r\n              </div>\r\n            ),\r\n            duration: 3,\r\n          });\r\n        }\r\n      }\r\n\r\n      // 写入双格式 bounds（若存在 elementLocator）\r\n      if ((parameters as any)?.elementLocator?.selectedBounds) {\r\n        const sb = (parameters as any).elementLocator.selectedBounds as {\r\n          left: number;\r\n          top: number;\r\n          right: number;\r\n          bottom: number;",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 205,
        "end": 224,
        "startLoc": {
          "line": 205,
          "column": 5,
          "position": 2387
        },
        "endLoc": {
          "line": 224,
          "column": 2,
          "position": 2584
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 306,
        "end": 321,
        "startLoc": {
          "line": 306,
          "column": 5,
          "position": 3331
        },
        "endLoc": {
          "line": 321,
          "column": 2,
          "position": 3521
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "};\r\n        (parameters as any).boundsRect = sb;\r\n        (parameters as any).bounds = `[${sb.left},${sb.top}][${sb.right},${sb.bottom}]`;\r\n      }\r\n\r\n      const newStep: ExtendedSmartScriptStep = {\r\n        id: stepId",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 225,
        "end": 231,
        "startLoc": {
          "line": 225,
          "column": 9,
          "position": 2588
        },
        "endLoc": {
          "line": 231,
          "column": 7,
          "position": 2673
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 321,
        "end": 327,
        "startLoc": {
          "line": 321,
          "column": 2,
          "position": 3521
        },
        "endLoc": {
          "line": 327,
          "column": 12,
          "position": 3606
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ",\r\n        step_type,\r\n        name,\r\n        description,\r\n        parameters,\r\n        enabled: true,\r\n        order: editingStep?.order || steps.length + 1,\r\n        find_condition: null,\r\n        verification: null,\r\n        retry_config: null,\r\n        fallback_actions: [],\r\n        pre_conditions: [],\r\n        post_conditions: [],\r\n      };\r\n\r\n      // 若参数缺少 xmlSnapshot，但存在 xmlCacheId，则尝试从缓存回填为 xmlSnapshot（不再写入旧字段）",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 231,
        "end": 246,
        "startLoc": {
          "line": 231,
          "column": 7,
          "position": 2674
        },
        "endLoc": {
          "line": 246,
          "column": 67,
          "position": 2785
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 327,
        "end": 342,
        "startLoc": {
          "line": 327,
          "column": 2,
          "position": 3622
        },
        "endLoc": {
          "line": 342,
          "column": 45,
          "position": 3733
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ",\r\n                  confidence: p.smartAnalysis?.confidence || 0.8,\r\n                  additionalInfo: {\r\n                    xpath: p.xpath,\r\n                    resourceId: p.resource_id,\r\n                    text: p.text,\r\n                    contentDesc: p.content_desc,\r\n                    className: p.class_name,\r\n                    bounds:\r\n                      typeof p.bounds === \"string\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 317,
        "end": 326,
        "startLoc": {
          "line": 317,
          "column": 3,
          "position": 3572
        },
        "endLoc": {
          "line": 326,
          "column": 9,
          "position": 3663
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 411,
        "end": 420,
        "startLoc": {
          "line": 411,
          "column": 3,
          "position": 4518
        },
        "endLoc": {
          "line": 420,
          "column": 9,
          "position": 4609
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "? p.bounds\r\n                        : p.bounds\r\n                        ? rectToBoundsString(p.bounds)\r\n                        : undefined,\r\n                  },\r\n                }\r\n              : (p.elementLocator as ElementLocator | undefined);\r\n\r\n            const selfContainedParams = migrateToSelfContainedParameters(\r\n              newStep.parameters,\r\n              xmlSnapshot.xmlContent,\r\n              xmlSnapshot.deviceInfo,\r\n              xmlSnapshot.pageInfo\r\n            ) as",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 327,
        "end": 340,
        "startLoc": {
          "line": 327,
          "column": 25,
          "position": 3667
        },
        "endLoc": {
          "line": 340,
          "column": 3,
          "position": 3771
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 421,
        "end": 434,
        "startLoc": {
          "line": 421,
          "column": 25,
          "position": 4613
        },
        "endLoc": {
          "line": 434,
          "column": 2,
          "position": 4716
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ".element_path;\r\n              if (xpath && typeof xpath === 'string' && xpath.trim()) {\r\n                const bindingSnapshot = {\r\n                  source: 'memory' as const,\r\n                  text: xmlSnapshot.xmlContent,\r\n                  sha1: xmlSnapshot.xmlHash,\r\n                  capturedAt: xmlSnapshot.timestamp || Date.now(),\r\n                  deviceId: xmlSnapshot.deviceInfo?.deviceId,\r\n                };\r\n                const binding = createBindingFromSnapshotAndXPath(bindingSnapshot as any, xpath);\r\n                if (binding && !(selfContainedParams as any).elementBinding) {\r\n                  (selfContainedParams as any).elementBinding = binding;\r\n                }\r\n              }\r\n            } catch (e) {\r\n              console.warn('保存时生成 elementBinding 失败（允许跳过）：', e);\r\n            }\r\n\r\n            newStep.parameters = selfContainedParams;\r\n\r\n            console",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 348,
        "end": 368,
        "startLoc": {
          "line": 348,
          "column": 2,
          "position": 3872
        },
        "endLoc": {
          "line": 368,
          "column": 8,
          "position": 4097
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 440,
        "end": 459,
        "startLoc": {
          "line": 440,
          "column": 2,
          "position": 4790
        },
        "endLoc": {
          "line": 459,
          "column": 3,
          "position": 5013
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ") {\r\n        const xmlCacheManager = XmlCacheManager.getInstance();\r\n        xmlCacheManager.linkStepToXml(stepId, (parameters as any).xmlCacheId, {\r\n          elementPath: (parameters as any).element_path,\r\n          selectionContext: {\r\n            selectedBounds: (parameters as any).bounds,\r\n            searchCriteria: (parameters as any).search_criteria || (parameters as any).target_value || \"\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\saveStep.tsx",
        "start": 391,
        "end": 397,
        "startLoc": {
          "line": 391,
          "column": 10,
          "position": 4310
        },
        "endLoc": {
          "line": 397,
          "column": 3,
          "position": 4419
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\hooks\\useStepForm.tsx",
        "start": 470,
        "end": 476,
        "startLoc": {
          "line": 470,
          "column": 10,
          "position": 5122
        },
        "endLoc": {
          "line": 476,
          "column": 3,
          "position": 5231
        }
      }
    },
    {
      "format": "javascript",
      "lines": 56,
      "fragment": "={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      );\r\n    case \"boolean\":\r\n      return (\r\n        <Switch\r\n          checked={value}\r\n          onChange={onChange}\r\n          checkedChildren=\"是\"\r\n          unCheckedChildren=\"否\"\r\n        />\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <Select\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"multiselect\":\r\n      return (\r\n        <Select\r\n          mode=\"multiple\"\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"slider\":\r\n      return (\r\n        <Slider\r\n          min={param.min}\r\n          max={param.max}\r\n          step={0.1}\r\n          value={value}\r\n          onChange={onChange}\r\n          marks={{\r\n            ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\renderers.tsx",
        "start": 21,
        "end": 76,
        "startLoc": {
          "line": 21,
          "column": 12,
          "position": 162
        },
        "endLoc": {
          "line": 76,
          "column": 13,
          "position": 563
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 54,
        "end": 108,
        "startLoc": {
          "line": 54,
          "column": 12,
          "position": 431
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 832
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "}}\r\n        />\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <TextArea\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          rows={3}\r\n        />\r\n      );\r\n    default:\r\n      return (\r\n        <Input\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\renderers.tsx",
        "start": 78,
        "end": 95,
        "startLoc": {
          "line": 78,
          "column": 11,
          "position": 586
        },
        "endLoc": {
          "line": 95,
          "column": 2,
          "position": 715
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 108,
        "end": 125,
        "startLoc": {
          "line": 108,
          "column": 5,
          "position": 853
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 982
        }
      }
    },
    {
      "format": "tsx",
      "lines": 72,
      "fragment": "const renderParameterInput = (\r\n  param: any,\r\n  value: any,\r\n  onChange: (value: any) => void\r\n) => {\r\n  switch (param.type) {\r\n    case \"number\":\r\n      return (\r\n        <InputNumber\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      );\r\n    case \"boolean\":\r\n      return (\r\n        <Switch\r\n          checked={value}\r\n          onChange={onChange}\r\n          checkedChildren=\"是\"\r\n          unCheckedChildren=\"否\"\r\n        />\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <Select\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"multiselect\":\r\n      return (\r\n        <Select\r\n          mode=\"multiple\"\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"slider\":\r\n      return (\r\n        <Slider\r\n          min={param.min}\r\n          max={param.max}\r\n          step={0.1}\r\n          value={value}\r\n          onChange={onChange}\r\n          marks={{\r\n            [param.min]: param.min,\r\n            [param.max]: param.max,\r\n          }}\r\n        />\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <TextArea",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\renderers.tsx",
        "start": 12,
        "end": 83,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 84
        },
        "endLoc": {
          "line": 83,
          "column": 9,
          "position": 612
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 45,
        "end": 113,
        "startLoc": {
          "line": 45,
          "column": 1,
          "position": 353
        },
        "endLoc": {
          "line": 113,
          "column": 15,
          "position": 879
        }
      }
    },
    {
      "format": "javascript",
      "lines": 75,
      "fragment": "={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      );\r\n    case \"boolean\":\r\n      return (\r\n        <Switch\r\n          checked={value}\r\n          onChange={onChange}\r\n          checkedChildren=\"是\"\r\n          unCheckedChildren=\"否\"\r\n        />\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <Select\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"multiselect\":\r\n      return (\r\n        <Select\r\n          mode=\"multiple\"\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"slider\":\r\n      return (\r\n        <Slider\r\n          min={param.min}\r\n          max={param.max}\r\n          step={0.1}\r\n          value={value}\r\n          onChange={onChange}\r\n          marks={{\r\n            [param.min]: param.min,\r\n            [param.max]: param.max,\r\n          }}\r\n        />\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <TextArea\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          rows={3}\r\n        />\r\n      );\r\n    default:\r\n      return (\r\n        <Input\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\parameterRenderers.tsx",
        "start": 20,
        "end": 94,
        "startLoc": {
          "line": 20,
          "column": 12,
          "position": 159
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 712
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 54,
        "end": 125,
        "startLoc": {
          "line": 54,
          "column": 12,
          "position": 431
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 982
        }
      }
    },
    {
      "format": "tsx",
      "lines": 88,
      "fragment": "export const renderParameterInput = (\r\n  param: any,\r\n  value: any,\r\n  onChange: (value: any) => void\r\n) => {\r\n  switch (param.type) {\r\n    case \"number\":\r\n      return (\r\n        <InputNumber\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      );\r\n    case \"boolean\":\r\n      return (\r\n        <Switch\r\n          checked={value}\r\n          onChange={onChange}\r\n          checkedChildren=\"是\"\r\n          unCheckedChildren=\"否\"\r\n        />\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <Select\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"multiselect\":\r\n      return (\r\n        <Select\r\n          mode=\"multiple\"\r\n          placeholder={`请选择${param.label}`}\r\n          value={value}\r\n          onChange={onChange}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {param.options?.map((option: string) => (\r\n            <Option key={option} value={option}>\r\n              {option}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      );\r\n    case \"slider\":\r\n      return (\r\n        <Slider\r\n          min={param.min}\r\n          max={param.max}\r\n          step={0.1}\r\n          value={value}\r\n          onChange={onChange}\r\n          marks={{\r\n            [param.min]: param.min,\r\n            [param.max]: param.max,\r\n          }}\r\n        />\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <TextArea\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n          rows={3}\r\n        />\r\n      );\r\n    default:\r\n      return (\r\n        <Input\r\n          placeholder={`请输入${param.label}`}\r\n          value={value}\r\n          onChange={(e) => onChange(e.target.value)}\r\n        />\r\n      );\r\n  }\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\parameterRenderers.tsx",
        "start": 11,
        "end": 98,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 79
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 727
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\renderers.tsx",
        "start": 12,
        "end": 99,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 82
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 730
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "[SmartActionType.CONTACT_IMPORT_WORKFLOW]: {\r\n    name: \"通讯录导入\",\r\n    description: \"完整的通讯录导入工作流程\",\r\n    icon: \"📱\",\r\n    color: \"green\",\r\n    category: \"contact\",\r\n    parameters: [],\r\n    advanced: [\r\n      {\r\n        key: \"confidence_threshold\",\r\n        label: \"置信度阈值\",\r\n        type: \"slider\",\r\n        min: 0.1,\r\n        max: 1.0,\r\n        default: 0.8,\r\n      },\r\n      { key: \"retry_count\", label: \"重试次数\", type: \"number\", default: 3 },\r\n      {\r\n        key: \"timeout_ms\",\r\n        label: \"超时时间(ms)\",\r\n        type: \"number\",\r\n        default: 10000,\r\n      },\r\n    ],\r\n  },\r\n\r\n  // 基础交互：轻点/点击",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\constants.ts",
        "start": 10,
        "end": 36,
        "startLoc": {
          "line": 10,
          "column": 3,
          "position": 46
        },
        "endLoc": {
          "line": 36,
          "column": 14,
          "position": 253
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\contact-import\\contactActionConfigs.ts",
        "start": 8,
        "end": 33,
        "startLoc": {
          "line": 8,
          "column": 3,
          "position": 39
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 243
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\r\n    category: \"loop\",\r\n    parameters: [\r\n      {\r\n        key: \"loop_name\",\r\n        label: \"循环名称\",\r\n        type: \"text\",\r\n        required: true,\r\n        default: \"新循环\",\r\n      },\r\n      {\r\n        key: \"loop_count\",\r\n        label: \"循环次数\",\r\n        type: \"number\",\r\n        required: true,\r\n        default: 3,\r\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\constants.ts",
        "start": 477,
        "end": 493,
        "startLoc": {
          "line": 477,
          "column": 7,
          "position": 3701
        },
        "endLoc": {
          "line": 493,
          "column": 2,
          "position": 3813
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\loop-management\\loopConfigs.ts",
        "start": 17,
        "end": 33,
        "startLoc": {
          "line": 17,
          "column": 21,
          "position": 85
        },
        "endLoc": {
          "line": 33,
          "column": 4,
          "position": 197
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ") => {\r\n    const baseOrder = steps.length;\r\n    const now = Date.now();\r\n    const ensureStep = (s: any, idx: number): ExtendedSmartScriptStep => {\r\n      const step = { ...(s || {}) } as ExtendedSmartScriptStep;\r\n      if (!step.id) step.id = `step_${now + idx}_syskey`",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepListPanel.tsx",
        "start": 265,
        "end": 270,
        "startLoc": {
          "line": 265,
          "column": 4,
          "position": 2595
        },
        "endLoc": {
          "line": 270,
          "column": 9,
          "position": 2707
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepListPanel.tsx",
        "start": 235,
        "end": 240,
        "startLoc": {
          "line": 235,
          "column": 2,
          "position": 2200
        },
        "endLoc": {
          "line": 240,
          "column": 9,
          "position": 2312
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "step.order = baseOrder + idx + 1;\r\n      return step;\r\n    };\r\n    const list = Array.isArray(tpl) ? tpl.map(ensureStep) : [ensureStep(tpl, 0)];\r\n    setSteps((prev) => [...prev, ...list]);\r\n    if (list.length === 1) {\r\n      const code",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepListPanel.tsx",
        "start": 273,
        "end": 279,
        "startLoc": {
          "line": 273,
          "column": 7,
          "position": 2769
        },
        "endLoc": {
          "line": 279,
          "column": 5,
          "position": 2876
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepListPanel.tsx",
        "start": 248,
        "end": 256,
        "startLoc": {
          "line": 248,
          "column": 7,
          "position": 2391
        },
        "endLoc": {
          "line": 256,
          "column": 4,
          "position": 2502
        }
      }
    },
    {
      "format": "javascript",
      "lines": 47,
      "fragment": " }}\r\n                  />\r\n                  <Card style={{ marginBottom: 16, textAlign: 'center' }}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      size=\"large\"\r\n                      icon={<SettingOutlined />}\r\n                      onClick={onShowNavigationModal}\r\n                    >\r\n                      打开智能导航配置器\r\n                    </Button>\r\n                    <br />\r\n                    <Text\r\n                      type=\"secondary\"\r\n                      style={{ marginTop: 8, display: \"block\" }}\r\n                    >\r\n                      包含向导模式（推荐新手）和专业模式（支持自定义配置）\r\n                    </Text>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            }\r\n\r\n            // 特殊处理：如果是SMART_FIND_ELEMENT类型，显示智能页面分析器\r\n            if (stepType === SmartActionType.SMART_FIND_ELEMENT) {\r\n              return (\r\n                <div>\r\n                  <Divider orientation=\"left\">智能元素查找配置</Divider>\r\n                  <Alert\r\n                    message=\"智能元素查找通过分析当前页面UI结构，自动识别可操作元素并支持智能去重和分类，提供精确的元素定位能力\"\r\n                    type=\"info\"\r\n                    showIcon\r\n                    style={{ marginBottom: 16 }}\r\n                  />\r\n                  <Card style={{ marginBottom: 16, textAlign: 'center' }}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      size=\"large\"\r\n                      icon={<EyeOutlined />}\r\n                      onClick={onShowPageAnalyzer}\r\n                    >\r\n                      打开智能页面分析器\r\n                    </Button>\r\n                    <br />\r\n                    <Text\r\n                      type=\"secondary\"\r\n                      style={{ marginTop: 8, display: \"block\" }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 174,
        "end": 220,
        "startLoc": {
          "line": 174,
          "column": 3,
          "position": 1407
        },
        "endLoc": {
          "line": 220,
          "column": 2,
          "position": 1733
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\step-edit-modal-native\\ActionConfigSection.tsx",
        "start": 36,
        "end": 79,
        "startLoc": {
          "line": 36,
          "column": 9,
          "position": 268
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 562
        }
      }
    },
    {
      "format": "javascript",
      "lines": 84,
      "fragment": " }}\r\n                  />\r\n                  <Space wrap>\r\n                    <Button\r\n                      onClick={() => {\r\n                        // 轻点中心\r\n                        form.setFieldsValue({\r\n                          position: \"center\",\r\n                          x: undefined,\r\n                          y: undefined,\r\n                          duration_ms: 100,\r\n                          tap_mode: \"single_tap\",\r\n                        } as any);\r\n                      }}\r\n                    >\r\n                      👆 轻点屏幕中心\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        // 长按中心\r\n                        form.setFieldsValue({\r\n                          position: \"center\",\r\n                          x: undefined,\r\n                          y: undefined,\r\n                          duration_ms: 800,\r\n                          tap_mode: \"long_press\",\r\n                        } as any);\r\n                      }}\r\n                    >\r\n                      👆 长按屏幕中心\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        // 切换到绝对坐标，方便用户输入\r\n                        form.setFieldsValue({ position: \"absolute\" } as any);\r\n                      }}\r\n                    >\r\n                      🛠️ 自定义坐标（切换为绝对）\r\n                    </Button>\r\n                  </Space>\r\n\r\n                  {renderGenericParams()}\r\n                </div>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <div>\r\n                <Divider orientation=\"left\">参数配置</Divider>\r\n                  <Alert\r\n                    message={config.description}\r\n                    type=\"info\"\r\n                    showIcon\r\n                    style={{ marginBottom: 16 }}\r\n                  />                {config.parameters?.map((param) => (\r\n                  <Form.Item\r\n                    key={param.key}\r\n                    name={param.key}\r\n                    label={param.label}\r\n                    rules={\r\n                      param.required\r\n                        ? [\r\n                            {\r\n                              required: true,\r\n                              message: `请输入${param.label}`,\r\n                            },\r\n                          ]\r\n                        : []\r\n                    }\r\n                    initialValue={param.default}\r\n                  >\r\n                    {renderParameterInput(param, undefined, () => {})}\r\n                  </Form.Item>\r\n                ))}\r\n\r\n                {config.advanced && config.advanced.length > 0 && (\r\n                  <Collapse size=\"small\" style={{ marginTop: 16 }}>\r\n                    <Panel header=\"高级配置\" key=\"advanced\">\r\n                      {config.advanced.map((param) => (\r\n                        <Form.Item\r\n                          key={param.key}\r\n                          name={param.key}\r\n                          label={param.label}\r\n                          initialValue={param.default}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 288,
        "end": 371,
        "startLoc": {
          "line": 288,
          "column": 3,
          "position": 2271
        },
        "endLoc": {
          "line": 371,
          "column": 2,
          "position": 2927
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 220,
        "end": 270,
        "startLoc": {
          "line": 220,
          "column": 8,
          "position": 1731
        },
        "endLoc": {
          "line": 270,
          "column": 2,
          "position": 2149
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ">\r\n            {Object.entries(SMART_ACTION_CONFIGS).map(([key, config]) => (\r\n              <Option key={key} value={key}>\r\n                <Space>\r\n                  <span>{config.icon}</span>\r\n                  <span>{config.name}</span>\r\n                  <Tag color={config.color}>{config.category}</Tag>\r\n                </Space>\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Row",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 98,
        "end": 111,
        "startLoc": {
          "line": 98,
          "column": 11,
          "position": 808
        },
        "endLoc": {
          "line": 111,
          "column": 4,
          "position": 944
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 166,
        "end": 179,
        "startLoc": {
          "line": 166,
          "column": 2,
          "position": 1233
        },
        "endLoc": {
          "line": 179,
          "column": 10,
          "position": 1369
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "if (stepType === SmartActionType.LAUNCH_APP) {\r\n              return (\r\n                <div>\r\n                  <Divider orientation=\"left\">智能应用启动配置</Divider>\r\n                  <Alert\r\n                    message=\"使用智能应用启动组件，提供完整的应用选择和启动功能\"\r\n                    type=\"info\"\r\n                    showIcon\r\n                    style={{ marginBottom: 16 }}\r\n                  />\r\n                  <LaunchAppSmartComponent\r\n                    deviceId={currentDeviceId}\r\n                    value={\r\n                      editingStep?.parameters as LaunchAppComponentParams\r\n                    }\r\n                    onChange={(params) => {\r\n                      // 同步更新表单数据\r\n                      form.setFieldsValue(params);\r\n                    }}\r\n                    onExecute={async (params) => {\r\n                      // 这里可以添加执行逻辑\r\n                      message.success(\"应用启动测试完成\");\r\n                      return true;\r\n                    }}\r\n                  />\r\n                <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 136,
        "end": 161,
        "startLoc": {
          "line": 136,
          "column": 13,
          "position": 1161
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 1315
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 192,
        "end": 213,
        "startLoc": {
          "line": 192,
          "column": 13,
          "position": 1531
        },
        "endLoc": {
          "line": 213,
          "column": 3,
          "position": 1674
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "if (stepType === SmartActionType.SMART_FIND_ELEMENT) {\r\n              return (\r\n                <div>\r\n                  <Divider orientation=\"left\">智能元素查找配置</Divider>\r\n                  <Alert\r\n                    message=\"智能元素查找通过分析当前页面UI结构，自动识别可操作元素并支持智能去重和分类，提供精确的元素定位能力\"\r\n                    type=\"info\"\r\n                    showIcon\r\n                    style={{ marginBottom: 16 }}\r\n                  />\r\n                  <Card style={{ marginBottom: 16, textAlign: 'center' }}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      size=\"large\"\r\n                      icon={<EyeOutlined />}\r\n                      onClick={onShowPageAnalyzer}\r\n                    >\r\n                      打开智能页面分析器\r\n                    </Button>\r\n                    <br />\r\n                    <Text\r\n                      ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 198,
        "end": 219,
        "startLoc": {
          "line": 198,
          "column": 13,
          "position": 1558
        },
        "endLoc": {
          "line": 219,
          "column": 23,
          "position": 1711
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 245,
        "end": 265,
        "startLoc": {
          "line": 245,
          "column": 13,
          "position": 1904
        },
        "endLoc": {
          "line": 265,
          "column": 2,
          "position": 2057
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ") => (\r\n                    <Form.Item\r\n                      key={param.key}\r\n                      name={param.key}\r\n                      label={param.label}\r\n                      rules={\r\n                        param.required\r\n                          ? [\r\n                              {\r\n                                required: true,\r\n                                message: `请输入${param.label}`,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 241,
        "end": 251,
        "startLoc": {
          "line": 241,
          "column": 6,
          "position": 1876
        },
        "endLoc": {
          "line": 251,
          "column": 2,
          "position": 1961
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\smart-step-adder\\SmartStepEditorModal.tsx",
        "start": 277,
        "end": 282,
        "startLoc": {
          "line": 277,
          "column": 4,
          "position": 2193
        },
        "endLoc": {
          "line": 282,
          "column": 2,
          "position": 2267
        }
      }
    },
    {
      "format": "tsx",
      "lines": 35,
      "fragment": "(\r\n              <div>\r\n                <Divider orientation=\"left\">参数配置</Divider>\r\n                  <Alert\r\n                    message={config.description}\r\n                    type=\"info\"\r\n                    showIcon\r\n                    style={{ marginBottom: 16 }}\r\n                  />                {config.parameters?.map((param) => (\r\n                  <Form.Item\r\n                    key={param.key}\r\n                    name={param.key}\r\n                    label={param.label}\r\n                    rules={\r\n                      param.required\r\n                        ? [\r\n                            {\r\n                              required: true,\r\n                              message: `请输入${param.label}`,\r\n                            },\r\n                          ]\r\n                        : []\r\n                    }\r\n                    initialValue={param.default}\r\n                  >\r\n                    {renderParameterInput(param, undefined, () => {})}\r\n                  </Form.Item>\r\n                ))}\r\n\r\n                {config.advanced && config.advanced.length > 0 && (\r\n                  <Collapse size=\"small\" style={{ marginTop: 16 }}>\r\n                    <Panel header=\"高级配置\" key=\"advanced\">\r\n                      {config.advanced.map((param) => (\r\n                        <Form.Item\r\n                          ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 334,
        "end": 368,
        "startLoc": {
          "line": 334,
          "column": 2,
          "position": 2585
        },
        "endLoc": {
          "line": 368,
          "column": 27,
          "position": 2896
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepEditModal.tsx",
        "start": 231,
        "end": 267,
        "startLoc": {
          "line": 231,
          "column": 2,
          "position": 1803
        },
        "endLoc": {
          "line": 267,
          "column": 29,
          "position": 2118
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "<div style={{ marginBottom: 24 }}>\r\n        <Row align=\"middle\" justify=\"space-between\">\r\n          <Col>\r\n            <Title level={2} style={{ marginBottom: 8 }}>\r\n              🤖 智能脚本构建器\r\n            </Title>\r\n            <Paragraph type=\"secondary\">\r\n              基于AI的智能自动化脚本构建系统，支持页面识别、元素智能定位、操作验证和智能恢复\r\n            </Paragraph>\r\n          </Col>\r\n          <Col>\r\n            <Space>\r\n              <Text type=\"secondary\">目标设备:</Text>\r\n              <Select\r\n                ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\EnhancedPageHeader.tsx",
        "start": 49,
        "end": 63,
        "startLoc": {
          "line": 49,
          "column": 7,
          "position": 396
        },
        "endLoc": {
          "line": 63,
          "column": 17,
          "position": 535
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\PageHeader.tsx",
        "start": 29,
        "end": 43,
        "startLoc": {
          "line": 29,
          "column": 5,
          "position": 267
        },
        "endLoc": {
          "line": 43,
          "column": 15,
          "position": 406
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "?.(v || null)}\r\n            options={[\r\n              { label: '默认', value: '' },\r\n              { label: '玫瑰（rose）', value: 'rose' },\r\n              { label: '晴空（sky）', value: 'sky' },\r\n            ]}\r\n          />\r\n        </Space>\r\n      </Card>\r\n\r\n      {/* 操作类型说明 */}\r\n      <Card title=\"🏷️ 操作类型分类\">\r\n        <Collapse\r\n          size=\"small\"\r\n          items={[",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\ControlPanel.tsx",
        "start": 175,
        "end": 189,
        "startLoc": {
          "line": 175,
          "column": 21,
          "position": 1431
        },
        "endLoc": {
          "line": 189,
          "column": 2,
          "position": 1539
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\ControlPanel.tsx",
        "start": 162,
        "end": 169,
        "startLoc": {
          "line": 162,
          "column": 18,
          "position": 1287
        },
        "endLoc": {
          "line": 169,
          "column": 2,
          "position": 1357
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "{\r\n  region?: string[];\r\n  commentTimeRange?: number; // 天数，0表示不限制\r\n  commentTimeUnit?: 'hours' | 'days' | 'weeks' | 'months'; // 时间单位\r\n  commentTimeValue?: number; // 时间数值\r\n  minLikes?: number;\r\n  minComments?: number;\r\n  minViews?: number;\r\n  // 新增：更精细的时间控制\r\n  commentDateFrom?: string; // 起始日期 (ISO string)\r\n  commentDateTo?: string;   // 结束日期 (ISO string)\r\n  onlyRecentTrending?: boolean; // 仅最近热门评论\r\n  excludeOldReplies?: boolean;  // 排除已有大量回复的旧评论\r\n}\r\n\r\n// 获取时间范围的智能建议（导出为工具函数）",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\services\\monitoringService.ts",
        "start": 12,
        "end": 27,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 72
        },
        "endLoc": {
          "line": 27,
          "column": 24,
          "position": 211
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\types\\enhancedTypes.ts",
        "start": 25,
        "end": 38,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 151
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 287
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "getTimeRangeRecommendations(taskType: string, keywords: string[]): {\r\n  recommended: number;\r\n  explanation: string;\r\n  alternatives: Array<{ value: number; label: string; reason: string }>;\r\n} {\r\n  // 基于任务类型和关键词的智能推荐\r\n  let recommended = 7; // 默认一周\r\n  let explanation = '平衡时效性和内容丰富度的推荐设置';\r\n\r\n  // 根据关键词判断是否为热点话题\r\n  const hotKeywords = ['新闻', '热点', '突发', '紧急', '最新', '刚刚', '实时'];\r\n  const isHotTopic = keywords.some(keyword =>\r\n    hotKeywords.some(hot => keyword.includes(hot))\r\n  );\r\n\r\n  // 根据任务类型调整推荐\r\n  if (isHotTopic) {\r\n    recommended = 1;\r\n    explanation = '检测到热点关键词，建议关注最新评论';\r\n  } else if (taskType === 'industry') {\r\n    recommended = 14;\r\n    explanation = '行业监控建议使用较长时间范围，捕获更多潜在客户';\r\n  }\r\n\r\n  const alternatives = [\r\n    { value: 1, label: '24小时内', reason: '适合热点事件、紧急公关、快速响应场景' },\r\n    { value: 3, label: '3天内', reason: '适合新产品发布、活动推广、短期营销' },\r\n    { value: 7, label: '1周内', reason: '常规行业监控的黄金时间，平衡时效性和覆盖面' },\r\n    { value: 14, label: '2周内', reason: '深度行业分析、潜在客户挖掘、长期话题追踪' },\r\n    { value: 30, label: '1个月内', reason: '趋势分析、竞品监控、市场调研' },\r\n    { value: 90, label: '3个月内', reason: '长期战略分析、行业报告生成、历史数据对比' }\r\n  ];\r\n\r\n  return { recommended, explanation, alternatives };\r\n}\r\n\r\n// 时间范围格式化函数",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\services\\monitoringService.ts",
        "start": 28,
        "end": 64,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 218
        },
        "endLoc": {
          "line": 64,
          "column": 13,
          "position": 651
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\services\\timeFilterEnhancement.ts",
        "start": 52,
        "end": 114,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 484
        },
        "endLoc": {
          "line": 114,
          "column": 6,
          "position": 968
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "formatTimeRange(days: number): string {\r\n  if (days === 0) return '不限制时间';\r\n  if (days === 1) return '24小时内';\r\n  if (days < 7) return `${days}天内`;\r\n  if (days === 7) return '1周内';\r\n  if (days === 14) return '2周内';\r\n  if (days < 30) return `${Math.round(days / 7)}周内`;\r\n  if (days === 30) return '1个月内';\r\n  if (days < 90) return `${Math.round(days / 30)}个月内`;\r\n  if (days === 90) return '3个月内';\r\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\services\\monitoringService.ts",
        "start": 65,
        "end": 75,
        "startLoc": {
          "line": 65,
          "column": 2,
          "position": 658
        },
        "endLoc": {
          "line": 75,
          "column": 7,
          "position": 854
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\services\\timeFilterEnhancement.ts",
        "start": 115,
        "end": 125,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 974
        },
        "endLoc": {
          "line": 125,
          "column": 3,
          "position": 1170
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\r\n  id: string;\r\n  videoId: string;\r\n  videoTitle: string;\r\n  videoUrl: string;\r\n  authorId: string;\r\n  authorName: string;\r\n  content: string;\r\n  publishTime: string;\r\n  likes: number;\r\n  region?: string;\r\n  \r\n  // 任务相关\r\n  taskId: string;\r\n  status: 'pending' | 'followed' | 'replied' | 'ignored';\r\n  assignedDevice?: string;\r\n  \r\n  // 回复信息\r\n  replyContent?: string;\r\n  replyTime?: string;\r\n  replyDevice?: string;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\services\\monitoringService.ts",
        "start": 78,
        "end": 99,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 883
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 1043
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\types\\enhancedTypes.ts",
        "start": 51,
        "end": 73,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 360
        },
        "endLoc": {
          "line": 73,
          "column": 11,
          "position": 523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "}\r\n\r\nexport interface DuplicationRule {\r\n  id: string;\r\n  name: string;\r\n  type: 'follow' | 'reply';\r\n  devices: string[];\r\n  timeWindow: number; // 小时\r\n  maxActions: number; // 同一目标的最大操作次数\r\n  enabled: boolean;\r\n}\r\n\r\nexport interface ReplyTask {\r\n  id: string;\r\n  commentId: string;\r\n  comment: CommentData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\services\\monitoringService.ts",
        "start": 99,
        "end": 114,
        "startLoc": {
          "line": 99,
          "column": 1,
          "position": 1043
        },
        "endLoc": {
          "line": 114,
          "column": 12,
          "position": 1157
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\types\\enhancedTypes.ts",
        "start": 77,
        "end": 92,
        "startLoc": {
          "line": 77,
          "column": 1,
          "position": 559
        },
        "endLoc": {
          "line": 92,
          "column": 20,
          "position": 673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "): CommentData[] {\r\n    if (!filters.commentTimeRange || filters.commentTimeRange === 0) {\r\n      return comments; // 不限制时间\r\n    }\r\n\r\n    const now = new Date();\r\n    const timeRangeMs = filters.commentTimeRange * 24 * 60 * 60 * 1000; // 转换为毫秒\r\n    const cutoffTime = new Date(now.getTime() - timeRangeMs);\r\n\r\n    return comments.filter(comment => {\r\n      const publishTime = new Date(comment.publishTime);\r\n      const isWithinTimeRange = publishTime >= cutoffTime;\r\n\r\n      // 额外的智能筛选\r\n      if (filters.onlyRecentTrending && isWithinTimeRange) {\r\n        // 只保留最近且有一定互动量的评论\r\n        const hoursOld = (now.getTime() - publishTime.getTime()) / (1000 * 60 * 60);\r\n        const minLikesForAge = hoursOld < 24 ? 5 : hoursOld < 72 ? 10 : 20;\r\n        return comment.likes >= minLikesForAge;\r\n      }\r\n\r\n      if (filters.excludeOldReplies && isWithinTimeRange) {\r\n        // 排除已经有很多回复的旧评论（通常意味着话题已经过时）\r\n        const hoursOld = (now.getTime() - publishTime.getTime()) / (1000 * 60 * 60);\r\n        if (hoursOld > 48) {\r\n          // 超过48小时的评论，如果所在视频评论数过多，则跳过",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\services\\monitoringService.ts",
        "start": 134,
        "end": 159,
        "startLoc": {
          "line": 134,
          "column": 18,
          "position": 1375
        },
        "endLoc": {
          "line": 159,
          "column": 29,
          "position": 1735
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\services\\timeFilterEnhancement.ts",
        "start": 15,
        "end": 40,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 70
        },
        "endLoc": {
          "line": 40,
          "column": 27,
          "position": 430
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\ninterface TaskManagementCenterProps {\r\n  onlineDevices: Device[];\r\n  selectedDevice?: Device | null;\r\n  refreshDevices: () => void;\r\n}\r\n\r\n/**\r\n * 任务管理中心\r\n * 统一管理关注和回复任务，支持任务生成、状态管理、执行监控等功能\r\n */\r\nexport const TaskManagementCenter: React.FC<TaskManagementCenterProps> = ({\r\n  onlineDevices,\r\n  selectedDevice,\r\n  refreshDevices\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\TaskManagementCenter.tsx",
        "start": 15,
        "end": 33,
        "startLoc": {
          "line": 15,
          "column": 34,
          "position": 91
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 200
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\task-management\\TaskManagementCenter.tsx",
        "start": 28,
        "end": 45,
        "startLoc": {
          "line": 28,
          "column": 40,
          "position": 158
        },
        "endLoc": {
          "line": 45,
          "column": 2,
          "position": 265
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\ninterface MonitoringDashboardProps {\r\n  onlineDevices: any[];\r\n  selectedDevice: any;\r\n  refreshDevices: () => void;\r\n}\r\n\r\n/**\r\n * 监控总览仪表板\r\n * 显示精准获客系统的总体数据和状态\r\n */\r\nexport const MonitoringDashboard: React.FC<MonitoringDashboardProps> = ({\r\n  onlineDevices,\r\n  selectedDevice,\r\n  refreshDevices\r\n}) => {\r\n  const [",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\MonitoringDashboard.tsx",
        "start": 16,
        "end": 35,
        "startLoc": {
          "line": 16,
          "column": 30,
          "position": 138
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 253
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\monitoring-dashboard\\MonitoringDashboard.tsx",
        "start": 21,
        "end": 40,
        "startLoc": {
          "line": 21,
          "column": 10,
          "position": 105
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 220
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ".forEach(record => {\r\n      if (!statsMap.has(record.date)) {\r\n        statsMap.set(record.date, {\r\n          date: record.date,\r\n          totalFollows: 0,\r\n          successfulFollows: 0,\r\n          totalReplies: 0,\r\n          successfulReplies: 0,\r\n          successRate: 0\r\n        });\r\n      }\r\n      const stats = statsMap.get(record.date)!;\r\n      stats.totalReplies",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 224,
        "end": 236,
        "startLoc": {
          "line": 224,
          "column": 13,
          "position": 1814
        },
        "endLoc": {
          "line": 236,
          "column": 13,
          "position": 1936
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 207,
        "end": 219,
        "startLoc": {
          "line": 207,
          "column": 14,
          "position": 1657
        },
        "endLoc": {
          "line": 219,
          "column": 13,
          "position": 1779
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ";\r\n\r\n      if (selectedDateRange) {\r\n        filteredRecords = filteredRecords.filter(record => \r\n          record.date >= selectedDateRange[0] && record.date <= selectedDateRange[1]\r\n        );\r\n      }\r\n\r\n      if (selectedPlatform !== 'all') {\r\n        filteredRecords = filteredRecords.filter(record => \r\n          record.platform === selectedPlatform\r\n        );\r\n      }\r\n\r\n      // 创建CSV内容\r\n      const headers = [\r\n        '日期'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 300,
        "end": 316,
        "startLoc": {
          "line": 300,
          "column": 13,
          "position": 2646
        },
        "endLoc": {
          "line": 316,
          "column": 5,
          "position": 2776
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 255,
        "end": 270,
        "startLoc": {
          "line": 255,
          "column": 14,
          "position": 2183
        },
        "endLoc": {
          "line": 270,
          "column": 7,
          "position": 2310
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ",\r\n          record.success ? '成功' : '失败'\r\n        ].join(','))\r\n      ].join('\\n');\r\n\r\n      // 下载文件\r\n      const blob = new Blob(['\\uFEFF' + csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = `回复清单_",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 332,
        "end": 341,
        "startLoc": {
          "line": 332,
          "column": 11,
          "position": 2934
        },
        "endLoc": {
          "line": 341,
          "column": 7,
          "position": 3048
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 279,
        "end": 288,
        "startLoc": {
          "line": 279,
          "column": 7,
          "position": 2405
        },
        "endLoc": {
          "line": 288,
          "column": 7,
          "position": 2519
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": "\" \r\n            extra={\r\n              <Button \r\n                type=\"primary\" \r\n                icon={<DownloadOutlined />}\r\n                onClick={handleExportReplyList}\r\n              >\r\n                导出CSV\r\n              </Button>\r\n            }\r\n          >\r\n            <Table\r\n              columns={replyColumns}\r\n              dataSource={replyRecords.slice(0, 5)}\r\n              rowKey=\"id\"\r\n              pagination={false}\r\n              size=\"small\"\r\n              scroll={{ x: 800 }}\r\n            />\r\n            <div className=\"mt-2 text-center\">\r\n              <Text type=\"secondary\">\r\n                显示最近5条记录，导出包含所有数据\r\n              </Text>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 624,
        "end": 650,
        "startLoc": {
          "line": 624,
          "column": 7,
          "position": 5387
        },
        "endLoc": {
          "line": 650,
          "column": 3,
          "position": 5542
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\DailyReportModule.tsx",
        "start": 595,
        "end": 622,
        "startLoc": {
          "line": 595,
          "column": 7,
          "position": 5205
        },
        "endLoc": {
          "line": 622,
          "column": 2,
          "position": 5362
        }
      }
    },
    {
      "format": "javascript",
      "lines": 51,
      "fragment": "}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'tasks',\r\n      label: (\r\n        <span className=\"flex items-center space-x-1\">\r\n          <BarChartOutlined />\r\n          <span>监控列表</span>\r\n          <Badge count={stats.totalTasks} showZero />\r\n        </span>\r\n      ),\r\n      children: (\r\n        <TaskList\r\n          tasks={tasks}\r\n          onlineDevices={onlineDevices}\r\n          onEditTask={handleEditTask}\r\n          onDeleteTask={handleTaskDelete}\r\n          onToggleTaskStatus={handleToggleTaskStatus}\r\n          onViewTaskDetails={handleViewTaskDetails}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'replies',\r\n      label: (\r\n        <span className=\"flex items-center space-x-1\">\r\n          <MessageOutlined />\r\n          <span>回复管理</span>\r\n          <Badge count={stats.pendingComments} showZero />\r\n        </span>\r\n      ),\r\n      children: (\r\n        <ReplyTaskManager\r\n          comments={comments}\r\n          onlineDevices={onlineDevices}\r\n          onCommentUpdate={handleCommentUpdate}\r\n          onRefresh={handleRefresh}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* 模块标题和统计 */}\r\n      <Card>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <UserOutlined style={{ fontSize: '24px', color: '#722ed1'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\AccountMonitoringModule.tsx",
        "start": 160,
        "end": 210,
        "startLoc": {
          "line": 160,
          "column": 17,
          "position": 1532
        },
        "endLoc": {
          "line": 210,
          "column": 10,
          "position": 1880
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\IndustryMonitoringModule.tsx",
        "start": 180,
        "end": 230,
        "startLoc": {
          "line": 180,
          "column": 12,
          "position": 1708
        },
        "endLoc": {
          "line": 230,
          "column": 10,
          "position": 2056
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "> = ({\r\n  onlineDevices,\r\n  selectedDevice,\r\n  refreshDevices\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState('config');\r\n  const [tasks, setTasks] = useState<MonitoringTask[]>([]);\r\n  const [comments, setComments] = useState<CommentData[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // 初始化数据",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\AccountMonitoringModule.tsx",
        "start": 39,
        "end": 49,
        "startLoc": {
          "line": 39,
          "column": 29,
          "position": 274
        },
        "endLoc": {
          "line": 49,
          "column": 9,
          "position": 395
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\IndustryMonitoringModule.tsx",
        "start": 44,
        "end": 53,
        "startLoc": {
          "line": 44,
          "column": 30,
          "position": 280
        },
        "endLoc": {
          "line": 53,
          "column": 6,
          "position": 399
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "const allComments: CommentData[] = [];\r\n      for (const task of tasks) {\r\n        const taskComments = await monitoringService.getCommentsByTask(task.id);\r\n        allComments.push(...taskComments);\r\n      }\r\n      setComments(allComments);\r\n    } catch (error) {\r\n      console.error('加载评论失败:', error);\r\n    }\r\n  }, [tasks]);\r\n\r\n  // 创建任务\r\n  const handleTaskCreate = useCallback(async (task: MonitoringTask) => {\r\n    setTasks(prev => [...prev, task]);\r\n    message.success('账号监控任务创建成功！'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\AccountMonitoringModule.tsx",
        "start": 70,
        "end": 84,
        "startLoc": {
          "line": 70,
          "column": 7,
          "position": 594
        },
        "endLoc": {
          "line": 84,
          "column": 14,
          "position": 761
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\IndustryMonitoringModule.tsx",
        "start": 75,
        "end": 89,
        "startLoc": {
          "line": 75,
          "column": 7,
          "position": 596
        },
        "endLoc": {
          "line": 89,
          "column": 12,
          "position": 763
        }
      }
    },
    {
      "format": "tsx",
      "lines": 30,
      "fragment": ");\r\n  }, []);\r\n\r\n  // 删除任务\r\n  const handleTaskDelete = useCallback(async (taskId: string) => {\r\n    try {\r\n      await monitoringService.deleteTask(taskId);\r\n      setTasks(prev => prev.filter(t => t.id !== taskId));\r\n      message.success('任务删除成功！');\r\n    } catch (error) {\r\n      message.error('删除任务失败');\r\n    }\r\n  }, []);\r\n\r\n  // 切换任务状态\r\n  const handleToggleTaskStatus = useCallback(async (taskId: string, status: 'active' | 'paused') => {\r\n    try {\r\n      await monitoringService.updateTask(taskId, { status });\r\n      setTasks(prev => prev.map(t => \r\n        t.id === taskId ? { ...t, status } : t\r\n      ));\r\n      message.success(`任务已${status === 'active' ? '启动' : '暂停'}`);\r\n    } catch (error) {\r\n      message.error('操作失败');\r\n    }\r\n  }, []);\r\n\r\n  // 查看任务详情\r\n  const handleViewTaskDetails = useCallback((task: MonitoringTask) => {\r\n    setActiveTab",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\AccountMonitoringModule.tsx",
        "start": 85,
        "end": 114,
        "startLoc": {
          "line": 85,
          "column": 8,
          "position": 770
        },
        "endLoc": {
          "line": 114,
          "column": 13,
          "position": 1105
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\IndustryMonitoringModule.tsx",
        "start": 97,
        "end": 126,
        "startLoc": {
          "line": 97,
          "column": 10,
          "position": 868
        },
        "endLoc": {
          "line": 126,
          "column": 23,
          "position": 1203
        }
      }
    },
    {
      "format": "tsx",
      "lines": 28,
      "fragment": "} catch (error) {\r\n      message.error('更新评论状态失败');\r\n    }\r\n  }, [loadComments]);\r\n\r\n  // 刷新数据\r\n  const handleRefresh = useCallback(() => {\r\n    loadTasks();\r\n    loadComments();\r\n    refreshDevices();\r\n  }, [loadTasks, loadComments, refreshDevices]);\r\n\r\n  // 计算统计数据\r\n  const stats = {\r\n    totalTasks: tasks.length,\r\n    activeTasks: tasks.filter(t => t.status === 'active').length,\r\n    pendingComments: comments.filter(c => c.status === 'pending').length,\r\n    totalReplies: comments.filter(c => c.status === 'replied').length\r\n  };\r\n\r\n  // 标签页配置\r\n  const tabItems = [\r\n    {\r\n      key: 'config',\r\n      label: (\r\n        <span className=\"flex items-center space-x-1\">\r\n          <PlusOutlined />\r\n          <span>添加监控",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\AccountMonitoringModule.tsx",
        "start": 127,
        "end": 154,
        "startLoc": {
          "line": 127,
          "column": 5,
          "position": 1234
        },
        "endLoc": {
          "line": 154,
          "column": 5,
          "position": 1494
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\IndustryMonitoringModule.tsx",
        "start": 145,
        "end": 172,
        "startLoc": {
          "line": 145,
          "column": 5,
          "position": 1398
        },
        "endLoc": {
          "line": 172,
          "column": 5,
          "position": 1658
        }
      }
    },
    {
      "format": "tsx",
      "lines": 42,
      "fragment": "</span>\r\n          <Badge count={stats.totalTasks} showZero />\r\n        </span>\r\n      ),\r\n      children: (\r\n        <TaskList\r\n          tasks={tasks}\r\n          onlineDevices={onlineDevices}\r\n          onEditTask={handleEditTask}\r\n          onDeleteTask={handleTaskDelete}\r\n          onToggleTaskStatus={handleToggleTaskStatus}\r\n          onViewTaskDetails={handleViewTaskDetails}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'replies',\r\n      label: (\r\n        <span className=\"flex items-center space-x-1\">\r\n          <MessageOutlined />\r\n          <span>回复管理</span>\r\n          <Badge count={stats.pendingComments} showZero />\r\n        </span>\r\n      ),\r\n      children: (\r\n        <ReplyTaskManager\r\n          comments={comments}\r\n          onlineDevices={onlineDevices}\r\n          onCommentUpdate={handleCommentUpdate}\r\n          onRefresh={handleRefresh}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* 模块标题和统计 */}\r\n      <Card>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <UserOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\AccountMonitoringModule.tsx",
        "start": 169,
        "end": 210,
        "startLoc": {
          "line": 169,
          "column": 5,
          "position": 1589
        },
        "endLoc": {
          "line": 210,
          "column": 13,
          "position": 1866
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\IndustryMonitoringModule.tsx",
        "start": 189,
        "end": 230,
        "startLoc": {
          "line": 189,
          "column": 5,
          "position": 1765
        },
        "endLoc": {
          "line": 230,
          "column": 15,
          "position": 2042
        }
      }
    },
    {
      "format": "tsx",
      "lines": 33,
      "fragment": "</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-orange-600\">{stats.pendingComments}</div>\r\n              <div className=\"text-sm text-gray-500\">待处理</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-green-600\">{stats.totalReplies}</div>\r\n              <div className=\"text-sm text-gray-500\">已回复</div>\r\n            </div>\r\n            <Button \r\n              icon={<ReloadOutlined />} \r\n              onClick={handleRefresh}\r\n              loading={loading}\r\n            >\r\n              刷新\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* 功能标签页 */}\r\n      <Card>\r\n        <Tabs\r\n          activeKey={activeTab}\r\n          onChange={setActiveTab}\r\n          items={tabItems}\r\n          type=\"card\"\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\AccountMonitoringModule.tsx",
        "start": 223,
        "end": 255,
        "startLoc": {
          "line": 223,
          "column": 4,
          "position": 2013
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 2251
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\IndustryMonitoringModule.tsx",
        "start": 243,
        "end": 275,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 2189
        },
        "endLoc": {
          "line": 275,
          "column": 2,
          "position": 2427
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "}>📈 实时进度跟踪</Title>\r\n        <Text type=\"secondary\">实时显示脚本执行进度，包括当前步骤、完成状态和剩余时间预估</Text>\r\n      </Col>\r\n      <Col xs={24} sm={12} md={12} lg={6}>\r\n        <Title level={5}>📝 详细日志记录</Title>\r\n        <Text type=\"secondary\">记录每个步骤的执行日志，包括成功、警告和错误信息</Text>\r\n      </Col>\r\n      <Col xs={24} sm={12} md={12} lg={6}>\r\n        <Title level={5}>⏸️ 执行控制</Title>\r\n        <Text type=\"secondary\">支持暂停、继续、停止和重新执行脚本，灵活控制执行流程</Text>\r\n      </Col>\r\n      <Col xs={24} sm={12} md={12} lg={6}>\r\n        <Title level={5}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\execution-monitor\\components\\MonitorFeatureGrid.tsx",
        "start": 14,
        "end": 26,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 153
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 363
        }
      },
      "secondFile": {
        "name": "src\\pages\\execution-monitor\\components\\MonitorFeatureGrid.tsx",
        "start": 12,
        "end": 22,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 111
        },
        "endLoc": {
          "line": 22,
          "column": 2,
          "position": 293
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "}\r\n            />\r\n          </Space>\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col xs={24} sm={8}>\r\n        <Card\r\n          style={{ \r\n            borderRadius: token.borderRadiusLG,\r\n            background: token.colorBgContainer\r\n          }}\r\n        >\r\n          <Space direction=\"vertical\" size={token.sizeXS} style={{ width: '100%' }}>\r\n            <Space align=\"center\">\r\n              <CloseCircleOutlined \r\n                style={{ \r\n                  fontSize: token.fontSizeXL,\r\n                  color: offlineCount ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\device-management\\components\\DeviceStatusCards.tsx",
        "start": 59,
        "end": 77,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 403
        },
        "endLoc": {
          "line": 77,
          "column": 15,
          "position": 531
        }
      },
      "secondFile": {
        "name": "src\\pages\\device-management\\components\\DeviceStatusCards.tsx",
        "start": 34,
        "end": 47,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 47,
          "column": 7,
          "position": 334
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": ",\r\n                fontSize: token.fontSizeHeading2,\r\n                fontWeight: token.fontWeightStrong\r\n              }}\r\n            />\r\n          </Space>\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col xs={24} sm={8}>\r\n        <Card\r\n          style={{ \r\n            borderRadius: token.borderRadiusLG,\r\n            background: token.colorBgContainer\r\n          }}\r\n        >\r\n          <Space direction=\"vertical\" size={token.sizeXS} style={{ width: '100%' }}>\r\n            <Space align=\"center\">\r\n              <DatabaseOutlined \r\n                style={{ \r\n                  fontSize: token.fontSizeXL,\r\n                  color: token.colorPrimary \r\n                ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\device-management\\components\\DeviceStatusCards.tsx",
        "start": 85,
        "end": 107,
        "startLoc": {
          "line": 85,
          "column": 19,
          "position": 601
        },
        "endLoc": {
          "line": 107,
          "column": 17,
          "position": 744
        }
      },
      "secondFile": {
        "name": "src\\pages\\device-management\\components\\DeviceStatusCards.tsx",
        "start": 56,
        "end": 48,
        "startLoc": {
          "line": 56,
          "column": 13,
          "position": 390
        },
        "endLoc": {
          "line": 48,
          "column": 17,
          "position": 336
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": "={token.sizeXS}\r\n        >\r\n          <Space align=\"center\">\r\n            <MobileOutlined \r\n              style={{ \r\n                fontSize: token.fontSizeHeading2,\r\n                color: token.colorPrimary \r\n              }} \r\n            />\r\n            <Title \r\n              level={2} \r\n              style={{ \r\n                margin: 0,\r\n                color: token.colorText,\r\n                fontWeight: token.fontWeightStrong\r\n              }}\r\n            >\r\n              设备管理中心\r\n            </Title>\r\n          </Space>\r\n          <Text \r\n            type=\"secondary\"\r\n            style={{ fontSize: token.fontSize }}\r\n          >\r\n            统一管理最多 10 台设备的连接状态，确保任务高效执行\r\n          </Text>\r\n        </Space>\r\n      </Col>\r\n      <Col>\r\n        <Space size={token.sizeMS}>\r\n          <Button \r\n            type=\"default\"\r\n            icon={<ReloadOutlined />}\r\n            onClick={refreshDevices",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\device-management\\components\\DevicePageHeader.tsx",
        "start": 35,
        "end": 68,
        "startLoc": {
          "line": 35,
          "column": 5,
          "position": 233
        },
        "endLoc": {
          "line": 68,
          "column": 15,
          "position": 425
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsHeader.tsx",
        "start": 35,
        "end": 67,
        "startLoc": {
          "line": 35,
          "column": 5,
          "position": 239
        },
        "endLoc": {
          "line": 67,
          "column": 10,
          "position": 421
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "}) => {\r\n  const { token } = theme.useToken();\r\n\r\n  return (\r\n    <Row justify=\"space-between\" align=\"middle\">\r\n      <Col>\r\n        <Space \r\n          direction=\"vertical\" \r\n          size={token.sizeXS}\r\n        >\r\n          <Space align=\"center\">\r\n            <MobileOutlined",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\device-management\\components\\DevicePageHeader.tsx",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 1,
          "position": 163
        },
        "endLoc": {
          "line": 38,
          "column": 15,
          "position": 257
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\components\\StatisticsHeader.tsx",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 1,
          "position": 169
        },
        "endLoc": {
          "line": 38,
          "column": 17,
          "position": 263
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "\"\r\n                  style={{ backgroundColor: value }}\r\n                />\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <div className=\"text-xs text-text-1 font-medium\">{label}</div>\r\n                  <div className=\"text-xs text-text-3 font-mono\">{name}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 文本令牌 */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\brand-showcase\\components\\TokensDemo.tsx",
        "start": 63,
        "end": 75,
        "startLoc": {
          "line": 63,
          "column": 48,
          "position": 707
        },
        "endLoc": {
          "line": 75,
          "column": 11,
          "position": 804
        }
      },
      "secondFile": {
        "name": "src\\pages\\brand-showcase\\components\\TokensDemo.tsx",
        "start": 44,
        "end": 56,
        "startLoc": {
          "line": 44,
          "column": 50,
          "position": 521
        },
        "endLoc": {
          "line": 56,
          "column": 11,
          "position": 618
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "<div className=\"flex-1 min-w-0\">\r\n                  <div className=\"text-xs text-text-1 font-medium\">{label}</div>\r\n                  <div className=\"text-xs text-text-3 font-mono\">{name}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\brand-showcase\\components\\TokensDemo.tsx",
        "start": 82,
        "end": 90,
        "startLoc": {
          "line": 82,
          "column": 17,
          "position": 912
        },
        "endLoc": {
          "line": 90,
          "column": 3,
          "position": 990
        }
      },
      "secondFile": {
        "name": "src\\pages\\brand-showcase\\components\\TokensDemo.tsx",
        "start": 47,
        "end": 56,
        "startLoc": {
          "line": 47,
          "column": 17,
          "position": 537
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 617
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "}}>\r\n            <Tag color=\"success\">Ready</Tag> - 应用完全就绪，可以执行自动化操作\r\n          </li>\r\n          <li style={{ display: 'flex', alignItems: 'center', gap: token.marginXS }}>\r\n            <Tag color=\"processing\">Loading</Tag> - 应用正在加载中\r\n          </li>\r\n          <li style={{ display: 'flex', alignItems: 'center', gap: token.marginXS }}>\r\n            <Tag color=\"warning\">SplashScreen</Tag> - 停留在启动画面\r\n          </li>\r\n          <li style={{ display: 'flex', alignItems: 'center', gap: token.marginXS }}>\r\n            <Tag color=\"warning\">PermissionDialog</Tag> - 需要处理权限弹窗\r\n          </li>\r\n          <li style={{ display: 'flex', alignItems: 'center', gap: token.marginXS }}>\r\n            <Tag color=\"warning\">LoginRequired</Tag> - 需要用户登录\r\n          </li>\r\n          <li style={{ display: 'flex', alignItems: 'center', gap: token.marginXS }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\app-launch-test\\components\\FeatureDescriptionSection.tsx",
        "start": 57,
        "end": 72,
        "startLoc": {
          "line": 57,
          "column": 10,
          "position": 430
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 701
        }
      },
      "secondFile": {
        "name": "src\\pages\\app-launch-test\\components\\FeatureDescriptionSection.tsx",
        "start": 56,
        "end": 63,
        "startLoc": {
          "line": 56,
          "column": 9,
          "position": 402
        },
        "endLoc": {
          "line": 63,
          "column": 2,
          "position": 539
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "}}>\r\n              <strong>应用名称:</strong> {selectedAppInfo.app_name}\r\n            </p>\r\n            <p style={{ fontSize: token.fontSizeSM, color: token.colorTextSecondary, margin: 0 }}>\r\n              <strong>包名:</strong> {selectedAppInfo.package_name}\r\n            </p>\r\n            {selectedAppInfo.version_name && (\r\n              <p style={{ fontSize: token.fontSizeSM, color: token.colorTextSecondary, margin: 0 }}>\r\n                <strong>版本:</strong> {selectedAppInfo.version_name}\r\n              </p>\r\n            )}\r\n            {selectedAppInfo.main_activity && (\r\n              <p style={{ fontSize: token.fontSizeSM, color: token.colorTextSecondary, margin: 0 }}>\r\n                <strong>主Activity:</strong> {selectedAppInfo.main_activity}\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          icon={<",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\app-launch-test\\components\\ControlPanelSection.tsx",
        "start": 101,
        "end": 123,
        "startLoc": {
          "line": 101,
          "column": 2,
          "position": 736
        },
        "endLoc": {
          "line": 123,
          "column": 2,
          "position": 987
        }
      },
      "secondFile": {
        "name": "src\\pages\\app-launch-test\\components\\ControlPanelSection.tsx",
        "start": 99,
        "end": 113,
        "startLoc": {
          "line": 99,
          "column": 13,
          "position": 705
        },
        "endLoc": {
          "line": 113,
          "column": 2,
          "position": 904
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "re);\r\n      if (segments.length === 1) {\r\n        next.push(chunk);\r\n        continue;\r\n      }\r\n      for (let i = 0; i < segments.length; i++) {\r\n        const seg = segments[i];\r\n        if (seg) next.push(seg);\r\n        if (i < segments.length - 1) {\r\n          const match = chunk.match(re",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\adb\\logs\\LogMessage.tsx",
        "start": 73,
        "end": 82,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 786
        },
        "endLoc": {
          "line": 82,
          "column": 3,
          "position": 916
        }
      },
      "secondFile": {
        "name": "src\\pages\\adb\\logs\\LogMessage.tsx",
        "start": 39,
        "end": 48,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 421
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 551
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "});\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  const ts = new Date().toISOString().replace(/[:.]/g, \"-\");\r\n  a.download = filename || `adb-diagnostics-${ts}.ndjson`",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\adb\\logs\\exporters.ts",
        "start": 21,
        "end": 26,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 295
        },
        "endLoc": {
          "line": 26,
          "column": 9,
          "position": 385
        }
      },
      "secondFile": {
        "name": "src\\pages\\adb\\logs\\exporters.ts",
        "start": 9,
        "end": 14,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 98
        },
        "endLoc": {
          "line": 14,
          "column": 7,
          "position": 188
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "const convertedManual: ManualStrategy = {\r\n    kind: 'manual',\r\n    name: `手动版-${smartStrategy.selector.variant}`,\r\n    type: 'custom',\r\n    selector: {\r\n      css: smartStrategy.selector.css,\r\n      xpath: smartStrategy.selector.xpath\r\n    },\r\n    notes: `从智能策略转换: ${smartStrategy.selector.rationale}`,\r\n    createdAt: Date.now()\r\n  };\r\n  console.log('✅ 智能→手动转换成功:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\test\\strategy-switching-test.ts",
        "start": 85,
        "end": 96,
        "startLoc": {
          "line": 85,
          "column": 3,
          "position": 663
        },
        "endLoc": {
          "line": 96,
          "column": 15,
          "position": 779
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\test\\strategy-system-test.ts",
        "start": 93,
        "end": 105,
        "startLoc": {
          "line": 93,
          "column": 3,
          "position": 564
        },
        "endLoc": {
          "line": 105,
          "column": 17,
          "position": 682
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "const strategy = await get().generateSmartStrategy(state.element);\r\n        set({\r\n          current: strategy,\r\n          lastSmartSnapshot: strategy,\r\n          isGenerating: false,\r\n          lastUpdated: Date.now()\r\n        });\r\n      } catch (error) {\r\n        console.error('❌ 刷新智能策略失败:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\stores\\inspectorStore.ts",
        "start": 666,
        "end": 674,
        "startLoc": {
          "line": 666,
          "column": 9,
          "position": 5022
        },
        "endLoc": {
          "line": 674,
          "column": 14,
          "position": 5107
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\stores\\inspectorStore.ts",
        "start": 633,
        "end": 642,
        "startLoc": {
          "line": 633,
          "column": 9,
          "position": 4749
        },
        "endLoc": {
          "line": 642,
          "column": 14,
          "position": 4836
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "{\r\n          kind: 'manual',\r\n          name: `手动版-${smartStrategy.selector.variant}`,\r\n          type: 'custom',\r\n          selector: {\r\n            css: smartStrategy.selector.css,\r\n            xpath: smartStrategy.selector.xpath\r\n          },\r\n          notes: `从智能策略转换: ${smartStrategy.selector.rationale}`,\r\n          createdAt: Date.now()\r\n        };\r\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\stores\\inspectorStore.ts",
        "start": 732,
        "end": 743,
        "startLoc": {
          "line": 732,
          "column": 2,
          "position": 5637
        },
        "endLoc": {
          "line": 743,
          "column": 2,
          "position": 5740
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\test\\strategy-system-test.ts",
        "start": 93,
        "end": 105,
        "startLoc": {
          "line": 93,
          "column": 2,
          "position": 573
        },
        "endLoc": {
          "line": 105,
          "column": 8,
          "position": 678
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": ": 4,\r\n                    marginTop: 8,\r\n                    border: '1px solid #b7eb8f',\r\n                  }}>\r\n                    <div style={{ fontSize: 16, fontWeight: 'bold', color: '#52c41a' }}>\r\n                      {analysisResult.smartCandidates.find(\r\n                        c => c.key === analysisResult.recommendedKey\r\n                      )?.name}\r\n                    </div>\r\n                    <div style={{ marginTop: 4 }}>\r\n                      <Tag color=\"success\">\r\n                        置信度: {analysisResult.recommendedConfidence}%\r\n                      </Tag>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* 所有候选策略 */}\r\n                <div>\r\n                  <Text strong>📋 所有候选策略 ({analysisResult.smartCandidates.length})</Text>\r\n                  <div style={{ marginTop: 8",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\pages\\auto-fill-demo.tsx",
        "start": 264,
        "end": 284,
        "startLoc": {
          "line": 264,
          "column": 33,
          "position": 2032
        },
        "endLoc": {
          "line": 284,
          "column": 2,
          "position": 2235
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\pages\\intelligent-analysis-real-demo.tsx",
        "start": 238,
        "end": 248,
        "startLoc": {
          "line": 238,
          "column": 33,
          "position": 2025
        },
        "endLoc": {
          "line": 248,
          "column": 2,
          "position": 2166
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": " }}>\r\n                      <Tag color=\"success\">\r\n                        置信度: {analysisResult.recommendedConfidence}%\r\n                      </Tag>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* 所有候选策略 */}\r\n                <div>\r\n                  <Text strong>📋 所有候选策略 ({analysisResult.smartCandidates.length})</Text>\r\n                  <div style={{ marginTop: 8 }}>\r\n                    {analysisResult.smartCandidates.map((candidate) => (\r\n                      <div\r\n                        key={candidate.key}\r\n                        style={{\r\n                          background: candidate.isRecommended ? '#f6ffed' : '#fafafa',\r\n                          padding: 8,\r\n                          borderRadius: 4,\r\n                          marginBottom: 8,\r\n                          border: candidate.isRecommended \r\n                            ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\pages\\auto-fill-demo.tsx",
        "start": 273,
        "end": 294,
        "startLoc": {
          "line": 273,
          "column": 2,
          "position": 2132
        },
        "endLoc": {
          "line": 294,
          "column": 29,
          "position": 2307
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\pages\\intelligent-analysis-real-demo.tsx",
        "start": 254,
        "end": 267,
        "startLoc": {
          "line": 254,
          "column": 9,
          "position": 2247
        },
        "endLoc": {
          "line": 267,
          "column": 15,
          "position": 2367
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "onStartAnalysis?: (stepId: string) => void;\r\n    onCancelAnalysis?: (stepId: string) => void;\r\n    onRetryAnalysis?: (stepId: string) => void;\r\n    onUpgradeStrategy?: (stepId: string) => void;\r\n    onSwitchStrategy?: (stepId: string, strategyKey: string) => void;\r\n    onAnalysisComplete?: (stepId: string, result: unknown) => void;\r\n    onAnalysisError?: (stepId: string, error: unknown) => void;\r\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\hooks\\use-step-card-actions.ts",
        "start": 218,
        "end": 225,
        "startLoc": {
          "line": 218,
          "column": 5,
          "position": 1953
        },
        "endLoc": {
          "line": 225,
          "column": 2,
          "position": 2097
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\types\\unified-step-card-types.ts",
        "start": 165,
        "end": 173,
        "startLoc": {
          "line": 165,
          "column": 3,
          "position": 1134
        },
        "endLoc": {
          "line": 173,
          "column": 16,
          "position": 1280
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "let hash = 0;\r\n    for (let i = 0; i < text.length; i++) {\r\n      const char = text.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // 转换为32位整数\r\n    }\r\n    return Math",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\universal-ui\\domain\\fallback-strategy-generator.ts",
        "start": 247,
        "end": 253,
        "startLoc": {
          "line": 247,
          "column": 5,
          "position": 1838
        },
        "endLoc": {
          "line": 253,
          "column": 5,
          "position": 1940
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\utils\\selection-hash.ts",
        "start": 26,
        "end": 33,
        "startLoc": {
          "line": 26,
          "column": 3,
          "position": 148
        },
        "endLoc": {
          "line": 33,
          "column": 7,
          "position": 252
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\r\n          \r\n          // ✅ 保存完整的智能分析数据\r\n          smartAnalysis: params.smartAnalysis,\r\n          smartDescription: params.smartDescription,\r\n          bounds: params.bounds,\r\n          content_desc: params.content_desc,\r\n          element_text: params.element_text,\r\n          element_type: params.element_type,\r\n          text: params.text,\r\n          \r\n          // 保存所有原始参数，确保不丢失任何信息\r\n          ...params\r\n        };\r\n\r\n      case StepActionType.RECOGNIZE_PAGE",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\smart-script-management\\utils\\serializer.ts",
        "start": 211,
        "end": 226,
        "startLoc": {
          "line": 211,
          "column": 5,
          "position": 1817
        },
        "endLoc": {
          "line": 226,
          "column": 15,
          "position": 1919
        }
      },
      "secondFile": {
        "name": "src\\modules\\smart-script-management\\utils\\serializer.ts",
        "start": 191,
        "end": 206,
        "startLoc": {
          "line": 191,
          "column": 12,
          "position": 1654
        },
        "endLoc": {
          "line": 206,
          "column": 19,
          "position": 1756
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\r\n      setCurrentScript(savedScript);\r\n      setIsDirty(false);\r\n      message.success('脚本保存成功');\r\n      return savedScript;\r\n    } catch (err) {\r\n      const errorMsg = err instanceof Error ? err.message : '保存脚本失败';\r\n      message.error(errorMsg);\r\n      throw err;\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }, [currentScript?",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\smart-script-management\\hooks\\useScriptManager.ts",
        "start": 204,
        "end": 216,
        "startLoc": {
          "line": 204,
          "column": 17,
          "position": 1832
        },
        "endLoc": {
          "line": 216,
          "column": 2,
          "position": 1949
        }
      },
      "secondFile": {
        "name": "src\\modules\\smart-script-management\\hooks\\useScriptManager.ts",
        "start": 172,
        "end": 184,
        "startLoc": {
          "line": 172,
          "column": 13,
          "position": 1556
        },
        "endLoc": {
          "line": 184,
          "column": 2,
          "position": 1673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ");\r\n      setExecutionResult(result);\r\n      \r\n      if (result.success) {\r\n        message.success(`脚本执行成功！执行了 ${result.executed_steps}/${result.total_steps} 个步骤`);\r\n      } else {\r\n        message.error(`脚本执行失败：${result.message}`);\r\n      }\r\n      \r\n      return result;\r\n    } catch (err) {\r\n      const errorMsg = err instanceof Error ? err.message : '脚本执行失败';\r\n      message.error(errorMsg);\r\n      throw err;\r\n    } finally {\r\n      setExecuting(false);\r\n    }\r\n  }, []);\r\n\r\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\smart-script-management\\hooks\\useScriptManager.ts",
        "start": 333,
        "end": 352,
        "startLoc": {
          "line": 333,
          "column": 9,
          "position": 2943
        },
        "endLoc": {
          "line": 352,
          "column": 7,
          "position": 3115
        }
      },
      "secondFile": {
        "name": "src\\modules\\smart-script-management\\hooks\\useScriptManager.ts",
        "start": 292,
        "end": 311,
        "startLoc": {
          "line": 292,
          "column": 8,
          "position": 2607
        },
        "endLoc": {
          "line": 311,
          "column": 13,
          "position": 2779
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "pageSize: 10,\r\n              showSizeChanger: true,\r\n              showQuickJumper: true,\r\n              showTotal: (total, range) => `第 ${range[0]}-${range[1]} 条，共 ${total} 条`\r\n            }}\r\n            rowSelection={{\r\n              selectedRowKeys,\r\n              onChange: (keys)",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\smart-script-management\\components\\ScriptManager.tsx",
        "start": 353,
        "end": 360,
        "startLoc": {
          "line": 353,
          "column": 15,
          "position": 3069
        },
        "endLoc": {
          "line": 360,
          "column": 2,
          "position": 3149
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\modules\\industry-monitoring\\components\\TaskList.tsx",
        "start": 297,
        "end": 304,
        "startLoc": {
          "line": 297,
          "column": 11,
          "position": 2743
        },
        "endLoc": {
          "line": 304,
          "column": 2,
          "position": 2823
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "\"\r\n              value={distributedScriptName}\r\n              onChange={(e) => setDistributedScriptName(e.target.value)}\r\n              style={{ marginTop: 8 }}\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label>脚本描述</label>\r\n            <Input.TextArea\r\n              placeholder=\"输入脚本描述（可选）\"\r\n              value={distributedScriptDescription}\r\n              onChange={(e) => setDistributedScriptDescription(e.target.value)}\r\n              rows={3}\r\n              style={{ marginTop: 8 }}\r\n            />\r\n          </div>\r\n\r\n          <Card size=\"small\" title=\"分布式脚本预览",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\smart-script-management\\components\\ScriptBuilderIntegration.tsx",
        "start": 448,
        "end": 466,
        "startLoc": {
          "line": 448,
          "column": 10,
          "position": 4050
        },
        "endLoc": {
          "line": 466,
          "column": 8,
          "position": 4193
        }
      },
      "secondFile": {
        "name": "src\\modules\\smart-script-management\\components\\ScriptBuilderIntegration.tsx",
        "start": 367,
        "end": 385,
        "startLoc": {
          "line": 367,
          "column": 7,
          "position": 3388
        },
        "endLoc": {
          "line": 385,
          "column": 5,
          "position": 3531
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": ":</div>\r\n                  <Space wrap>\r\n                    {[...new Set(steps.map(s => s.step_type || s.type))].map(type => (\r\n                      <span key={type} style={{ \r\n                        background: '#e6f7ff', \r\n                        color: '#1890ff',\r\n                        padding: '2px 8px', \r\n                        borderRadius: '4px',\r\n                        fontSize: '12px',\r\n                        border: '1px solid #91d5ff'\r\n                      }}>\r\n                        {type}\r\n                      </span>\r\n                    ))}\r\n                  </Space>\r\n                </div>\r\n              )}\r\n            </Space>\r\n          </Card>\r\n        </Space>\r\n      </Modal>\r\n\r\n      {/* 🆕 导入分布式脚本对话框 */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\smart-script-management\\components\\ScriptBuilderIntegration.tsx",
        "start": 477,
        "end": 499,
        "startLoc": {
          "line": 477,
          "column": 7,
          "position": 4349
        },
        "endLoc": {
          "line": 499,
          "column": 20,
          "position": 4513
        }
      },
      "secondFile": {
        "name": "src\\modules\\smart-script-management\\components\\ScriptBuilderIntegration.tsx",
        "start": 393,
        "end": 413,
        "startLoc": {
          "line": 393,
          "column": 7,
          "position": 3659
        },
        "endLoc": {
          "line": 413,
          "column": 15,
          "position": 3813
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "?: string,\r\n    metadata?: any,\r\n    result?: { success: boolean; error_message?: string; duration_ms?: number }\r\n  ): void {\r\n    this.log({\r\n      level: result?.success === false ? AuditLogLevel.ERROR : AuditLogLevel.INFO,\r\n      category: AuditLogCategory.COMMENT_COLLECTION",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\precise-acquisition\\audit\\AuditLogManager.ts",
        "start": 398,
        "end": 404,
        "startLoc": {
          "line": 398,
          "column": 9,
          "position": 3460
        },
        "endLoc": {
          "line": 404,
          "column": 19,
          "position": 3555
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\audit\\AuditLogManager.ts",
        "start": 376,
        "end": 382,
        "startLoc": {
          "line": 376,
          "column": 7,
          "position": 3287
        },
        "endLoc": {
          "line": 382,
          "column": 15,
          "position": 3382
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ".list({ limit: 200, offset: 0, platform: filters.platform || undefined, target_type: filters.target_type || undefined });\r\n        const vms: WatchTargetRowVM[] = (rows || []).map((r: any) => ({\r\n          dedup_key: r.dedup_key,\r\n          target_type: r.target_type,\r\n          platform: r.platform,\r\n          id_or_url: r.platform_id_or_url,\r\n          title: r.title,\r\n          source: r.source,\r\n          industry_tags: Array.isArray(r.industry_tags) ? r.industry_tags.join(',') : r.industry_tags,\r\n          region: r.region_tag,\r\n          notes: r.notes,\r\n          created_at: r.created_at,\r\n        }));\r\n        setData(vms);\r\n      }\r\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\marketing\\watch-targets\\WatchTargetsList.tsx",
        "start": 101,
        "end": 116,
        "startLoc": {
          "line": 101,
          "column": 5,
          "position": 1360
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 1583
        }
      },
      "secondFile": {
        "name": "src\\modules\\marketing\\watch-targets\\WatchTargetsList.tsx",
        "start": 86,
        "end": 100,
        "startLoc": {
          "line": 86,
          "column": 9,
          "position": 1124
        },
        "endLoc": {
          "line": 100,
          "column": 5,
          "position": 1345
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "private hashString(str: string): string {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash;\r\n    }\r\n    return hash.toString(16",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\validation\\OfflineValidationSystem.ts",
        "start": 411,
        "end": 418,
        "startLoc": {
          "line": 411,
          "column": 3,
          "position": 3318
        },
        "endLoc": {
          "line": 418,
          "column": 3,
          "position": 3439
        }
      },
      "secondFile": {
        "name": "src\\utils\\xpath\\cache\\xpath-precompiler-cache.ts",
        "start": 117,
        "end": 311,
        "startLoc": {
          "line": 117,
          "column": 3,
          "position": 716
        },
        "endLoc": {
          "line": 311,
          "column": 3,
          "position": 2850
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ": string;\r\n}\r\n\r\n/**\r\n * 唯一性验证结果\r\n */\r\nexport interface UniquenessValidationResult {\r\n  /** 验证是否通过 */\r\n  isValid: boolean;\r\n  /** 过滤后的策略 */\r\n  filteredStrategies: StrategyRecommendation[];\r\n  /** 相似性分析结果 */\r\n  similarityAnalyses: SimilarityAnalysis[];\r\n  /** 冲突检测结果 */\r\n  conflictDetections: ConflictDetection[];\r\n  /** 验证摘要 */\r\n  summary: {\r\n    originalCount: number;\r\n    filteredCount: number;\r\n    removedCount: number;\r\n    qualityScore",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\scoring\\UniquenessValidator.ts",
        "start": 60,
        "end": 80,
        "startLoc": {
          "line": 60,
          "column": 12,
          "position": 250
        },
        "endLoc": {
          "line": 80,
          "column": 13,
          "position": 363
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\scoring\\uniqueness\\types\\index.ts",
        "start": 77,
        "end": 97,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 440
        },
        "endLoc": {
          "line": 97,
          "column": 18,
          "position": 553
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "= {\r\n      'speed-first': {\r\n        performance: 0.4,\r\n        stability: 0.2,\r\n        accuracy: 0.2,\r\n        crossDevice: 0.1,\r\n        maintainability: 0.1\r\n      },\r\n      'stability-first': {\r\n        performance: 0.1,\r\n        stability: 0.4,\r\n        accuracy: 0.2,\r\n        crossDevice: 0.2,\r\n        maintainability: 0.1\r\n      },\r\n      'accuracy-first': {\r\n        performance: 0.1,\r\n        stability: 0.2,\r\n        accuracy: 0.4,\r\n        crossDevice: 0.2,\r\n        maintainability: 0.1\r\n      },\r\n      'balanced': {\r\n        performance: 0.2,\r\n        stability: 0.2,\r\n        accuracy: 0.2,\r\n        crossDevice: 0.2,\r\n        maintainability: 0.2\r\n      },\r\n      'cross-device': {\r\n        performance: 0.1,\r\n        stability: 0.3,\r\n        accuracy: 0.1,\r\n        crossDevice: 0.4,\r\n        maintainability: 0.1\r\n      }\r\n    } as",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\scoring\\ScoreWeightConfig.ts",
        "start": 164,
        "end": 200,
        "startLoc": {
          "line": 164,
          "column": 2,
          "position": 1025
        },
        "endLoc": {
          "line": 200,
          "column": 3,
          "position": 1287
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\scoring\\types\\ScoringTypes.ts",
        "start": 415,
        "end": 451,
        "startLoc": {
          "line": 415,
          "column": 2,
          "position": 1849
        },
        "endLoc": {
          "line": 451,
          "column": 2,
          "position": 2109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\r\n  }\r\n\r\n  private hashString(str: string): string {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash;\r\n    }\r\n    return Math",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\plan\\StrategyPlanFactory.ts",
        "start": 353,
        "end": 363,
        "startLoc": {
          "line": 353,
          "column": 2,
          "position": 2879
        },
        "endLoc": {
          "line": 363,
          "column": 5,
          "position": 3006
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\validation\\OfflineValidationSystem.ts",
        "start": 408,
        "end": 311,
        "startLoc": {
          "line": 408,
          "column": 2,
          "position": 3308
        },
        "endLoc": {
          "line": 311,
          "column": 5,
          "position": 2846
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "): number {\r\n    const left = Math.max(bounds1.left, bounds2.left);\r\n    const top = Math.max(bounds1.top, bounds2.top);\r\n    const right = Math.min(bounds1.right, bounds2.right);\r\n    const bottom = Math.min(bounds1.bottom, bounds2.bottom);\r\n    \r\n    if (left <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\optimization\\RegionLimitedSearchOptimizer.ts",
        "start": 585,
        "end": 591,
        "startLoc": {
          "line": 585,
          "column": 2,
          "position": 4945
        },
        "endLoc": {
          "line": 591,
          "column": 2,
          "position": 5053
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\shared\\utils\\calculationUtils.ts",
        "start": 64,
        "end": 70,
        "startLoc": {
          "line": 64,
          "column": 11,
          "position": 385
        },
        "endLoc": {
          "line": 70,
          "column": 3,
          "position": 493
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\r\n    \r\n    return {\r\n      left: Math.floor(centerX - width / 2),\r\n      top: Math.floor(centerY - height / 2),\r\n      right: Math.floor(centerX + width / 2),\r\n      bottom: Math.floor(centerY + height / 2)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 清理区域缓存\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\optimization\\RegionLimitedSearchOptimizer.ts",
        "start": 620,
        "end": 632,
        "startLoc": {
          "line": 620,
          "column": 6,
          "position": 5525
        },
        "endLoc": {
          "line": 632,
          "column": 6,
          "position": 5631
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\optimization\\RegionLimitedSearchOptimizer.ts",
        "start": 606,
        "end": 616,
        "startLoc": {
          "line": 606,
          "column": 7,
          "position": 5294
        },
        "endLoc": {
          "line": 616,
          "column": 8,
          "position": 5400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "let hash = 0;\r\n    for (let i = 0; i < xmlContent.length; i++) {\r\n      const char = xmlContent.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // 转换为32位整数\r\n    }\r\n    return hash",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\core\\StrategyDecisionEngine.ts",
        "start": 562,
        "end": 568,
        "startLoc": {
          "line": 562,
          "column": 5,
          "position": 4481
        },
        "endLoc": {
          "line": 568,
          "column": 5,
          "position": 4583
        }
      },
      "secondFile": {
        "name": "src\\services\\unified-view-data\\utils\\CacheManager.ts",
        "start": 22,
        "end": 28,
        "startLoc": {
          "line": 22,
          "column": 5,
          "position": 138
        },
        "endLoc": {
          "line": 28,
          "column": 15,
          "position": 240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(str: string): string {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash;\r\n    }\r\n    return hash.toString(16);\r\n  }\r\n\r\n  // === Step 0 增强方法 ===",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\core\\ElementContextAnalyzer.ts",
        "start": 568,
        "end": 578,
        "startLoc": {
          "line": 568,
          "column": 11,
          "position": 5387
        },
        "endLoc": {
          "line": 578,
          "column": 23,
          "position": 5517
        }
      },
      "secondFile": {
        "name": "src\\utils\\xpath\\cache\\xpath-precompiler-cache.ts",
        "start": 117,
        "end": 421,
        "startLoc": {
          "line": 117,
          "column": 11,
          "position": 719
        },
        "endLoc": {
          "line": 421,
          "column": 8,
          "position": 3451
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ".calculateBoundsClarity(element, context);\r\n    priority += boundsClarity;\r\n    \r\n    // 如果存在明确的区域标识符，提高优先级\r\n    const hasRegionIdentifiers = this.hasRegionIdentifiers(element, context);\r\n    if (hasRegionIdentifiers) {\r\n      priority += 3;\r\n    }\r\n    \r\n    return Math.min(priority, 7); // 中等优先级\r\n  }\r\n\r\n  /**\r\n   * 主要分析方法\r\n   */\r\n  async analyze(context: ElementAnalysisContext): Promise<any> {\r\n    const startTime = Date.now();\r\n    const element = context.targetElement;\r\n    const candidates: StrategyCandidate[] = [];\r\n\r\n    this.log('info', '开始区域范围分析'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\RegionScopedAnalyzer.ts",
        "start": 82,
        "end": 102,
        "startLoc": {
          "line": 82,
          "column": 5,
          "position": 478
        },
        "endLoc": {
          "line": 102,
          "column": 11,
          "position": 650
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\index.ts",
        "start": 91,
        "end": 111,
        "startLoc": {
          "line": 91,
          "column": 17,
          "position": 579
        },
        "endLoc": {
          "line": 111,
          "column": 19,
          "position": 751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ";\r\n    \r\n    let baseScore = 79;\r\n\r\n    for (const region of containingRegions.slice(0, 3)) { // 取前3个最相关的区域\r\n      // 策略1: 基于区域容器的resource-id\r\n      if (this.hasValidResourceId(region.container)) {\r\n        const regionId = region.container.attributes['resource-id'];\r\n        candidates.push(this.createCandidate(\r\n          'region-scoped',\r\n          baseScore + 10,\r\n          `通过区域容器定位: ${regionId}`,\r\n          context,\r\n          {\r\n            criteria: {\r\n              fields: ['region-container-id', 'target-bounds'],\r\n              values: {\r\n                'region-container-id': regionId,\r\n                'target-bounds': this.formatBounds(element.bounds)\r\n              },\r\n              xpath: this.buildRegionContainerXPath(region.container, element),\r\n              strategy: 'region-scoped'\r\n            }\r\n          }\r\n        ));\r\n      }\r\n\r\n      // 策略2: 基于区域类型和相对位置\r\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\RegionScopedAnalyzer.ts",
        "start": 172,
        "end": 200,
        "startLoc": {
          "line": 172,
          "column": 2,
          "position": 1231
        },
        "endLoc": {
          "line": 200,
          "column": 6,
          "position": 1461
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\strategies\\RegionContainerAnalyzer.ts",
        "start": 28,
        "end": 56,
        "startLoc": {
          "line": 28,
          "column": 2,
          "position": 158
        },
        "endLoc": {
          "line": 56,
          "column": 3,
          "position": 388
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "calculateRegionComplexity(context: ElementAnalysisContext): number {\r\n    const allElements = context.document.allNodes;\r\n    const uniqueContainerTypes = new Set(\r\n      allElements\r\n        .filter(el => this.isContainer(el))\r\n        .map(el => el.tag)\r\n    );\r\n    return uniqueContainerTypes.size;\r\n  }\r\n\r\n  /**\r\n   * 识别包含区域\r\n   */\r\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\RegionScopedAnalyzer.ts",
        "start": 535,
        "end": 548,
        "startLoc": {
          "line": 535,
          "column": 2,
          "position": 4054
        },
        "endLoc": {
          "line": 548,
          "column": 8,
          "position": 4156
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 23,
        "end": 36,
        "startLoc": {
          "line": 23,
          "column": 3,
          "position": 98
        },
        "endLoc": {
          "line": 36,
          "column": 26,
          "position": 200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", context: ElementAnalysisContext): boolean {\r\n    if (this.hasValidResourceId(region.container)) {\r\n      const resourceId = region.container.attributes['resource-id'];\r\n      const duplicateCount = context.document.allNodes.filter(el => \r\n        el.attributes?.['resource-id'] === resourceId\r\n      ).length;\r\n      return duplicateCount === 1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 计算边界清晰度\r\n   */\r\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\RegionScopedAnalyzer.ts",
        "start": 575,
        "end": 589,
        "startLoc": {
          "line": 575,
          "column": 4,
          "position": 4436
        },
        "endLoc": {
          "line": 589,
          "column": 8,
          "position": 4560
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 65,
        "end": 79,
        "startLoc": {
          "line": 65,
          "column": 11,
          "position": 535
        },
        "endLoc": {
          "line": 79,
          "column": 23,
          "position": 659
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "(element.bounds);\r\n    if (!bounds) return 0;\r\n\r\n    let clarity = 0;\r\n    \r\n    // 基于尺寸合理性\r\n    const area = this.calculateArea(bounds);\r\n    if (area > 100 && area < 100000) { // 合理的元素尺寸\r\n      clarity += 2;\r\n    }\r\n\r\n    // 基于位置合理性\r\n    if (bounds.left >= 0 && bounds.top >= 0) {\r\n      clarity += 1;\r\n    }\r\n\r\n    // 基于边界规整性",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\RegionScopedAnalyzer.ts",
        "start": 590,
        "end": 606,
        "startLoc": {
          "line": 590,
          "column": 12,
          "position": 4592
        },
        "endLoc": {
          "line": 606,
          "column": 11,
          "position": 4734
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 80,
        "end": 96,
        "startLoc": {
          "line": 80,
          "column": 14,
          "position": 689
        },
        "endLoc": {
          "line": 96,
          "column": 11,
          "position": 831
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\r\n    if (density > 5) type = 'dense';\r\n    else if (density > 2) type = 'medium';\r\n    else type = 'sparse';\r\n\r\n    return {\r\n      type,\r\n      count: childElements.length,\r\n      density: Math.round(density * 100) / 100\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 识别布局模式\r\n   */\r\n  private identifyLayoutPattern(region",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\RegionScopedAnalyzer.ts",
        "start": 742,
        "end": 757,
        "startLoc": {
          "line": 742,
          "column": 10,
          "position": 6074
        },
        "endLoc": {
          "line": 757,
          "column": 7,
          "position": 6191
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 239,
        "end": 254,
        "startLoc": {
          "line": 239,
          "column": 4,
          "position": 2430
        },
        "endLoc": {
          "line": 254,
          "column": 10,
          "position": 2547
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\r\n      return elBounds && this.isElementContainedIn(elBounds, regionBounds);\r\n    });\r\n\r\n    const textElements = childElements.filter(el => this.hasMeaningfulText(el));\r\n    const clickableElements = childElements.filter(el => this.isClickable(el));\r\n    const imageElements = childElements.filter(el => el.tag.includes('Image'));\r\n\r\n    return {\r\n      type: 'content-mix',\r\n      values: {\r\n        'text-count': textElements.length,\r\n        'clickable-count': clickableElements.length,\r\n        'image-count': imageElements.length\r\n      }\r\n    };\r\n  }\r\n\r\n  // === 检查和计算辅助方法 ===",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\RegionScopedAnalyzer.ts",
        "start": 781,
        "end": 799,
        "startLoc": {
          "line": 781,
          "column": 7,
          "position": 6449
        },
        "endLoc": {
          "line": 799,
          "column": 21,
          "position": 6625
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\calculators\\RegionCalculator.ts",
        "start": 276,
        "end": 294,
        "startLoc": {
          "line": 276,
          "column": 2,
          "position": 2809
        },
        "endLoc": {
          "line": 294,
          "column": 16,
          "position": 2985
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "); // 中等优先级\r\n  }\r\n\r\n  /**\r\n   * 主要分析方法\r\n   */\r\n  async analyze(context: ElementAnalysisContext): Promise<any> {\r\n    const startTime = Date.now();\r\n    const element = context.targetElement;\r\n    const candidates: StrategyCandidate[] = [];\r\n\r\n    this.log('info', '开始父可点击分析'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\ParentClickableAnalyzer.ts",
        "start": 79,
        "end": 90,
        "startLoc": {
          "line": 79,
          "column": 2,
          "position": 453
        },
        "endLoc": {
          "line": 90,
          "column": 11,
          "position": 544
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\region-scoped\\index.ts",
        "start": 100,
        "end": 111,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 660
        },
        "endLoc": {
          "line": 111,
          "column": 19,
          "position": 751
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(\r\n    element: any,\r\n    clickableParents: any[],\r\n    context: ElementAnalysisContext\r\n  ): Promise<StrategyCandidate[]> {\r\n    const candidates: StrategyCandidate[] = [];\r\n\r\n    const nearestParent = this.findNearestClickableParent(element, clickableParents);\r\n    if (!nearestParent) return candidates;\r\n\r\n    // 策略1: 基于类型层级",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\ParentClickableAnalyzer.ts",
        "start": 382,
        "end": 392,
        "startLoc": {
          "line": 382,
          "column": 30,
          "position": 2882
        },
        "endLoc": {
          "line": 392,
          "column": 15,
          "position": 2979
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\analyzers\\ParentClickableAnalyzer.ts",
        "start": 300,
        "end": 310,
        "startLoc": {
          "line": 300,
          "column": 32,
          "position": 2252
        },
        "endLoc": {
          "line": 310,
          "column": 20,
          "position": 2349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\r\n    request: SafetyCheckRequest, \r\n    currentUsage: number\r\n  ): Promise<{\r\n    allowed: boolean;\r\n    remainingQuota: number;\r\n    waitTimeSeconds?: number;\r\n    resetTime?: Date;\r\n    reason?: string;\r\n  }> {\r\n    const limit = request.taskType === 'follow' \r\n      ? this.config.daily",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\services\\dedup-rate-limit-service.ts",
        "start": 325,
        "end": 336,
        "startLoc": {
          "line": 325,
          "column": 16,
          "position": 2822
        },
        "endLoc": {
          "line": 336,
          "column": 6,
          "position": 2922
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\services\\dedup-rate-limit-service.ts",
        "start": 286,
        "end": 297,
        "startLoc": {
          "line": 286,
          "column": 17,
          "position": 2494
        },
        "endLoc": {
          "line": 297,
          "column": 7,
          "position": 2594
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}次)`,\r\n        adjustedQuota: {\r\n          hourly: Math.max(0, adjustedHourlyLimit - currentUsage.hourly),\r\n          daily: Math.max(0, adjustedDailyLimit - currentUsage.daily),\r\n          weekly: currentUsage.weekly,\r\n          monthly: currentUsage.monthly\r\n        }\r\n      };\r\n    }\r\n    \r\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\services\\dedup-rate-limit-service.ts",
        "start": 453,
        "end": 463,
        "startLoc": {
          "line": 453,
          "column": 19,
          "position": 3996
        },
        "endLoc": {
          "line": 463,
          "column": 7,
          "position": 4087
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\services\\dedup-rate-limit-service.ts",
        "start": 440,
        "end": 450,
        "startLoc": {
          "line": 440,
          "column": 20,
          "position": 3869
        },
        "endLoc": {
          "line": 450,
          "column": 3,
          "position": 3960
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "[] = entries.map(entry => ({\r\n      ...entry,\r\n      id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\r\n      createdAt: new Date(),\r\n      updatedAt: new Date()\r\n    }));\r\n    setBlacklist",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\hooks\\useSafetyControl.ts",
        "start": 209,
        "end": 215,
        "startLoc": {
          "line": 209,
          "column": 15,
          "position": 1964
        },
        "endLoc": {
          "line": 215,
          "column": 13,
          "position": 2055
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\hooks\\useSafetyControl.ts",
        "start": 199,
        "end": 205,
        "startLoc": {
          "line": 199,
          "column": 15,
          "position": 1811
        },
        "endLoc": {
          "line": 205,
          "column": 13,
          "position": 1902
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "},\"${(entry.tags || []).join(',')}\"`\r\n      )\r\n    ].join('\\n');\r\n    \r\n    const blob = new Blob([csv], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'blacklist.csv'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\hooks\\useSafetyControl.ts",
        "start": 239,
        "end": 247,
        "startLoc": {
          "line": 239,
          "column": 10,
          "position": 2380
        },
        "endLoc": {
          "line": 247,
          "column": 16,
          "position": 2495
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\hooks\\useSafetyControl.ts",
        "start": 222,
        "end": 230,
        "startLoc": {
          "line": 222,
          "column": 9,
          "position": 2154
        },
        "endLoc": {
          "line": 230,
          "column": 16,
          "position": 2269
        }
      }
    },
    {
      "format": "javascript",
      "lines": 115,
      "fragment": "}>白名单总数</span>}\r\n            value={whitelist.length}\r\n            valueStyle={{ color: '#52c41a' }}\r\n            prefix={<UserOutlined />}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col span={6}>\r\n        <Card style={{ background: 'var(--bg-light-base)' }}>\r\n          <Statistic\r\n            title={<span style={{ color: 'var(--text-inverse)' }}>黑名单总数</span>}\r\n            value={blacklist.length}\r\n            valueStyle={{ color: '#f5222d' }}\r\n            prefix={<ExclamationCircleOutlined />}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col span={6}>\r\n        <Card style={{ background: 'var(--bg-light-base)' }}>\r\n          <Statistic\r\n            title={<span style={{ color: 'var(--text-inverse)' }}>高优先级白名单</span>}\r\n            value={whitelist.filter(w => w.priority === 'high' || w.priority === 'critical').length}\r\n            valueStyle={{ color: '#1890ff' }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col span={6}>\r\n        <Card style={{ background: 'var(--bg-light-base)' }}>\r\n          <Statistic\r\n            title={<span style={{ color: 'var(--text-inverse)' }}>严重黑名单</span>}\r\n            value={blacklist.filter(b => b.severity === 'high' || b.severity === 'critical').length}\r\n            valueStyle={{ color: '#fa8c16' }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\n/**\r\n * 主管理组件\r\n */\r\nexport const WhiteBlacklistManager: React.FC<WhiteBlacklistManagerProps> = ({\r\n  whitelist,\r\n  blacklist,\r\n  onAddEntry,\r\n  onUpdateEntry,\r\n  onDeleteEntry,\r\n  onBatchImport,\r\n  onExport,\r\n  loading\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState<'whitelist' | 'blacklist'>('whitelist');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [importModalVisible, setImportModalVisible] = useState(false);\r\n  const [editingEntry, setEditingEntry] = useState<WhitelistEntry | BlacklistEntry | null>(null);\r\n  \r\n  const handleAdd = () => {\r\n    setEditingEntry(null);\r\n    setModalVisible(true);\r\n  };\r\n  \r\n  const handleEdit = (entry: WhitelistEntry | BlacklistEntry) => {\r\n    setEditingEntry(entry);\r\n    setModalVisible(true);\r\n  };\r\n  \r\n  const handleModalOk = async (values: any) => {\r\n    try {\r\n      if (editingEntry) {\r\n        await onUpdateEntry(activeTab, editingEntry.id, values);\r\n        message.success('更新成功');\r\n      } else {\r\n        await onAddEntry(activeTab, values);\r\n        message.success('添加成功');\r\n      }\r\n      setModalVisible(false);\r\n      setEditingEntry(null);\r\n    } catch (error) {\r\n      message.error('操作失败');\r\n    }\r\n  };\r\n  \r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      await onDeleteEntry(activeTab, id);\r\n      message.success('删除成功');\r\n    } catch (error) {\r\n      message.error('删除失败');\r\n    }\r\n  };\r\n  \r\n  const handleBatchImport = async (data: any[]) => {\r\n    try {\r\n      await onBatchImport(activeTab, data);\r\n      message.success(`成功导入 ${data.length} 条数据`);\r\n      setImportModalVisible(false);\r\n    } catch (error) {\r\n      message.error('导入失败');\r\n    }\r\n  };\r\n  \r\n  const getColumns = () => {\r\n    const commonColumns = [\r\n      {\r\n        title: '标识符',\r\n        dataIndex: 'identifier',\r\n        key: 'identifier',\r\n        width: 150,\r\n        render: (text: string, record: any) => (\r\n          <div>\r\n            <Text strong style={{",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\components\\WhiteBlacklistManager.tsx",
        "start": 391,
        "end": 505,
        "startLoc": {
          "line": 391,
          "column": 2,
          "position": 3481
        },
        "endLoc": {
          "line": 505,
          "column": 2,
          "position": 4603
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\components\\WhiteBlacklistManager.tsx",
        "start": 387,
        "end": 410,
        "startLoc": {
          "line": 387,
          "column": 2,
          "position": 3429
        },
        "endLoc": {
          "line": 410,
          "column": 2,
          "position": 3664
        }
      }
    },
    {
      "format": "javascript",
      "lines": 71,
      "fragment": "} />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  }\r\n  \r\n  const passRate = statistics.totalChecks > 0 ? \r\n    (statistics.passedChecks / statistics.totalChecks * 100) : 0;\r\n  \r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <Col span={6}>\r\n        <Card style={{ background: 'var(--bg-light-base)' }}>\r\n          <Statistic\r\n            title={<span style={{ color: 'var(--text-inverse)' }}>总检查次数</span>}\r\n            value={statistics.totalChecks}\r\n            valueStyle={{ color: 'var(--text-inverse)' }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col span={6}>\r\n        <Card style={{ background: 'var(--bg-light-base)' }}>\r\n          <Statistic\r\n            title={<span style={{ color: 'var(--text-inverse)' }}>通过次数</span>}\r\n            value={statistics.passedChecks}\r\n            valueStyle={{ color: '#52c41a' }}\r\n            prefix={<CheckCircleOutlined />}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col span={6}>\r\n        <Card style={{ background: 'var(--bg-light-base)' }}>\r\n          <Statistic\r\n            title={<span style={{ color: 'var(--text-inverse)' }}>拦截次数</span>}\r\n            value={statistics.blockedChecks}\r\n            valueStyle={{ color: '#f5222d' }}\r\n            prefix={<CloseCircleOutlined />}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col span={6}>\r\n        <Card style={{ background: 'var(--bg-light-base)' }}>\r\n          <Statistic\r\n            title={<span style={{ color: 'var(--text-inverse)' }}>通过率</span>}\r\n            value={passRate}\r\n            precision={1}\r\n            suffix=\"%\"\r\n            valueStyle={{ \r\n              color: passRate >= 90 ? '#52c41a' : passRate >= 70 ? '#faad14' : '#f5222d' \r\n            }}\r\n          />\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\n/**\r\n * 拦截原因分析\r\n */\r\nconst BlockReasonsCard: React.FC<{\r\n  statistics: SafetyStatistics | null;\r\n}> = ({ statistics }) => {\r\n  if (!statistics) {\r\n    return (\r\n      <Card title=\"拦截原因分析\" loading style={{ background",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\components\\SafetyMonitorPanel.tsx",
        "start": 167,
        "end": 237,
        "startLoc": {
          "line": 167,
          "column": 2,
          "position": 1392
        },
        "endLoc": {
          "line": 237,
          "column": 12,
          "position": 2057
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\components\\WhiteBlacklistManager.tsx",
        "start": 363,
        "end": 505,
        "startLoc": {
          "line": 363,
          "column": 4,
          "position": 3235
        },
        "endLoc": {
          "line": 505,
          "column": 7,
          "position": 4604
        }
      }
    },
    {
      "format": "javascript",
      "lines": 77,
      "fragment": " }}>\r\n          <Form.Item label=\"启用自动恢复\">\r\n            <Switch\r\n              checked={config.autoRecovery.enabled}\r\n              onChange={(enabled) => \r\n                onChange({ \r\n                  autoRecovery: { ...config.autoRecovery, enabled } \r\n                })\r\n              }\r\n            />\r\n          </Form.Item>\r\n          \r\n          <Form.Item label=\"检查间隔（分钟）\">\r\n            <InputNumber\r\n              min={1}\r\n              max={30}\r\n              value={config.autoRecovery.checkIntervalMinutes}\r\n              onChange={(value) => \r\n                onChange({ \r\n                  autoRecovery: { \r\n                    ...config.autoRecovery, \r\n                    checkIntervalMinutes: value || 1 \r\n                  } \r\n                })\r\n              }\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Form.Item>\r\n          \r\n          <Form.Item label=\"成功次数阈值\">\r\n            <InputNumber\r\n              min={1}\r\n              max={20}\r\n              value={config.autoRecovery.successThreshold}\r\n              onChange={(value) => \r\n                onChange({ \r\n                  autoRecovery: { \r\n                    ...config.autoRecovery, \r\n                    successThreshold: value || 3 \r\n                  } \r\n                })\r\n              }\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Form.Item>\r\n        </Card>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\n/**\r\n * 主配置面板组件\r\n */\r\nexport const SafetyConfigPanel: React.FC<SafetyConfigPanelProps> = ({\r\n  deduplicationConfig,\r\n  rateLimitConfig,\r\n  circuitBreakerConfig,\r\n  onDeduplicationChange,\r\n  onRateLimitChange,\r\n  onCircuitBreakerChange,\r\n  onReset,\r\n  onExport,\r\n  onImport\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState('deduplication');\r\n  \r\n  return (\r\n    <div className=\"light-theme-force\" style={{ background: 'var(--bg-light-base)' }}>\r\n      <Card\r\n        title={\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Title level={4} style={{ margin: 0, color: 'var(--text-inverse)' }}>\r\n              安全配置管理\r\n            </Title>\r\n            <Space>\r\n              <Button onClick={onImport",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\components\\SafetyConfigPanel.tsx",
        "start": 547,
        "end": 623,
        "startLoc": {
          "line": 547,
          "column": 3,
          "position": 4431
        },
        "endLoc": {
          "line": 623,
          "column": 9,
          "position": 5018
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\components\\SafetyMonitorPanel.tsx",
        "start": 389,
        "end": 448,
        "startLoc": {
          "line": 389,
          "column": 22,
          "position": 3386
        },
        "endLoc": {
          "line": 448,
          "column": 16,
          "position": 4009
        }
      }
    },
    {
      "format": "javascript",
      "lines": 50,
      "fragment": "}>系统健康度</span>}\r\n                value={healthStatus?.score || 0}\r\n                suffix=\"%\"\r\n                valueStyle={{ \r\n                  color: healthStatus?.score >= 90 ? '#52c41a' : \r\n                         healthStatus?.score >= 70 ? '#faad14' : '#f5222d'\r\n                }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          \r\n          <Col span={6}>\r\n            <Card size=\"small\" style={{ background: 'var(--bg-light-secondary)' }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'var(--text-inverse)' }}>通过率</span>}\r\n                value={passRate}\r\n                precision={1}\r\n                suffix=\"%\"\r\n                valueStyle={{ \r\n                  color: passRate >= 90 ? '#52c41a' : \r\n                         passRate >= 70 ? '#faad14' : '#f5222d'\r\n                }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          \r\n          <Col span={6}>\r\n            <Card size=\"small\" style={{ background: 'var(--bg-light-secondary)' }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'var(--text-inverse)' }}>白名单数量</span>}\r\n                value={whitelist.length}\r\n                valueStyle={{ color: '#52c41a' }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n          \r\n          <Col span={6}>\r\n            <Card size=\"small\" style={{ background: 'var(--bg-light-secondary)' }}>\r\n              <Statistic\r\n                title={<span style={{ color: 'var(--text-inverse)' }}>黑名单数量</span>}\r\n                value={blacklist.length}\r\n                valueStyle={{ color: '#f5222d' }}\r\n              />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        {/* 系统组件状态 */}\r\n        <div>\r\n          <Text strong style={{",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\deduplication-control\\components\\DeduplicationControlManager.tsx",
        "start": 130,
        "end": 179,
        "startLoc": {
          "line": 130,
          "column": 2,
          "position": 1032
        },
        "endLoc": {
          "line": 179,
          "column": 2,
          "position": 1522
        }
      },
      "secondFile": {
        "name": "src\\modules\\deduplication-control\\components\\DeduplicationControlManager.tsx",
        "start": 126,
        "end": 156,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 974
        },
        "endLoc": {
          "line": 156,
          "column": 2,
          "position": 1288
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ";\r\n  const escape = (v: any) => {\r\n    if (v === null || v === undefined) return '';\r\n    const s = String(v);\r\n    if (/[\",\\n]/.test(s)) return '\"' + s.replace(/\"/g, '\"\"') + '\"';\r\n    return s;\r\n  };\r\n  const headerLine = headerLabels",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\utils\\csv.ts",
        "start": 26,
        "end": 33,
        "startLoc": {
          "line": 26,
          "column": 5,
          "position": 486
        },
        "endLoc": {
          "line": 33,
          "column": 13,
          "position": 598
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\utils\\csv.ts",
        "start": 10,
        "end": 17,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 134
        },
        "endLoc": {
          "line": 17,
          "column": 5,
          "position": 246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".map(c => escape(c)).join(',');\r\n  const lines = rows.map(r => cols.map(c => escape(r[c])).join(','));\r\n  return [headerLine, ...lines].join('\\n');\r\n}\r\n\r\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\utils\\csv.ts",
        "start": 33,
        "end": 38,
        "startLoc": {
          "line": 33,
          "column": 13,
          "position": 599
        },
        "endLoc": {
          "line": 38,
          "column": 7,
          "position": 682
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\utils\\csv.ts",
        "start": 17,
        "end": 22,
        "startLoc": {
          "line": 17,
          "column": 5,
          "position": 247
        },
        "endLoc": {
          "line": 22,
          "column": 35,
          "position": 330
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "csv], { type: 'text/csv;charset=utf-8;' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = filename;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n  URL.revokeObjectURL(url);\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\utils\\csv.ts",
        "start": 53,
        "end": 62,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 902
        },
        "endLoc": {
          "line": 62,
          "column": 2,
          "position": 1015
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\utils\\csv.ts",
        "start": 39,
        "end": 48,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 718
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 831
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ",\r\n        render: (status: string | null) => {\r\n          switch (status) {\r\n            case 'available': return <Tag color=\"success\">可用</Tag>;\r\n            case 'assigned': return <Tag color=\"processing\">已分配</Tag>;\r\n            case 'imported': return <Tag color=\"warning\">已导入</Tag>;\r\n            case 'archived': return <Tag color=\"default\">已归档</Tag>;\r\n            default: return <Tag color=\"default\">-</Tag>;\r\n          }\r\n        },",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\ContactImportWorkbench.tsx",
        "start": 150,
        "end": 159,
        "startLoc": {
          "line": 150,
          "column": 5,
          "position": 1605
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1762
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\utils\\ContactWorkbenchColumns.tsx",
        "start": 87,
        "end": 97,
        "startLoc": {
          "line": 87,
          "column": 4,
          "position": 1071
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 1231
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "description={\r\n            <div>\r\n              {rangeConflicts.slice(0, 5).map((c, i) => (\r\n                <div key={i}>设备 {c.deviceA} [{c.rangeA.start}-{c.rangeA.end}] 与 设备 {c.deviceB} [{c.rangeB.start}-{c.rangeB.end}] 重叠</div>\r\n              ))}\r\n              {rangeConflicts.length > 5 && <div style={{ opacity: 0.7 }}>仅显示前5条</div>}\r\n            </div>\r\n          }\r\n        />\r\n      )}\r\n      <Space wrap>",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\ui\\ContactImportWorkbench.tsx",
        "start": 223,
        "end": 233,
        "startLoc": {
          "line": 223,
          "column": 11,
          "position": 2382
        },
        "endLoc": {
          "line": 233,
          "column": 2,
          "position": 2556
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\resizable-layout\\DeviceAssignmentPanel.tsx",
        "start": 66,
        "end": 77,
        "startLoc": {
          "line": 66,
          "column": 11,
          "position": 702
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 878
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\r\n  }\r\n\r\n  distributeContacts(\r\n    contacts: Contact[],\r\n    devices: Device[]\r\n  ): ContactDeviceGroup[] {\r\n    if (contacts.length === 0 || devices.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    const groups: ContactDeviceGroup[] = [];\r\n    let",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 245,
        "end": 257,
        "startLoc": {
          "line": 245,
          "column": 44,
          "position": 1874
        },
        "endLoc": {
          "line": 257,
          "column": 4,
          "position": 1976
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 68,
        "end": 80,
        "startLoc": {
          "line": 68,
          "column": 45,
          "position": 313
        },
        "endLoc": {
          "line": 80,
          "column": 6,
          "position": 415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\r\n    }\r\n\r\n    return groups;\r\n  }\r\n\r\n  validateDistribution(groups: ContactDeviceGroup[]): {\r\n    valid: boolean;\r\n    warnings: string[];\r\n    errors: string[];\r\n  } {\r\n    const warnings: string[] = [];\r\n    const errors: string[] = [];\r\n\r\n    if (groups.length === 0) {\r\n      errors.push(\"没有生成任何设备分组\");\r\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 282,
        "end": 298,
        "startLoc": {
          "line": 282,
          "column": 2,
          "position": 2224
        },
        "endLoc": {
          "line": 298,
          "column": 2,
          "position": 2358
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 134,
        "end": 150,
        "startLoc": {
          "line": 134,
          "column": 3,
          "position": 935
        },
        "endLoc": {
          "line": 150,
          "column": 7,
          "position": 1069
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\r\n    }\r\n\r\n    return {\r\n      valid: errors.length === 0,\r\n      warnings,\r\n      errors,\r\n    };\r\n  }\r\n\r\n  getDistributionStats(groups: ContactDeviceGroup[]): {\r\n    totalContacts: number;\r\n    deviceCount: number;\r\n    averageContactsPerDevice: number;\r\n    minContactsPerDevice: number;\r\n    maxContactsPerDevice: number;\r\n    balance: number;\r\n  } {\r\n    // 使用与ContactBalancedImportStrategy相同的统计计算",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 303,
        "end": 321,
        "startLoc": {
          "line": 303,
          "column": 25,
          "position": 2405
        },
        "endLoc": {
          "line": 321,
          "column": 43,
          "position": 2526
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 173,
        "end": 191,
        "startLoc": {
          "line": 173,
          "column": 7,
          "position": 1284
        },
        "endLoc": {
          "line": 191,
          "column": 3,
          "position": 1405
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\r\n  }\r\n\r\n  validateDistribution(groups: ContactDeviceGroup[]): {\r\n    valid: boolean;\r\n    warnings: string[];\r\n    errors: string[];\r\n  } {\r\n    const warnings: string[] = [];\r\n    const errors: string[] = [];\r\n\r\n    if (groups.length === 0) {\r\n      errors.push(\"没有生成任何设备分组\");\r\n    }\r\n\r\n    warnings",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 396,
        "end": 411,
        "startLoc": {
          "line": 396,
          "column": 2,
          "position": 3177
        },
        "endLoc": {
          "line": 411,
          "column": 9,
          "position": 3304
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 137,
        "end": 300,
        "startLoc": {
          "line": 137,
          "column": 7,
          "position": 948
        },
        "endLoc": {
          "line": 300,
          "column": 25,
          "position": 2364
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "return {\r\n      valid: errors.length === 0,\r\n      warnings,\r\n      errors,\r\n    };\r\n  }\r\n\r\n  getDistributionStats(groups: ContactDeviceGroup[]): {\r\n    totalContacts: number;\r\n    deviceCount: number;\r\n    averageContactsPerDevice: number;\r\n    minContactsPerDevice: number;\r\n    maxContactsPerDevice: number;\r\n    balance: number;\r\n  } {\r\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 413,
        "end": 428,
        "startLoc": {
          "line": 413,
          "column": 5,
          "position": 3316
        },
        "endLoc": {
          "line": 428,
          "column": 6,
          "position": 3426
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\strategies\\contact-strategy-import.ts",
        "start": 176,
        "end": 191,
        "startLoc": {
          "line": 176,
          "column": 5,
          "position": 1295
        },
        "endLoc": {
          "line": 191,
          "column": 3,
          "position": 1405
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ";\r\n    } catch (err) {\r\n      const error = err instanceof Error ? err : new Error(String(err));\r\n      setError(error);\r\n      options.onError?.(error);\r\n      throw error;\r\n    }\r\n  }, [options]);\r\n\r\n  // 导入联系人",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\hooks\\useUnifiedContactImport.ts",
        "start": 142,
        "end": 151,
        "startLoc": {
          "line": 142,
          "column": 16,
          "position": 1318
        },
        "endLoc": {
          "line": 151,
          "column": 9,
          "position": 1409
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\hooks\\useUnifiedContactImport.ts",
        "start": 120,
        "end": 131,
        "startLoc": {
          "line": 120,
          "column": 15,
          "position": 1118
        },
        "endLoc": {
          "line": 131,
          "column": 21,
          "position": 1214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "}\r\n\r\n    } catch (error) {\r\n      errors.push({\r\n        code: \"VALIDATION_ERROR\",\r\n        message: `验证设备时出错: ${\r\n          error instanceof Error ? error.message : String(error)\r\n        }`,\r\n        severity: \"error\" as const,\r\n      });\r\n    }\r\n\r\n    return {\r\n      valid: errors.length === 0,\r\n      errors,\r\n      warnings,\r\n    };\r\n  }\r\n\r\n  async getDeviceCapabilities(device: Device): Promise<DeviceCapabilities> {\r\n    try {\r\n      // 基于设备信息确定能力",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\adapters\\UnifiedAdbDeviceManager.ts",
        "start": 89,
        "end": 110,
        "startLoc": {
          "line": 89,
          "column": 7,
          "position": 731
        },
        "endLoc": {
          "line": 110,
          "column": 14,
          "position": 883
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\devices\\IDeviceManager.ts",
        "start": 135,
        "end": 155,
        "startLoc": {
          "line": 135,
          "column": 7,
          "position": 845
        },
        "endLoc": {
          "line": 155,
          "column": 20,
          "position": 995
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\r\n      \r\n      return {\r\n        supportedFormats: [\"vcf\", \"csv\"],\r\n        maxContactsPerImport: this.calculateMaxContacts(apiLevel),\r\n        supportsVcf: true,\r\n        supportsBatchImport: apiLevel >= 23,\r\n        supportsContactPhotos: apiLevel >= 21,\r\n        supportsCustomFields: apiLevel >= 24,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"获取设备能力失败:\", error);\r\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\adapters\\UnifiedAdbDeviceManager.ts",
        "start": 120,
        "end": 132,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 976
        },
        "endLoc": {
          "line": 132,
          "column": 7,
          "position": 1088
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\devices\\IDeviceManager.ts",
        "start": 156,
        "end": 168,
        "startLoc": {
          "line": 156,
          "column": 3,
          "position": 1015
        },
        "endLoc": {
          "line": 168,
          "column": 13,
          "position": 1127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "-1) {\r\n        this.statusListeners.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  async testImportCapability(device: Device): Promise<{\r\n    canImport: boolean;\r\n    supportedFormats: string[];\r\n    maxBatchSize: number;\r\n    message?: string;\r\n  }> {\r\n    try {\r\n      const validation = await this.validateDevice(device);\r\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-import\\adapters\\UnifiedAdbDeviceManager.ts",
        "start": 201,
        "end": 215,
        "startLoc": {
          "line": 201,
          "column": 2,
          "position": 1716
        },
        "endLoc": {
          "line": 215,
          "column": 6,
          "position": 1837
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\devices\\IDeviceManager.ts",
        "start": 236,
        "end": 250,
        "startLoc": {
          "line": 236,
          "column": 2,
          "position": 1779
        },
        "endLoc": {
          "line": 250,
          "column": 3,
          "position": 1900
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\r\n    \r\n    if (contact.phone) {\r\n      vcfLines.push(`TEL:${contact.phone}`);\r\n    }\r\n    \r\n    if (contact.email) {\r\n      vcfLines.push(`EMAIL:${contact.email}`);\r\n    }\r\n    \r\n    if (contact.organization) {\r\n      vcfLines.push(`ORG:${contact",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\contact-automation\\utils\\vcfGenerator.ts",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 267
        },
        "endLoc": {
          "line": 50,
          "column": 8,
          "position": 359
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\application\\usecases\\ContactImporterUseCase.ts",
        "start": 480,
        "end": 491,
        "startLoc": {
          "line": 480,
          "column": 2,
          "position": 4019
        },
        "endLoc": {
          "line": 491,
          "column": 5,
          "position": 4111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "if (criteria.minLikeCount && !this.meetsMinLikeCount(criteria.minLikeCount)) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查时间窗口\r\n    if (criteria.timeWindowHours && !this.isWithinTimeWindow(criteria.timeWindowHours)) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查地域过滤\r\n    if (criteria.regions && !this.matchesRegionFilter(criteria.regions)) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查情感倾向",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\precise-acquisition\\entities\\Comment.ts",
        "start": 301,
        "end": 315,
        "startLoc": {
          "line": 301,
          "column": 5,
          "position": 2461
        },
        "endLoc": {
          "line": 315,
          "column": 10,
          "position": 2580
        }
      },
      "secondFile": {
        "name": "src\\domain\\precise-acquisition\\entities\\Comment.ts",
        "start": 269,
        "end": 283,
        "startLoc": {
          "line": 269,
          "column": 5,
          "position": 2225
        },
        "endLoc": {
          "line": 283,
          "column": 12,
          "position": 2344
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": Record<AuditAction, string> = {\r\n      [AuditAction.TASK_CREATE]: '创建任务',\r\n      [AuditAction.TASK_EXECUTE]: '执行任务',\r\n      [AuditAction.TASK_FAIL]: '任务失败',\r\n      [AuditAction.EXPORT]: '导出数据',\r\n      [AuditAction.IMPORT]: '导入数据',\r\n      [AuditAction.BATCH_CREATE",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\precise-acquisition\\entities\\AuditLog.ts",
        "start": 363,
        "end": 369,
        "startLoc": {
          "line": 363,
          "column": 13,
          "position": 2701
        },
        "endLoc": {
          "line": 369,
          "column": 13,
          "position": 2780
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\constants\\index.ts",
        "start": 595,
        "end": 601,
        "startLoc": {
          "line": 595,
          "column": 20,
          "position": 4502
        },
        "endLoc": {
          "line": 601,
          "column": 14,
          "position": 4581
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "if (this.currentConnection) {\r\n        this.setCurrentConnection(\r\n          this.currentConnection.withStatus(ConnectionStatus.CONNECTED)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      // 更新错误状态\r\n      if (this.currentConnection) {\r\n        this.setCurrentConnection(\r\n          this.currentConnection.withStatus(\r\n            ConnectionStatus.ERROR, \r\n            `重启服务器失败: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\services\\ConnectionService.ts",
        "start": 190,
        "end": 201,
        "startLoc": {
          "line": 190,
          "column": 7,
          "position": 1336
        },
        "endLoc": {
          "line": 201,
          "column": 11,
          "position": 1428
        }
      },
      "secondFile": {
        "name": "src\\domain\\adb\\services\\ConnectionService.ts",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 7,
          "position": 903
        },
        "endLoc": {
          "line": 137,
          "column": 11,
          "position": 995
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "}\r\n\r\n  /**\r\n   * 添加事件处理器\r\n   */\r\n  addEventHandler(handler: (event: DomainEvent) => void): void {\r\n    this.eventHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * 移除事件处理器\r\n   */\r\n  removeEventHandler(handler: (event: DomainEvent) => void): void {\r\n    const index = this.eventHandlers.indexOf(handler);\r\n    if (index > -1) {\r\n      this.eventHandlers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置当前连接并发送状态变更事件\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\services\\ConnectionService.ts",
        "start": 322,
        "end": 343,
        "startLoc": {
          "line": 322,
          "column": 3,
          "position": 2360
        },
        "endLoc": {
          "line": 343,
          "column": 6,
          "position": 2498
        }
      },
      "secondFile": {
        "name": "src\\domain\\adb\\services\\DeviceManagerService.ts",
        "start": 185,
        "end": 206,
        "startLoc": {
          "line": 185,
          "column": 3,
          "position": 1496
        },
        "endLoc": {
          "line": 206,
          "column": 6,
          "position": 1634
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 发布领域事件\r\n   */\r\n  private publishEvent(event: DomainEvent): void {\r\n    this.eventHandlers.forEach(handler => {\r\n      try {\r\n        handler(event);\r\n      } catch (error) {\r\n        console.error('Event handler error:', error);\r\n      }\r\n    });\r\n  }\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\services\\ConnectionService.ts",
        "start": 356,
        "end": 372,
        "startLoc": {
          "line": 356,
          "column": 2,
          "position": 2613
        },
        "endLoc": {
          "line": 372,
          "column": 2,
          "position": 2715
        }
      },
      "secondFile": {
        "name": "src\\domain\\adb\\services\\DeviceManagerService.ts",
        "start": 200,
        "end": 219,
        "startLoc": {
          "line": 200,
          "column": 2,
          "position": 1619
        },
        "endLoc": {
          "line": 219,
          "column": 6,
          "position": 1724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "};\r\n  }\r\n\r\n  /**\r\n   * 添加事件处理器\r\n   */\r\n  addEventHandler(handler: (event: DomainEvent) => void): void {\r\n    this.eventHandlers.push(handler);\r\n  }\r\n\r\n  /**\r\n   * 移除事件处理器\r\n   */\r\n  removeEventHandler(handler: (event: DomainEvent) => void): void {\r\n    const index = this.eventHandlers.indexOf(handler);\r\n    if (index > -1) {\r\n      this.eventHandlers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 发布领域事件\r\n   */\r\n  private publishEvent(event: DomainEvent): void {\r\n    this.eventHandlers.forEach(handler => {\r\n      try {\r\n        handler(event);\r\n      } catch (error) {\r\n        console.error('Event handler error:', error);\r\n      }\r\n    });\r\n  }\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\services\\adb-diagnostic-service.ts",
        "start": 289,
        "end": 321,
        "startLoc": {
          "line": 289,
          "column": 5,
          "position": 2281
        },
        "endLoc": {
          "line": 321,
          "column": 2,
          "position": 2511
        }
      },
      "secondFile": {
        "name": "src\\domain\\adb\\services\\DeviceManagerService.ts",
        "start": 184,
        "end": 219,
        "startLoc": {
          "line": 184,
          "column": 2,
          "position": 1491
        },
        "endLoc": {
          "line": 219,
          "column": 6,
          "position": 1724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 57,
      "fragment": "import { DiagnosticResult, DiagnosticCategory } from '../entities/DiagnosticResult';\r\n\r\n/**\r\n * 诊断仓储接口\r\n * 定义诊断数据访问的抽象契约\r\n */\r\nexport interface IDiagnosticRepository {\r\n  /**\r\n   * 运行所有诊断检查\r\n   */\r\n  runAllDiagnostics(): Promise<DiagnosticResult[]>;\r\n\r\n  /**\r\n   * 运行特定类别的诊断\r\n   */\r\n  runDiagnosticsByCategory(category: DiagnosticCategory): Promise<DiagnosticResult[]>;\r\n\r\n  /**\r\n   * 运行单个诊断检查\r\n   */\r\n  runSingleDiagnostic(diagnosticId: string): Promise<DiagnosticResult>;\r\n\r\n  /**\r\n   * 检查ADB路径\r\n   */\r\n  checkAdbPath(): Promise<DiagnosticResult>;\r\n\r\n  /**\r\n   * 检查ADB服务器状态\r\n   */\r\n  checkAdbServer(): Promise<DiagnosticResult>;\r\n\r\n  /**\r\n   * 扫描设备\r\n   */\r\n  scanDevices(): Promise<DiagnosticResult>;\r\n\r\n  /**\r\n   * 检查USB调试权限\r\n   */\r\n  checkUsbDebugging(): Promise<DiagnosticResult>;\r\n\r\n  /**\r\n   * 检查驱动程序\r\n   */\r\n  checkDrivers(): Promise<DiagnosticResult>;\r\n\r\n  /**\r\n   * 执行自动修复\r\n   */\r\n  executeAutoFix(diagnosticId: string): Promise<boolean>;\r\n\r\n  /**\r\n   * 获取修复建议\r\n   */\r\n  getFixSuggestions(diagnosticResult: DiagnosticResult): Promise<string[]>;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\repositories\\IDiagnosticRepository.ts",
        "start": 5,
        "end": 61,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 252
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\domain\\repositories\\IDiagnosticRepository.ts",
        "start": 8,
        "end": 64,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 260
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": "import { Device, DeviceQuery } from '../entities/Device';\r\n\r\n/**\r\n * 设备仓储接口\r\n * 定义设备数据访问的抽象契约\r\n */\r\nexport interface IDeviceRepository {\r\n  /**\r\n   * 获取所有设备\r\n   */\r\n  getDevices(): Promise<Device[]>;\r\n\r\n  /**\r\n   * 根据查询条件获取设备\r\n   */\r\n  getDevicesByQuery(query: DeviceQuery): Promise<Device[]>;\r\n\r\n  /**\r\n   * 根据ID获取设备\r\n   */\r\n  getDeviceById(deviceId: string): Promise<Device | null>;\r\n\r\n  /**\r\n   * 获取设备详细信息\r\n   */\r\n  getDeviceInfo(deviceId: string): Promise<Record<string, string> | null>;\r\n\r\n  /**\r\n   * 检查设备是否在线\r\n   */\r\n  isDeviceOnline(deviceId: string): Promise<boolean>;\r\n\r\n  /**\r\n   * 连接到设备\r\n   */\r\n  connectToDevice(address: string): Promise<void>;\r\n\r\n  /**\r\n   * 断开设备连接\r\n   */\r\n  disconnectDevice(deviceId: string): Promise<void>;\r\n\r\n  /**\r\n   * 连接到常见的模拟器端口\r\n   */\r\n  connectToCommonEmulatorPorts(): Promise<Device[]>;\r\n\r\n  /**\r\n   * 监听设备变化\r\n   */\r\n  watchDeviceChanges(callback: (devices: Device[]) => void): () => void;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\repositories\\IDeviceRepository.ts",
        "start": 5,
        "end": 56,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 272
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\domain\\repositories\\IDeviceRepository.ts",
        "start": 8,
        "end": 59,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 280
        }
      }
    },
    {
      "format": "typescript",
      "lines": 75,
      "fragment": "import { AdbConnection, AdbConfig } from '../entities/AdbConnection';\r\n\r\n/**\r\n * ADB仓储接口\r\n * 定义ADB连接和配置的抽象契约\r\n */\r\nexport interface IAdbRepository {\r\n  /**\r\n   * 检测智能ADB路径\r\n   */\r\n  detectSmartAdbPath(): Promise<string>;\r\n\r\n  /**\r\n   * 检测雷电模拟器ADB路径\r\n   */\r\n  detectLdPlayerAdbPath(): Promise<string | null>;\r\n\r\n  /**\r\n   * 检查文件是否存在\r\n   */\r\n  checkFileExists(path: string): Promise<boolean>;\r\n\r\n  /**\r\n   * 获取ADB版本信息\r\n   */\r\n  getAdbVersion(adbPath?: string): Promise<string>;\r\n\r\n  /**\r\n   * 启动ADB服务器\r\n   */\r\n  startAdbServer(adbPath?: string): Promise<void>;\r\n\r\n  /**\r\n   * 停止ADB服务器\r\n   */\r\n  stopAdbServer(adbPath?: string): Promise<void>;\r\n\r\n  /**\r\n   * 重启ADB服务器\r\n   */\r\n  restartAdbServer(adbPath?: string): Promise<void>;\r\n\r\n  /**\r\n   * 检查ADB服务器状态\r\n   */\r\n  checkAdbServerStatus(adbPath?: string): Promise<boolean>;\r\n\r\n  /**\r\n   * 执行ADB命令\r\n   */\r\n  executeAdbCommand(args: string[], adbPath?: string): Promise<string>;\r\n\r\n  /**\r\n   * 创建ADB连接\r\n   */\r\n  createConnection(config: AdbConfig): Promise<AdbConnection>;\r\n\r\n  /**\r\n   * 测试连接\r\n   */\r\n  testConnection(adbPath: string): Promise<boolean>;\r\n\r\n  /**\r\n   * 清理本机已保存的 ADB 密钥（~/.android/adbkey*），\r\n   * 以便下次连接时重新生成并弹出授权对话框。\r\n   */\r\n  clearAdbKeys(): Promise<void>;\r\n\r\n  /**\r\n   * 无线调试配对（Android 11+），等价于执行 `adb pair <host:pairPort>` 并输入配对码。\r\n   * @param hostPort 形如 \"192.168.1.10:37123\" 的配对地址\r\n   * @param code 6 位配对码\r\n   */\r\n  pairWireless(hostPort: string, code: string): Promise<string>;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\repositories\\IAdbRepository.ts",
        "start": 5,
        "end": 79,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 351
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\domain\\repositories\\IAdbRepository.ts",
        "start": 8,
        "end": 82,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 359
        }
      }
    },
    {
      "format": "typescript",
      "lines": 199,
      "fragment": "/**\r\n * 诊断结果实体\r\n * 表示ADB环境诊断的结果\r\n */\r\nexport class DiagnosticResult {\r\n  constructor(\r\n    public readonly id: string,\r\n    public readonly name: string,\r\n    public readonly status: DiagnosticStatus,\r\n    public readonly message: string,\r\n    public readonly details?: string,\r\n    public readonly suggestion?: string,\r\n    public readonly canAutoFix: boolean = false,\r\n    public readonly autoFixAction?: () => Promise<boolean>,\r\n    public readonly timestamp: Date = new Date(),\r\n    public readonly category: DiagnosticCategory = DiagnosticCategory.GENERAL,\r\n    public readonly source?: string,\r\n    public readonly deviceId?: string,\r\n    public readonly sessionId?: string\r\n  ) {}\r\n\r\n  /**\r\n   * 创建成功的诊断结果\r\n   */\r\n  static success(id: string, name: string, message: string): DiagnosticResult {\r\n    return new DiagnosticResult(id, name, DiagnosticStatus.SUCCESS, message);\r\n  }\r\n\r\n  /**\r\n   * 创建警告的诊断结果\r\n   */\r\n  static warning(\r\n    id: string,\r\n    name: string,\r\n    message: string,\r\n    suggestion?: string\r\n  ): DiagnosticResult {\r\n    return new DiagnosticResult(\r\n      id,\r\n      name,\r\n      DiagnosticStatus.WARNING,\r\n      message,\r\n      undefined,\r\n      suggestion\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 创建错误的诊断结果\r\n   */\r\n  static error(\r\n    id: string,\r\n    name: string,\r\n    message: string,\r\n    details?: string,\r\n    suggestion?: string,\r\n    canAutoFix: boolean = false,\r\n    autoFixAction?: () => Promise<boolean>\r\n  ): DiagnosticResult {\r\n    return new DiagnosticResult(\r\n      id,\r\n      name,\r\n      DiagnosticStatus.ERROR,\r\n      message,\r\n      details,\r\n      suggestion,\r\n      canAutoFix,\r\n      autoFixAction\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 检查是否为错误状态\r\n   */\r\n  isError(): boolean {\r\n    return this.status === DiagnosticStatus.ERROR;\r\n  }\r\n\r\n  /**\r\n   * 检查是否可以自动修复\r\n   */\r\n  isAutoFixable(): boolean {\r\n    return this.canAutoFix && this.autoFixAction !== undefined;\r\n  }\r\n\r\n  /**\r\n   * 执行自动修复\r\n   */\r\n  async executeAutoFix(): Promise<boolean> {\r\n    if (!this.isAutoFixable()) {\r\n      throw new Error(`诊断项 ${this.name} 不支持自动修复`);\r\n    }\r\n    return await this.autoFixAction!();\r\n  }\r\n\r\n  /**\r\n   * 创建诊断结果副本并更新状态\r\n   */\r\n  withStatus(status: DiagnosticStatus, message?: string): DiagnosticResult {\r\n    return new DiagnosticResult(\r\n      this.id,\r\n      this.name,\r\n      status,\r\n      message || this.message,\r\n      this.details,\r\n      this.suggestion,\r\n      this.canAutoFix,\r\n      this.autoFixAction,\r\n      new Date(),\r\n      this.category,\r\n      this.source,\r\n      this.deviceId,\r\n      this.sessionId\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 诊断状态枚举\r\n */\r\nexport enum DiagnosticStatus {\r\n  SUCCESS = 'success',\r\n  WARNING = 'warning',\r\n  ERROR = 'error',\r\n  RUNNING = 'running'\r\n}\r\n\r\n/**\r\n * 诊断类别枚举\r\n */\r\nexport enum DiagnosticCategory {\r\n  GENERAL = 'general',\r\n  PATH_DETECTION = 'path_detection',\r\n  DEVICE_CONNECTION = 'device_connection',\r\n  SERVER_STATUS = 'server_status',\r\n  PERMISSIONS = 'permissions'\r\n}\r\n\r\n/**\r\n * 诊断摘要值对象\r\n */\r\nexport class DiagnosticSummary {\r\n  constructor(\r\n    public readonly totalChecks: number,\r\n    public readonly successCount: number,\r\n    public readonly warningCount: number,\r\n    public readonly errorCount: number,\r\n    public readonly autoFixableCount: number,\r\n    public readonly lastRun: Date = new Date()\r\n  ) {}\r\n\r\n  /**\r\n   * 从诊断结果列表创建摘要\r\n   */\r\n  static fromResults(results: DiagnosticResult[]): DiagnosticSummary {\r\n    const totalChecks = results.length;\r\n    const successCount = results.filter(r => r.status === DiagnosticStatus.SUCCESS).length;\r\n    const warningCount = results.filter(r => r.status === DiagnosticStatus.WARNING).length;\r\n    const errorCount = results.filter(r => r.status === DiagnosticStatus.ERROR).length;\r\n    const autoFixableCount = results.filter(r => r.isAutoFixable()).length;\r\n\r\n    return new DiagnosticSummary(\r\n      totalChecks,\r\n      successCount,\r\n      warningCount,\r\n      errorCount,\r\n      autoFixableCount\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 检查是否有错误\r\n   */\r\n  hasErrors(): boolean {\r\n    return this.errorCount > 0;\r\n  }\r\n\r\n  /**\r\n   * 检查是否有警告\r\n   */\r\n  hasWarnings(): boolean {\r\n    return this.warningCount > 0;\r\n  }\r\n\r\n  /**\r\n   * 检查是否健康（无错误和警告）\r\n   */\r\n  isHealthy(): boolean {\r\n    return !this.hasErrors() && !this.hasWarnings();\r\n  }\r\n\r\n  /**\r\n   * 获取健康度百分比\r\n   */\r\n  getHealthPercentage(): number {\r\n    if (this.totalChecks === 0) return 100;\r\n    return Math.round((this.successCount / this.totalChecks) * 100);\r\n  }\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\entities\\DiagnosticResult.ts",
        "start": 5,
        "end": 203,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 203,
          "column": 2,
          "position": 1426
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\domain\\entities\\DiagnosticResult.ts",
        "start": 8,
        "end": 206,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 206,
          "column": 2,
          "position": 1434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 155,
      "fragment": "/**\r\n * 设备实体 - 核心领域对象\r\n * 表示一个Android设备或模拟器\r\n */\r\nexport class Device {\r\n  constructor(\r\n    public readonly id: string,\r\n    public readonly name: string,\r\n    public readonly status: DeviceStatus,\r\n    public readonly type: DeviceType,\r\n    public readonly model?: string,\r\n    public readonly product?: string,\r\n    public readonly transportId?: string,\r\n    public readonly lastSeen: Date = new Date(),\r\n    public readonly properties: Record<string, string> = {}\r\n  ) {}\r\n\r\n  /**\r\n   * 从原始数据创建设备实例\r\n   */\r\n  static fromRaw(data: {\r\n    id: string;\r\n    status: string;\r\n    model?: string;\r\n    product?: string;\r\n    transport_id?: string;\r\n    type?: string;\r\n  }): Device {\r\n    return new Device(\r\n      data.id,\r\n      data.model || data.product || `Device-${data.id.slice(0, 8)}`,\r\n      Device.parseStatus(data.status),\r\n      Device.parseType(data.type || data.id),\r\n      data.model,\r\n      data.product,\r\n      data.transport_id,\r\n      new Date()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 解析设备状态\r\n   */\r\n  private static parseStatus(status: string): DeviceStatus {\r\n    switch (status.toLowerCase()) {\r\n      case 'device':\r\n        return DeviceStatus.ONLINE;\r\n      case 'offline':\r\n        return DeviceStatus.OFFLINE;\r\n      case 'unauthorized':\r\n        return DeviceStatus.UNAUTHORIZED;\r\n      default:\r\n        return DeviceStatus.UNKNOWN;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析设备类型\r\n   */\r\n  private static parseType(identifier: string): DeviceType {\r\n    if (identifier.includes('emulator') || identifier.startsWith('127.0.0.1')) {\r\n      return DeviceType.EMULATOR;\r\n    }\r\n    if (identifier.includes(':')) {\r\n      return DeviceType.WIFI;\r\n    }\r\n    return DeviceType.USB;\r\n  }\r\n\r\n  /**\r\n   * 检查设备是否在线\r\n   */\r\n  isOnline(): boolean {\r\n    return this.status === DeviceStatus.ONLINE;\r\n  }\r\n\r\n  /**\r\n   * 检查设备是否为模拟器\r\n   */\r\n  isEmulator(): boolean {\r\n    return this.type === DeviceType.EMULATOR;\r\n  }\r\n\r\n  /**\r\n   * 获取设备显示名称\r\n   */\r\n  getDisplayName(): string {\r\n    if (this.model) return this.model;\r\n    if (this.product) return this.product;\r\n    return this.isEmulator() ? `模拟器 ${this.id}` : `设备 ${this.id}`;\r\n  }\r\n\r\n  /**\r\n   * 创建设备副本并更新状态\r\n   */\r\n  withStatus(status: DeviceStatus): Device {\r\n    return new Device(\r\n      this.id,\r\n      this.name,\r\n      status,\r\n      this.type,\r\n      this.model,\r\n      this.product,\r\n      this.transportId,\r\n      new Date(),\r\n      this.properties\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 创建设备副本并更新属性\r\n   */\r\n  withProperties(properties: Record<string, string>): Device {\r\n    return new Device(\r\n      this.id,\r\n      this.name,\r\n      this.status,\r\n      this.type,\r\n      this.model,\r\n      this.product,\r\n      this.transportId,\r\n      this.lastSeen,\r\n      { ...this.properties, ...properties }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 设备状态枚举\r\n */\r\nexport enum DeviceStatus {\r\n  ONLINE = 'online',\r\n  OFFLINE = 'offline',\r\n  UNAUTHORIZED = 'unauthorized',\r\n  CONNECTING = 'connecting',\r\n  UNKNOWN = 'unknown'\r\n}\r\n\r\n/**\r\n * 设备类型枚举\r\n */\r\nexport enum DeviceType {\r\n  USB = 'usb',\r\n  WIFI = 'wifi',\r\n  EMULATOR = 'emulator'\r\n}\r\n\r\n/**\r\n * 设备查询接口\r\n */\r\nexport interface DeviceQuery {\r\n  status?: DeviceStatus;\r\n  type?: DeviceType;\r\n  onlineOnly?: boolean;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\entities\\Device.ts",
        "start": 5,
        "end": 159,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1093
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\domain\\entities\\Device.ts",
        "start": 8,
        "end": 162,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 162,
          "column": 2,
          "position": 1101
        }
      }
    },
    {
      "format": "typescript",
      "lines": 109,
      "fragment": "/**\r\n * ADB连接实体\r\n * 表示与ADB服务的连接状态和配置\r\n */\r\nexport class AdbConnection {\r\n  constructor(\r\n    public readonly adbPath: string,\r\n    public readonly status: ConnectionStatus,\r\n    public readonly version?: string,\r\n    public readonly serverPort: number = 5037,\r\n    public readonly lastCheck: Date = new Date(),\r\n    public readonly errorMessage?: string\r\n  ) {}\r\n\r\n  /**\r\n   * 创建新的连接实例\r\n   */\r\n  static create(adbPath: string): AdbConnection {\r\n    return new AdbConnection(adbPath, ConnectionStatus.DISCONNECTED);\r\n  }\r\n\r\n  /**\r\n   * 检查连接是否活跃\r\n   */\r\n  isActive(): boolean {\r\n    return this.status === ConnectionStatus.CONNECTED;\r\n  }\r\n\r\n  /**\r\n   * 检查是否需要重新连接\r\n   */\r\n  needsReconnection(): boolean {\r\n    const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\r\n    return this.lastCheck < fiveMinutesAgo || this.status === ConnectionStatus.ERROR;\r\n  }\r\n\r\n  /**\r\n   * 创建连接副本并更新状态\r\n   */\r\n  withStatus(status: ConnectionStatus, errorMessage?: string): AdbConnection {\r\n    return new AdbConnection(\r\n      this.adbPath,\r\n      status,\r\n      this.version,\r\n      this.serverPort,\r\n      new Date(),\r\n      errorMessage\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 创建连接副本并更新版本信息\r\n   */\r\n  withVersion(version: string): AdbConnection {\r\n    return new AdbConnection(\r\n      this.adbPath,\r\n      this.status,\r\n      version,\r\n      this.serverPort,\r\n      this.lastCheck,\r\n      this.errorMessage\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 连接状态枚举\r\n */\r\nexport enum ConnectionStatus {\r\n  DISCONNECTED = 'disconnected',\r\n  CONNECTING = 'connecting',\r\n  CONNECTED = 'connected',\r\n  ERROR = 'error'\r\n}\r\n\r\n/**\r\n * ADB配置值对象\r\n */\r\nexport class AdbConfig {\r\n  constructor(\r\n    public readonly adbPath: string,\r\n    public readonly autoDetectPath: boolean = true,\r\n    public readonly ldPlayerPath?: string,\r\n    public readonly autoDetectLdPlayer: boolean = true,\r\n    public readonly serverPort: number = 5037,\r\n    public readonly commandTimeout: number = 30000\r\n  ) {}\r\n\r\n  /**\r\n   * 创建默认配置\r\n   */\r\n  static default(): AdbConfig {\r\n    return new AdbConfig('auto');\r\n  }\r\n\r\n  /**\r\n   * 创建配置副本并更新路径\r\n   */\r\n  withAdbPath(adbPath: string): AdbConfig {\r\n    return new AdbConfig(\r\n      adbPath,\r\n      this.autoDetectPath,\r\n      this.ldPlayerPath,\r\n      this.autoDetectLdPlayer,\r\n      this.serverPort,\r\n      this.commandTimeout\r\n    );\r\n  }\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\domain\\adb\\entities\\AdbConnection.ts",
        "start": 5,
        "end": 113,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 113,
          "column": 2,
          "position": 723
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\domain\\entities\\AdbConnection.ts",
        "start": 8,
        "end": 116,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 116,
          "column": 2,
          "position": 731
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "}}>\r\n              {cacheStats.totalPages}\r\n            </div>\r\n          </Card>\r\n          <Card\r\n            size=\"small\"\r\n            style={{ textAlign: \"center\", padding: \"8px 4px\", minHeight: \"auto\" }}\r\n            bodyStyle={{ padding: \"8px 4px\" }}\r\n          >\r\n            <div style={{ fontSize: \"10px\", color: \"#666\", marginBottom: \"2px\" }}>缓存大小</div>\r\n            <div style={{ fontSize: \"14px\", fontWeight: \"bold\", color: \"#52c41a\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\xml-cache\\components\\CacheToolbar.tsx",
        "start": 84,
        "end": 94,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 691
        },
        "endLoc": {
          "line": 94,
          "column": 10,
          "position": 816
        }
      },
      "secondFile": {
        "name": "src\\components\\xml-cache\\components\\CacheToolbar.tsx",
        "start": 76,
        "end": 84,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 583
        },
        "endLoc": {
          "line": 84,
          "column": 10,
          "position": 689
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\r\n  onSelect: (page: CachedXmlPage) => void;\r\n  onDelete: (page: CachedXmlPage) => void;\r\n  onCopyPath: (page: CachedXmlPage) => void;\r\n  onReveal: (page: CachedXmlPage) => void;\r\n  formatFileSize: (bytes: number) => string;\r\n  formatTime: (date: Date) => string;\r\n  getAppIcon: (appPackage: string) => string;\r\n}\r\n\r\n// 使用内联样式而非全局覆盖",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\xml-cache\\components\\CachedPageList.tsx",
        "start": 14,
        "end": 24,
        "startLoc": {
          "line": 14,
          "column": 7,
          "position": 111
        },
        "endLoc": {
          "line": 24,
          "column": 16,
          "position": 238
        }
      },
      "secondFile": {
        "name": "src\\components\\xml-cache\\components\\VirtualizedCachedPageList.tsx",
        "start": 14,
        "end": 24,
        "startLoc": {
          "line": 14,
          "column": 7,
          "position": 115
        },
        "endLoc": {
          "line": 24,
          "column": 57,
          "position": 242
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "if (className.includes('Button')) return '按钮';\r\n    if (className.includes('TextView')) return '文本';\r\n    if (className.includes('ImageView')) return '图片';\r\n    if (className.includes('EditText')) return '输入框';\r\n    if (className.includes('RecyclerView')) return '列表';\r\n    if (className.includes('ViewPager')) return '滑动页面';\r\n    if (className.includes('Tab')) return '标签页';\r\n    return '未知元素';\r\n  }\r\n\r\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\xml-parser\\ElementCategorizer.ts",
        "start": 231,
        "end": 241,
        "startLoc": {
          "line": 231,
          "column": 5,
          "position": 1986
        },
        "endLoc": {
          "line": 241,
          "column": 8,
          "position": 2125
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils\\categorization.ts",
        "start": 11,
        "end": 21,
        "startLoc": {
          "line": 11,
          "column": 3,
          "position": 109
        },
        "endLoc": {
          "line": 21,
          "column": 7,
          "position": 246
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const [, x1Str, y1Str, x2Str, y2Str] = match;\r\n    const x1 = parseInt(x1Str, 10);\r\n    const y1 = parseInt(y1Str, 10);\r\n    const x2 = parseInt(x2Str, 10);\r\n    const y2 = parseInt(y2Str, 10);\r\n\r\n    // 验证坐标有效性",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\xml-parser\\BoundsParser.ts",
        "start": 29,
        "end": 35,
        "startLoc": {
          "line": 29,
          "column": 5,
          "position": 201
        },
        "endLoc": {
          "line": 35,
          "column": 11,
          "position": 295
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\shared\\utils\\boundsParser.ts",
        "start": 33,
        "end": 39,
        "startLoc": {
          "line": 33,
          "column": 9,
          "position": 153
        },
        "endLoc": {
          "line": 39,
          "column": 3,
          "position": 247
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "= {\r\n      'com.xingin.xhs': '小红书',\r\n      'com.tencent.mm': '微信',\r\n      'com.taobao.taobao': '淘宝',\r\n      'com.jingdong.app.mall': '京东',\r\n      'com.tmall.wireless': '天猫',\r\n      'com.sina.weibo': '微博',\r\n      'com.ss.android.ugc.aweme': '抖音',\r\n      'com.tencent.mobileqq': 'QQ',\r\n      'com.alibaba.android.rimet': '钉钉',\r\n      'com.autonavi.minimap': '高德地图',\r\n      'com.baidu.BaiduMap': '百度地图',\r\n      'com.netease.cloudmusic': '网易云音乐',\r\n      'com.tencent.qqmusic': 'QQ音乐',",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\xml-parser\\AppPageAnalyzer.ts",
        "start": 107,
        "end": 120,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 784
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 890
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils\\appAnalysis.ts",
        "start": 18,
        "end": 20,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 196
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\r\n    category: categorizeElement(element),\r\n    position: {\r\n      x: element.bounds.left,\r\n      y: element.bounds.top,\r\n      width: element.bounds.right - element.bounds.left,\r\n      height: element.bounds.bottom - element.bounds.top,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\types\\index.ts",
        "start": 234,
        "end": 240,
        "startLoc": {
          "line": 234,
          "column": 10,
          "position": 1315
        },
        "endLoc": {
          "line": 240,
          "column": 2,
          "position": 1397
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\visual-view\\utils.ts",
        "start": 22,
        "end": 29,
        "startLoc": {
          "line": 22,
          "column": 3,
          "position": 144
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 229
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "configs.map((config, index) => ({\r\n      key: config.key,\r\n      title: config.title,\r\n      dataIndex: config.dataIndex,\r\n      visible: config.defaultVisible !== false,\r\n      width: config.defaultWidth ?? 120,\r\n      order: index,\r\n    })))",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\table\\useTableColumns.ts",
        "start": 229,
        "end": 236,
        "startLoc": {
          "line": 229,
          "column": 2,
          "position": 2434
        },
        "endLoc": {
          "line": 236,
          "column": 2,
          "position": 2522
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\table\\useTableColumns.ts",
        "start": 118,
        "end": 125,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1093
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 1181
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "};\r\n  }, []);\r\n\r\n  // 检查元素是否被隐藏\r\n  const isElementHidden = useCallback((elementId: string): boolean => {\r\n    return hiddenElements.some(hidden => hidden.id === elementId);\r\n  }, [hiddenElements]);\r\n\r\n  // 获取可见的元素列表\r\n  const getVisibleElements = useCallback((): UIElement[] => {\r\n    const hiddenIds = new Set(hiddenElements.map(h => h.id));\r\n    return elements.filter(element => !hiddenIds.has(element.id));\r\n  }, [elements, hiddenElements]);\r\n\r\n  // 处理元素点击",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 61,
        "end": 75,
        "startLoc": {
          "line": 61,
          "column": 5,
          "position": 496
        },
        "endLoc": {
          "line": 75,
          "column": 10,
          "position": 669
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useEnhancedElementSelectionManager.ts",
        "start": 69,
        "end": 83,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 564
        },
        "endLoc": {
          "line": 83,
          "column": 15,
          "position": 737
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "hoverTimeoutRef.current = setTimeout(() => {\r\n        setHoveredElement(elementId);\r\n      }, hoverDelay);\r\n    } else {\r\n      setHoveredElement(null);\r\n    }\r\n  }, [enableHover, hoverDelay]);\r\n\r\n  // 确认选择元素\r\n  const confirmSelection = useCallback(() => {\r\n    console.log('🔍 confirmSelection called, pendingSelection:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 7,
          "position": 1007
        },
        "endLoc": {
          "line": 126,
          "column": 48,
          "position": 1102
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useEnhancedElementSelectionManager.ts",
        "start": 120,
        "end": 130,
        "startLoc": {
          "line": 120,
          "column": 7,
          "position": 1087
        },
        "endLoc": {
          "line": 130,
          "column": 54,
          "position": 1182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", onElementSelected]);\r\n\r\n  // 隐藏元素\r\n  const hideElement = useCallback(() => {\r\n    if (pendingSelection) {\r\n      console.log('👁️ 隐藏元素:', pendingSelection.element.text);\r\n      \r\n      const elementId = pendingSelection.element.id;\r\n      const hiddenElement: HiddenElement = {\r\n        id: elementId,\r\n        hiddenAt: Date.now()\r\n      };\r\n      \r\n      // 添加到隐藏列表",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 143,
        "end": 156,
        "startLoc": {
          "line": 143,
          "column": 17,
          "position": 1257
        },
        "endLoc": {
          "line": 156,
          "column": 11,
          "position": 1372
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useEnhancedElementSelectionManager.ts",
        "start": 159,
        "end": 172,
        "startLoc": {
          "line": 159,
          "column": 22,
          "position": 1431
        },
        "endLoc": {
          "line": 172,
          "column": 18,
          "position": 1546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "const restoreTimeout = setTimeout(() => {\r\n        setHiddenElements(prev => prev.filter(h => h.id !== elementId));\r\n        restoreTimeoutsRef.current.delete(elementId);\r\n      }, autoRestoreTime);\r\n      \r\n      restoreTimeoutsRef.current.set(elementId, restoreTimeout);\r\n      \r\n      // 清除待确认状态",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 160,
        "end": 167,
        "startLoc": {
          "line": 160,
          "column": 7,
          "position": 1400
        },
        "endLoc": {
          "line": 167,
          "column": 11,
          "position": 1484
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useEnhancedElementSelectionManager.ts",
        "start": 174,
        "end": 180,
        "startLoc": {
          "line": 174,
          "column": 7,
          "position": 1566
        },
        "endLoc": {
          "line": 180,
          "column": 20,
          "position": 1648
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "text: element.text || '',\r\n        'content-desc': element.description || '',\r\n        class: element.type || '',\r\n        clickable: element.clickable || false,\r\n        enabled: true,\r\n        bounds: this.formatBounds(position)\r\n      },\r\n      siblings: [],\r\n      parent",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\data-transform\\ElementContextCreator.ts",
        "start": 85,
        "end": 93,
        "startLoc": {
          "line": 85,
          "column": 9,
          "position": 645
        },
        "endLoc": {
          "line": 93,
          "column": 7,
          "position": 735
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\data-transform\\ElementContextCreator.ts",
        "start": 36,
        "end": 43,
        "startLoc": {
          "line": 36,
          "column": 9,
          "position": 248
        },
        "endLoc": {
          "line": 43,
          "column": 8,
          "position": 336
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "): boolean {\r\n    return !(bounds1.x + bounds1.width <= bounds2.x || \r\n             bounds2.x + bounds2.width <= bounds1.x || \r\n             bounds1.y + bounds1.height <= bounds2.y || \r\n             bounds2.y + bounds2.height <= bounds1.y);\r\n  }\r\n\r\n  /**\r\n   * 为子元素创建简化上下文\r\n   * @param element 子元素  \r\n   * @returns 简化上下文\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\data-transform\\ElementContextCreator.ts",
        "start": 226,
        "end": 237,
        "startLoc": {
          "line": 226,
          "column": 3,
          "position": 1932
        },
        "endLoc": {
          "line": 237,
          "column": 6,
          "position": 2031
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\xml-parser\\BoundsParser.ts",
        "start": 84,
        "end": 95,
        "startLoc": {
          "line": 84,
          "column": 14,
          "position": 729
        },
        "endLoc": {
          "line": 95,
          "column": 6,
          "position": 828
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "(element: VisualUIElement): ElementContext {\r\n    const position = element.position || { x: 0, y: 0, width: 100, height: 50 };\r\n    \r\n    return {\r\n      element: {\r\n        'resource-id': '',\r\n        text: element.text || '',\r\n        'content-desc': element.description || '',\r\n        class: element.type || '',\r\n        clickable: element.clickable || false,\r\n        enabled: true,\r\n        bounds: this.formatBounds(position)\r\n      },\r\n      siblings: [],\r\n      parent: undefined,\r\n      children: [],\r\n      depth: 0,\r\n      path: '',\r\n      xmlContent: ''\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 为父元素创建简化上下文\r\n   * @param element 父元素\r\n   * @returns 简化上下文\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\data-transform\\ElementContextCreator.ts",
        "start": 238,
        "end": 264,
        "startLoc": {
          "line": 238,
          "column": 25,
          "position": 2040
        },
        "endLoc": {
          "line": 264,
          "column": 6,
          "position": 2260
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\data-transform\\ElementContextCreator.ts",
        "start": 79,
        "end": 105,
        "startLoc": {
          "line": 79,
          "column": 20,
          "position": 566
        },
        "endLoc": {
          "line": 105,
          "column": 6,
          "position": 786
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ": React.FC<HTMLMotionProps<\"div\"> & { children: React.ReactNode }> = ({\r\n  children,\r\n  ...props\r\n}) => (\r\n  <motion.div\r\n    variants={scaleVariants}\r\n    initial=\"initial\"\r\n    animate=\"animate\"\r\n    exit=\"exit\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </motion.div>\r\n);\r\n\r\n/**\r\n * 弹出动画组件 - 更强调的效果\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\ui\\motion\\MotionComponents.tsx",
        "start": 88,
        "end": 105,
        "startLoc": {
          "line": 88,
          "column": 8,
          "position": 479
        },
        "endLoc": {
          "line": 105,
          "column": 4,
          "position": 582
        }
      },
      "secondFile": {
        "name": "src\\components\\ui\\motion\\MotionComponents.tsx",
        "start": 37,
        "end": 54,
        "startLoc": {
          "line": 37,
          "column": 7,
          "position": 143
        },
        "endLoc": {
          "line": 54,
          "column": 4,
          "position": 246
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ": React.FC<HTMLMotionProps<\"div\"> & { children: React.ReactNode }> = ({\r\n  children,\r\n  ...props\r\n}) => (\r\n  <motion.div\r\n    variants={popVariants}\r\n    initial=\"initial\"\r\n    animate=\"animate\"\r\n    exit=\"exit\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </motion.div>\r\n);\r\n\r\n// ==================== 交互 Motion 组件 ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\ui\\motion\\MotionComponents.tsx",
        "start": 106,
        "end": 121,
        "startLoc": {
          "line": 106,
          "column": 6,
          "position": 590
        },
        "endLoc": {
          "line": 121,
          "column": 58,
          "position": 693
        }
      },
      "secondFile": {
        "name": "src\\components\\ui\\motion\\MotionComponents.tsx",
        "start": 37,
        "end": 54,
        "startLoc": {
          "line": 37,
          "column": 7,
          "position": 143
        },
        "endLoc": {
          "line": 54,
          "column": 4,
          "position": 246
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ": React.ReactNode;\r\n  isOpen: boolean;\r\n}> = ({\r\n  children,\r\n  isOpen,\r\n  ...props\r\n}) => (\r\n  <motion.div\r\n    variants={overlayVariants}\r\n    initial=\"hidden\"\r\n    animate={isOpen ? \"visible\" : \"exit\"}\r\n    exit=\"exit\"\r\n    {...props}\r\n  >\r\n    {children}\r\n  </motion.div>\r\n);\r\n\r\n// ==================== 高级 Motion Hook ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\ui\\motion\\MotionComponents.tsx",
        "start": 238,
        "end": 256,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 1395
        },
        "endLoc": {
          "line": 256,
          "column": 60,
          "position": 1504
        }
      },
      "secondFile": {
        "name": "src\\components\\ui\\motion\\MotionComponents.tsx",
        "start": 216,
        "end": 236,
        "startLoc": {
          "line": 216,
          "column": 9,
          "position": 1259
        },
        "endLoc": {
          "line": 236,
          "column": 4,
          "position": 1368
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "// module: ui | layer: ui | role: component\r\n// summary: UI 组件\r\n\r\nimport { ExtendedSmartScriptStep } from '../../../types/loopScript';\r\n\r\nconst genId = (prefix: string) => `${prefix}_${Date.now()}_${Math.floor(Math.random() * 1000)}`;\r\n\r\nexport type",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\step-card\\system-actions\\systemKeyTemplates.ts",
        "start": 2,
        "end": 9,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 9,
          "column": 5,
          "position": 79
        }
      },
      "secondFile": {
        "name": "src\\components\\step-card\\tap-actions\\tapTemplates.ts",
        "start": 2,
        "end": 9,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 9,
          "column": 10,
          "position": 79
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "duration: 260,\r\n    },\r\n    enabled: true,\r\n    order: 0,\r\n    find_condition: null,\r\n    verification: null,\r\n    retry_config: null,\r\n    fallback_actions: [],\r\n    pre_conditions: [],\r\n    post_conditions: [],\r\n    parent_loop_id: undefined,\r\n    is_in_loop: false,\r\n  }),\r\n  // 根据弹窗配置生成边缘返回手势",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\step-card\\screen-actions\\screenTemplates.ts",
        "start": 96,
        "end": 109,
        "startLoc": {
          "line": 96,
          "column": 7,
          "position": 794
        },
        "endLoc": {
          "line": 109,
          "column": 18,
          "position": 896
        }
      },
      "secondFile": {
        "name": "src\\components\\step-card\\screen-actions\\screenTemplates.ts",
        "start": 69,
        "end": 84,
        "startLoc": {
          "line": 69,
          "column": 7,
          "position": 590
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 692
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "()) },\r\n    ] },\r\n    { type: 'group', label: '全面屏返回手势', children: [\r\n      { key: 'edgeBackLeft', label: '⬅️ 左边缘 → 右滑（返回）', onClick: () => onSelectTemplate(ScreenActionTemplates.backGestureFromLeft()) },\r\n      { key: 'edgeBackRight', label: '➡️ 右边缘 → 左滑（返回）', onClick: () => onSelectTemplate(ScreenActionTemplates.backGestureFromRight()) },\r\n    ]",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\step-card\\screen-actions\\ScreenActionDropdownButton.tsx",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 12,
          "position": 468
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 577
        }
      },
      "secondFile": {
        "name": "src\\components\\step-card\\system-actions\\SystemKeyDropdownButton.tsx",
        "start": 28,
        "end": 33,
        "startLoc": {
          "line": 28,
          "column": 5,
          "position": 498
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 606
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "</div>\r\n          </div>\r\n          <InputNumber min={5} max={95} value={distancePercent} onChange={(v) => setDistancePercent(v ?? 45)} addonAfter=\"%\" />\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\" style={{ gap: 12 }}>\r\n          <div className=\"flex-1\">\r\n            <Typography.Text strong>持续时间（毫秒）",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\step-card\\screen-actions\\EdgeBackGestureModal.tsx",
        "start": 73,
        "end": 80,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 948
        },
        "endLoc": {
          "line": 80,
          "column": 9,
          "position": 1059
        }
      },
      "secondFile": {
        "name": "src\\components\\step-card\\screen-actions\\EdgeBackGestureModal.tsx",
        "start": 65,
        "end": 72,
        "startLoc": {
          "line": 65,
          "column": 3,
          "position": 812
        },
        "endLoc": {
          "line": 72,
          "column": 10,
          "position": 923
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "let s = 0;\r\n  if (target['resource-id'] && n.attrs['resource-id'] === target['resource-id']) s += 3;\r\n  if (target['class'] && n.attrs['class'] === target['class']) s += 2;\r\n  if (target['text'] && n.attrs['text'] === target['text']) s += 2;\r\n  if (target['content-desc'] && n.attrs['content-desc'] === target['content-desc']) s += 1;\r\n  if (target['package'] && n.attrs['package'] === target['package']) s += 1;\r\n  // bounds 完全一致加分",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\step-card\\element-binding\\helpers.ts",
        "start": 81,
        "end": 87,
        "startLoc": {
          "line": 81,
          "column": 3,
          "position": 1006
        },
        "endLoc": {
          "line": 87,
          "column": 17,
          "position": 1187
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\snapshotResolver.ts",
        "start": 43,
        "end": 49,
        "startLoc": {
          "line": 43,
          "column": 3,
          "position": 427
        },
        "endLoc": {
          "line": 49,
          "column": 3,
          "position": 608
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ",\r\n}) => {\r\n  const themeManager = useThemeManager();\r\n  const isDark = themeManager.mode === 'dark';\r\n\r\n  const cardStyle: React.CSSProperties = {\r\n    backgroundColor: 'var(--colorBgContainer)',\r\n    borderColor: 'var(--colorBorderSecondary)',\r\n    borderRadius: '8px',\r\n    boxShadow: isDark \r\n      ? '0 2px 8px rgba(0, 0, 0, 0.1)' \r\n      : '0 2px 8px rgba(0, 0, 0, 0.06)',\r\n  };\r\n\r\n  return (\r\n    <Card ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\feature-modules\\universal-ui\\ThemeEnhanced.tsx",
        "start": 214,
        "end": 229,
        "startLoc": {
          "line": 214,
          "column": 8,
          "position": 1724
        },
        "endLoc": {
          "line": 229,
          "column": 2,
          "position": 1842
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\universal-ui\\ThemeEnhanced.tsx",
        "start": 143,
        "end": 159,
        "startLoc": {
          "line": 143,
          "column": 5,
          "position": 1129
        },
        "endLoc": {
          "line": 159,
          "column": 7,
          "position": 1247
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ">\r\n      }\r\n      style={{ background: colors.surface, border: `1px solid ${colors.border}` }}\r\n      headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n      bodyStyle={{ background: colors.surface }}\r\n    >\r\n      <Alert",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\ConstraintsTab.tsx",
        "start": 43,
        "end": 49,
        "startLoc": {
          "line": 43,
          "column": 7,
          "position": 503
        },
        "endLoc": {
          "line": 49,
          "column": 6,
          "position": 597
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\FieldListCard.tsx",
        "start": 37,
        "end": 25,
        "startLoc": {
          "line": 37,
          "column": 6,
          "position": 317
        },
        "endLoc": {
          "line": 25,
          "column": 4,
          "position": 278
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "</Tag>\r\n          </Space>\r\n        }\r\n        style={{ background: colors.surface, border: `1px solid ${colors.border}` }}\r\n        headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n        bodyStyle={{ background: colors.surface }}\r\n      >\r\n        <Alert\r\n          ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\BasicConfigTab.tsx",
        "start": 63,
        "end": 71,
        "startLoc": {
          "line": 63,
          "column": 3,
          "position": 586
        },
        "endLoc": {
          "line": 71,
          "column": 11,
          "position": 689
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\FieldListCard.tsx",
        "start": 36,
        "end": 22,
        "startLoc": {
          "line": 36,
          "column": 4,
          "position": 309
        },
        "endLoc": {
          "line": 22,
          "column": 9,
          "position": 266
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "</Tag></Space>}\r\n          style={{ background: colors.surface, border: `1px solid ${colors.border}` }}\r\n          headStyle={{ background: colors.surfaceAlt, borderBottom: `1px solid ${colors.border}`, color: '#fff' }}\r\n          bodyStyle={{ background: colors.surface }}\r\n        >\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n            {suggestions",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\tabs\\BasicConfigTab.tsx",
        "start": 126,
        "end": 132,
        "startLoc": {
          "line": 126,
          "column": 3,
          "position": 1367
        },
        "endLoc": {
          "line": 132,
          "column": 12,
          "position": 1491
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\tabs\\field-detail\\FieldListCard.tsx",
        "start": 36,
        "end": 23,
        "startLoc": {
          "line": 36,
          "column": 4,
          "position": 309
        },
        "endLoc": {
          "line": 23,
          "column": 16,
          "position": 277
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "={step as any}\r\n      onUpdate={(partial) => ctx.onUpdateStepParameters?.(step.id, {\r\n        ...step.parameters,\r\n        ...partial,\r\n      })}\r\n    />\r\n  ),\r\n};\r\n\r\nconst smartInputExt: StepUIExtension = {\r\n  renderHeaderExtras: (step, ctx) => (\r\n    <SmartInputControls\r\n      step={step as any}\r\n      onUpdate={(partial) => ctx.onUpdateStepParameters?.(step.id, {\r\n        ...step.parameters,\r\n        ...partial,\r\n      })}\r\n    />\r\n  ),\r\n};\r\n\r\nconst contactGenerateVcfExt: StepUIExtension = {\r\n  renderBodyExtras: (step, ctx) => (\r\n    <ContactSourceSelector step={step",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\DraggableStepCard\\registry\\registry.tsx",
        "start": 46,
        "end": 69,
        "startLoc": {
          "line": 46,
          "column": 5,
          "position": 710
        },
        "endLoc": {
          "line": 69,
          "column": 5,
          "position": 892
        }
      },
      "secondFile": {
        "name": "src\\components\\DraggableStepCard\\registry\\registry.tsx",
        "start": 34,
        "end": 58,
        "startLoc": {
          "line": 34,
          "column": 5,
          "position": 620
        },
        "endLoc": {
          "line": 58,
          "column": 6,
          "position": 802
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\r\n        autoFocus\r\n        onClick={(e) => e.stopPropagation()}\r\n        {...noDragProps}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        onPressEnter={(e) => { e.stopPropagation(); onSave(); }}\r\n        onBlur={onSave}\r\n        onKeyDown={(e) => { if (e.key === 'Escape') { e.stopPropagation(); onCancel(); } }}\r\n      /",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\DraggableStepCard\\components\\DescriptionEditor.tsx",
        "start": 24,
        "end": 32,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 242
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 376
        }
      },
      "secondFile": {
        "name": "src\\components\\DraggableStepCard\\components\\TitleEditor.tsx",
        "start": 26,
        "end": 34,
        "startLoc": {
          "line": 26,
          "column": 6,
          "position": 248
        },
        "endLoc": {
          "line": 34,
          "column": 6,
          "position": 382
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "={cn(iconSizeMap[size], className)} \r\n    style={color ? { color } : undefined} \r\n  />\r\n);\r\n\r\nexport const BrandBulbIcon: React.FC<IconProps> = ({ \r\n  className, \r\n  size = 'md', \r\n  color \r\n}) => (\r\n  <BulbOutlined \r\n    className={cn(iconSizeMap[size], className)} \r\n    style={color ? { color } : undefined} \r\n  />\r\n);\r\n\r\n// 状态图标\r\nexport const BrandSuccessIcon: React.FC<IconProps> = ({ \r\n  className, \r\n  size = 'md' \r\n}) => (\r\n  <CheckCircleOutlined \r\n    className={cn(iconSizeMap[size], ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\adapters\\icons\\IconAdapter.tsx",
        "start": 57,
        "end": 79,
        "startLoc": {
          "line": 57,
          "column": 10,
          "position": 339
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 520
        }
      },
      "secondFile": {
        "name": "src\\components\\adapters\\icons\\IconAdapter.tsx",
        "start": 46,
        "end": 68,
        "startLoc": {
          "line": 46,
          "column": 10,
          "position": 252
        },
        "endLoc": {
          "line": 68,
          "column": 11,
          "position": 435
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "= (brandTheme: string) => {\r\n  const baseTheme = {\r\n    algorithm: [theme.darkAlgorithm],\r\n    token: {\r\n      // 从 CSS 变量读取品牌色彩\r\n      colorPrimary: 'var(--brand)',\r\n      colorBgContainer: 'var(--bg-elevated)',\r\n      colorText: 'var(--text-1)',\r\n      colorTextSecondary: 'var(--text-2)',\r\n      colorBorder: 'var(--border-primary)',\r\n      borderRadius: 12, // 使用固定值，对应 --radius: 12px\r\n      \r\n      // 现代化字体\r\n      fontFamily: 'var(--font-family)',\r\n      fontSize: 16, // 使用固定值\r\n    },\r\n    components: {\r\n      Form",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\adapters\\form\\FormAdapter.tsx",
        "start": 71,
        "end": 88,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 367
        },
        "endLoc": {
          "line": 88,
          "column": 5,
          "position": 501
        }
      },
      "secondFile": {
        "name": "src\\components\\adapters\\table\\TableAdapter.tsx",
        "start": 52,
        "end": 69,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 248
        },
        "endLoc": {
          "line": 69,
          "column": 6,
          "position": 382
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\r\n  platform_capabilities: Platform[];\r\n  current_load: number;\r\n  max_concurrent_tasks: number;\r\n  last_active_at: Date;\r\n}\r\n\r\nexport interface Account {\r\n  id: string;\r\n  platform: Platform;\r\n  nickname: string;\r\n  device_id: string;\r\n  is_active: boolean;\r\n  daily_task_count: number;\r\n  daily_task_limit: number;\r\n  cooldown_until?: Date;\r\n  last_used_at?: Date;\r\n}\r\n\r\n// ==================== 执行结果接口 ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\task-execution\\TaskExecutionEngine.ts",
        "start": 74,
        "end": 93,
        "startLoc": {
          "line": 74,
          "column": 7,
          "position": 463
        },
        "endLoc": {
          "line": 93,
          "column": 52,
          "position": 593
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\task-execution\\UnifiedTaskEngine.ts",
        "start": 244,
        "end": 263,
        "startLoc": {
          "line": 244,
          "column": 7,
          "position": 1393
        },
        "endLoc": {
          "line": 263,
          "column": 7,
          "position": 1523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "export function formatDuration(milliseconds: number): string {\r\n  const seconds = Math.floor(milliseconds / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if (days > 0) {\r\n    return `${days}天",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 137,
        "end": 144,
        "startLoc": {
          "line": 137,
          "column": 1,
          "position": 1179
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1300
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\utils\\formatting\\index.ts",
        "start": 104,
        "end": 111,
        "startLoc": {
          "line": 104,
          "column": 1,
          "position": 796
        },
        "endLoc": {
          "line": 111,
          "column": 3,
          "position": 917
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ".getTime();\r\n  const seconds = Math.floor(diff / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 210,
        "end": 216,
        "startLoc": {
          "line": 210,
          "column": 5,
          "position": 2078
        },
        "endLoc": {
          "line": 216,
          "column": 3,
          "position": 2168
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 182,
        "end": 188,
        "startLoc": {
          "line": 182,
          "column": 10,
          "position": 1826
        },
        "endLoc": {
          "line": 188,
          "column": 7,
          "position": 1916
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "/ 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n\r\n  if (days > 0) {\r\n    return `${days}天前`",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 211,
        "end": 217,
        "startLoc": {
          "line": 211,
          "column": 2,
          "position": 2098
        },
        "endLoc": {
          "line": 217,
          "column": 4,
          "position": 2188
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\utils\\formatting\\index.ts",
        "start": 105,
        "end": 111,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 827
        },
        "endLoc": {
          "line": 111,
          "column": 3,
          "position": 917
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "const seen = new Set();\r\n  return array.filter(item => {\r\n    const key = keyFn(item);\r\n    if (seen.has(key)) {\r\n      return false;\r\n    }\r\n    seen.add(key);\r\n    return true;\r\n  });\r\n}\r\n\r\n/**\r\n * 数组分组\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 377,
        "end": 390,
        "startLoc": {
          "line": 377,
          "column": 3,
          "position": 3713
        },
        "endLoc": {
          "line": 390,
          "column": 4,
          "position": 3809
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\utils\\data-processing\\index.ts",
        "start": 149,
        "end": 162,
        "startLoc": {
          "line": 149,
          "column": 3,
          "position": 1319
        },
        "endLoc": {
          "line": 162,
          "column": 4,
          "position": 1415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "export function groupBy<T>(array: T[], keyFn: (item: T) => string): Record<string, T[]> {\r\n  return array.reduce((groups, item) => {\r\n    const key = keyFn(item);\r\n    if (!groups[key]) {\r\n      groups[key] = [];\r\n    }\r\n    groups[key].push(item);\r\n    return groups;\r\n  }, {} as Record<string, T[]>);\r\n}\r\n\r\n/**\r\n * 数组分页\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 391,
        "end": 404,
        "startLoc": {
          "line": 391,
          "column": 1,
          "position": 3812
        },
        "endLoc": {
          "line": 404,
          "column": 4,
          "position": 3969
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\utils\\data-processing\\index.ts",
        "start": 241,
        "end": 257,
        "startLoc": {
          "line": 241,
          "column": 1,
          "position": 2124
        },
        "endLoc": {
          "line": 257,
          "column": 4,
          "position": 2288
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "simpleHash(str: string): string {\r\n  let hash = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    const char = str.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + char;\r\n    hash = hash & hash; // 转换为32位整数\r\n  }\r\n  return Math.abs(hash).toString(16",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 440,
        "end": 447,
        "startLoc": {
          "line": 440,
          "column": 2,
          "position": 4260
        },
        "endLoc": {
          "line": 447,
          "column": 3,
          "position": 4386
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\core\\ElementContextAnalyzer.ts",
        "start": 568,
        "end": 124,
        "startLoc": {
          "line": 568,
          "column": 2,
          "position": 5386
        },
        "endLoc": {
          "line": 124,
          "column": 3,
          "position": 844
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "${dateStr}.csv`;\r\n    const filePath = outputPath ? `${outputPath}/${filename}` : filename;\r\n\r\n    try {\r\n      if (outputPath) {\r\n        await invoke('write_file', { path: filePath, content: csvContent });\r\n        return filePath;\r\n      } else {\r\n        const savedPath = await save({\r\n          defaultPath: filename,\r\n          filters: [{ name: 'CSV文件', extensions: ['csv'] }]\r\n        });\r\n        \r\n        if (savedPath) {\r\n          await invoke('write_file', { path: savedPath, content: csvContent });\r\n          return savedPath;\r\n        }\r\n        \r\n        throw new Error('用户取消了文件保存');\r\n      }\r\n    } catch (error) {\r\n      console.error('导出回复清单CSV失败:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\reporting\\UnifiedDailyReportService.ts",
        "start": 403,
        "end": 424,
        "startLoc": {
          "line": 403,
          "column": 7,
          "position": 3561
        },
        "endLoc": {
          "line": 424,
          "column": 15,
          "position": 3790
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\reporting\\UnifiedDailyReportService.ts",
        "start": 357,
        "end": 378,
        "startLoc": {
          "line": 357,
          "column": 7,
          "position": 3076
        },
        "endLoc": {
          "line": 378,
          "column": 15,
          "position": 3305
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "];\r\n  let size = bytes;\r\n  let unitIndex = 0;\r\n\r\n  while (size >= 1024 && unitIndex < units.length - 1) {\r\n    size /= 1024;\r\n    unitIndex++;\r\n  }\r\n\r\n  return `${size.toFixed(unitIndex === 0 ? 0 : 1)} ${units[unitIndex]}`;\r\n}\r\n\r\n/**\r\n * 计算时间段\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\reporting\\index.ts",
        "start": 209,
        "end": 223,
        "startLoc": {
          "line": 209,
          "column": 5,
          "position": 1500
        },
        "endLoc": {
          "line": 223,
          "column": 4,
          "position": 1616
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\shared\\CommonUtils.ts",
        "start": 297,
        "end": 311,
        "startLoc": {
          "line": 297,
          "column": 5,
          "position": 2891
        },
        "endLoc": {
          "line": 311,
          "column": 4,
          "position": 3007
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "[] = [];\r\n    \r\n    for (const [key, state] of this.rateStates) {\r\n      if (state.device_id === deviceId && \r\n          (!accountId || state.account_id === accountId) &&\r\n          (!platform || state.platform === platform)) {\r\n        keysToReset",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\rate-control\\RateControlAndDeduplicationSystem.ts",
        "start": 304,
        "end": 310,
        "startLoc": {
          "line": 304,
          "column": 7,
          "position": 2485
        },
        "endLoc": {
          "line": 310,
          "column": 12,
          "position": 2575
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\rate-control\\RateControlAndDeduplicationSystem.ts",
        "start": 247,
        "end": 253,
        "startLoc": {
          "line": 247,
          "column": 17,
          "position": 1931
        },
        "endLoc": {
          "line": 253,
          "column": 8,
          "position": 2021
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(): Promise<{\r\n  overall: 'healthy' | 'warning' | 'error';\r\n  details: {\r\n    configuration: { status: string; issues: string[] };\r\n    services: { status: string; issues: string[] };\r\n    performance: { status: string; metrics: Record<string, any> };\r\n  };\r\n}> {\r\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\precise-acquisition\\PreciseAcquisitionSystem.ts",
        "start": 389,
        "end": 397,
        "startLoc": {
          "line": 389,
          "column": 33,
          "position": 3152
        },
        "endLoc": {
          "line": 397,
          "column": 6,
          "position": 3269
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\precise-acquisition\\PreciseAcquisitionSystem.ts",
        "start": 223,
        "end": 231,
        "startLoc": {
          "line": 223,
          "column": 9,
          "position": 1701
        },
        "endLoc": {
          "line": 231,
          "column": 8,
          "position": 1819
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "this.deviceWatcher = this.deviceManager.watchDeviceChanges((devices) => {\r\n              this.log('📡 收到设备变化事件:', {\r\n                deviceCount: devices.length,\r\n                strategy: this.updateStrategy.name\r\n              });\r\n\r\n              // 委托给策略处理\r\n              this.updateStrategy.handleDeviceChange(devices, onUpdate);\r\n            });\r\n\r\n            this.log('✅ 健康检查：监听链路已强制重启'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\device-watching\\DeviceWatchingService.ts",
        "start": 173,
        "end": 183,
        "startLoc": {
          "line": 173,
          "column": 13,
          "position": 1159
        },
        "endLoc": {
          "line": 183,
          "column": 19,
          "position": 1252
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\device-watching\\DeviceWatchingService.ts",
        "start": 102,
        "end": 112,
        "startLoc": {
          "line": 102,
          "column": 5,
          "position": 644
        },
        "endLoc": {
          "line": 112,
          "column": 16,
          "position": 737
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const mb = await this.contactAutomationRepo.importVcfMultiBrand(deviceId, vcfFilePath);\r\n    const outcome: ImportOutcome = {\r\n      success: !!mb.success,\r\n      message: (mb as any).message,\r\n      importedCount: Number((mb as any).imported_contacts ?? 0),\r\n      failedCount: Number((mb as any).failed_contacts ?? 0),\r\n    };\r\n    try { await opts.automationHook?.after?.({ deviceId, vcfFilePath, outcome }); } catch {}\r\n    return outcome;\r\n  }\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\contact-import\\VcfImportApplicationService.ts",
        "start": 56,
        "end": 66,
        "startLoc": {
          "line": 56,
          "column": 5,
          "position": 719
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 884
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\contact-import\\VcfImportApplicationService.ts",
        "start": 44,
        "end": 54,
        "startLoc": {
          "line": 44,
          "column": 9,
          "position": 547
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 713
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ") {\r\n      const cfg = assignments[deviceId] || {};\r\n      const start = cfg.idStart ?? -1;\r\n      const end = cfg.idEnd ?? -1;\r\n      if (start >= 0 && end >= 0 && end >= start) {\r\n        const affected",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\contact-import\\ContactImportApplicationService.ts",
        "start": 52,
        "end": 57,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 561
        },
        "endLoc": {
          "line": 57,
          "column": 9,
          "position": 656
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\contact-import\\ContactImportApplicationService.ts",
        "start": 29,
        "end": 34,
        "startLoc": {
          "line": 29,
          "column": 10,
          "position": 255
        },
        "endLoc": {
          "line": 34,
          "column": 8,
          "position": 350
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(\r\n    target: WatchTarget,\r\n    rule: WhitelistRule,\r\n    params: { cursor?: string; limit: number }\r\n  ): Promise<PublicCommentData[]> {\r\n    const response = await fetch(target.platform_id_or_url, {\r\n      headers: {\r\n        'User-Agent': this.config.user_agent,\r\n        'Accept': 'application/xml,text/xml'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\PublicWhitelistAdapter.ts",
        "start": 391,
        "end": 399,
        "startLoc": {
          "line": 391,
          "column": 15,
          "position": 3119
        },
        "endLoc": {
          "line": 399,
          "column": 27,
          "position": 3215
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\PublicWhitelistAdapter.ts",
        "start": 365,
        "end": 373,
        "startLoc": {
          "line": 365,
          "column": 16,
          "position": 2899
        },
        "endLoc": {
          "line": 373,
          "column": 66,
          "position": 2995
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch(`${this.getApiBaseUrl()}/open_api/v1.0/advertiser/info/`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.config.access_token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          advertiser_id: this.config.advertiser_id\r\n        })\r\n      });\r\n\r\n      if",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\OceanEngineCommentAdapter.ts",
        "start": 275,
        "end": 288,
        "startLoc": {
          "line": 275,
          "column": 23,
          "position": 2041
        },
        "endLoc": {
          "line": 288,
          "column": 3,
          "position": 2163
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\OceanEngineCommentAdapter.ts",
        "start": 253,
        "end": 266,
        "startLoc": {
          "line": 253,
          "column": 20,
          "position": 1876
        },
        "endLoc": {
          "line": 266,
          "column": 7,
          "position": 1998
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": Record<string, RegionTag> = {\r\n      '北京': RegionTag.BEIJING,\r\n      '上海': RegionTag.SHANGHAI,\r\n      '广东': RegionTag.GUANGDONG,\r\n      '浙江': RegionTag.ZHEJIANG,\r\n      '江苏': RegionTag.JIANGSU,\r\n      '山东': RegionTag.SHANDONG,\r\n      '四川': RegionTag.SICHUAN,\r\n    };\r\n\r\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\OceanEngineCommentAdapter.ts",
        "start": 401,
        "end": 411,
        "startLoc": {
          "line": 401,
          "column": 17,
          "position": 3135
        },
        "endLoc": {
          "line": 411,
          "column": 7,
          "position": 3228
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\PublicWhitelistAdapter.ts",
        "start": 706,
        "end": 716,
        "startLoc": {
          "line": 706,
          "column": 17,
          "position": 6006
        },
        "endLoc": {
          "line": 716,
          "column": 4,
          "position": 6099
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "}\r\n\r\n  /**\r\n   * 采集评论\r\n   */\r\n  async collectComments(params: UnifiedCommentCollectionParams): Promise<UnifiedCommentCollectionResult> {\r\n    const { target, limit = 20, cursor, time_range } = params;\r\n\r\n    // 验证目标支持\r\n    if (!this.isTargetSupported(target)) {\r\n      throw new Error(`Target not supported: ${target.platform_id_or_url}`);\r\n    }\r\n\r\n    // 验证权限\r\n    const permissions = await this.validatePermissions(target);\r\n    if (!permissions.canCollect) {\r\n      throw new Error(`Permission denied: ${permissions.reason}`);\r\n    }\r\n\r\n    // 提取视频ID",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\DouyinCommentAdapter.ts",
        "start": 167,
        "end": 186,
        "startLoc": {
          "line": 167,
          "column": 3,
          "position": 1034
        },
        "endLoc": {
          "line": 186,
          "column": 10,
          "position": 1197
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\OceanEngineCommentAdapter.ts",
        "start": 145,
        "end": 164,
        "startLoc": {
          "line": 145,
          "column": 3,
          "position": 938
        },
        "endLoc": {
          "line": 164,
          "column": 10,
          "position": 1101
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "}\r\n\r\n      return { canCollect: true };\r\n\r\n    } catch (error) {\r\n      return {\r\n        canCollect: false,\r\n        reason: `Permission check failed: ${error instanceof Error ? error.message : 'Unknown error'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  // ==================== 私有方法 ====================\r\n\r\n  /**\r\n   * 验证access_token有效性\r\n   */\r\n  private async validateAccessToken(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch(`${this.getApiBaseUrl()}/oauth/userinfo/`",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\DouyinCommentAdapter.ts",
        "start": 260,
        "end": 279,
        "startLoc": {
          "line": 260,
          "column": 7,
          "position": 1838
        },
        "endLoc": {
          "line": 279,
          "column": 18,
          "position": 1975
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\OceanEngineCommentAdapter.ts",
        "start": 236,
        "end": 255,
        "startLoc": {
          "line": 236,
          "column": 7,
          "position": 1776
        },
        "endLoc": {
          "line": 255,
          "column": 33,
          "position": 1913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "} from '../../../modules/precise-acquisition/shared/types/core';\r\nimport { \r\n  DouyinCommentAdapter, \r\n  DouyinAPIConfig,\r\n  createDouyinCommentAdapter \r\n} from './DouyinCommentAdapter';\r\nimport { \r\n  OceanEngineCommentAdapter, \r\n  OceanEngineAPIConfig,\r\n  createOceanEngineCommentAdapter \r\n} from './OceanEngineCommentAdapter';\r\nimport { \r\n  PublicWhitelistAdapter, \r\n  PublicWhitelistConfig,\r\n  createPublicWhitelistAdapter \r\n} from './PublicWhitelistAdapter';\r\n\r\n// ==================== 统一接口导入 ====================\r\n\r\nimport {\r\n  UnifiedCommentAdapter as CommentAdapter,\r\n  UnifiedCommentCollectionParams as CommentCollectionParams,\r\n  UnifiedCommentCollectionResult as CommentCollectionResult,\r\n  UnifiedAdapterStatus as AdapterStatus,\r\n  UnifiedPermissionValidationResult as PermissionValidationResult\r\n} from './UnifiedCommentAdapter';\r\n\r\n// ==================== 适配器管理器配置 ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 12,
        "end": 39,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 28
        },
        "endLoc": {
          "line": 39,
          "column": 54,
          "position": 183
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 14,
        "end": 41,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 48
        },
        "endLoc": {
          "line": 41,
          "column": 52,
          "position": 203
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "// ==================== 适配器管理器配置 ====================\r\n\r\nexport interface CommentAdapterManagerConfig {\r\n  douyin?: DouyinAPIConfig;\r\n  oceanengine?: OceanEngineAPIConfig;\r\n  public_whitelist?: PublicWhitelistConfig;\r\n  default_strategy: 'auto' | 'platform_priority' | 'manual';\r\n  platform_priority?: Platform[];\r\n  fallback_enabled: boolean;\r\n}\r\n\r\n// ==================== 采集统计信息 ====================\r\n\r\nexport interface CollectionStats {\r\n  total_collections: number;\r\n  successful_collections: number;\r\n  failed_collections: number;\r\n  total_comments: number;\r\n  collections_by_platform: Record<Platform, number>;\r\n  collections_by_adapter: Record<string, number>;\r\n  average_response_time: number;\r\n  last_collection_time?: Date;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 39,
        "end": 61,
        "startLoc": {
          "line": 39,
          "column": 1,
          "position": 183
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 355
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 92,
        "end": 115,
        "startLoc": {
          "line": 92,
          "column": 1,
          "position": 483
        },
        "endLoc": {
          "line": 115,
          "column": 41,
          "position": 658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 30,
      "fragment": ", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取所有适配器状态\r\n   */\r\n  async getAllAdapterStatus(): Promise<Record<Platform, AdapterStatus>> {\r\n    const statusMap: Record<Platform, AdapterStatus> = {} as Record<Platform, AdapterStatus>;\r\n\r\n    for (const [platform, adapter] of this.adapters) {\r\n      try {\r\n        statusMap[platform] = await adapter.getStatus();\r\n      } catch (error) {\r\n        statusMap[platform] = {\r\n          platform,\r\n          available: false,\r\n          auth_status: 'invalid',\r\n          last_error: error instanceof Error ? error.message : 'Unknown error'\r\n        };\r\n      }\r\n    }\r\n\r\n    return statusMap;\r\n  }\r\n\r\n  /**\r\n   * 为目标选择最佳适配器\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 106,
        "end": 135,
        "startLoc": {
          "line": 106,
          "column": 63,
          "position": 755
        },
        "endLoc": {
          "line": 135,
          "column": 6,
          "position": 975
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 177,
        "end": 204,
        "startLoc": {
          "line": 177,
          "column": 49,
          "position": 1202
        },
        "endLoc": {
          "line": 204,
          "column": 85,
          "position": 1422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 127,
      "fragment": "/**\r\n   * 为目标选择最佳适配器\r\n   */\r\n  async selectBestAdapter(target: WatchTarget): Promise<{\r\n    adapter: CommentAdapter;\r\n    platform: Platform;\r\n    reason: string;\r\n  } | null> {\r\n    // 首先尝试目标指定的平台\r\n    if (this.adapters.has(target.platform)) {\r\n      const adapter = this.adapters.get(target.platform)!;\r\n      \r\n      if (adapter.isTargetSupported(target)) {\r\n        const status = await adapter.getStatus();\r\n        if (status.available) {\r\n          const permissions = await adapter.validatePermissions(target);\r\n          if (permissions.canCollect) {\r\n            return {\r\n              adapter,\r\n              platform: target.platform,\r\n              reason: 'Target platform match with valid permissions'\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // 根据策略选择适配器\r\n    switch (this.config.default_strategy) {\r\n      case 'auto':\r\n        return this.selectAdapterAuto(target);\r\n      case 'platform_priority':\r\n        return this.selectAdapterByPriority(target);\r\n      case 'manual':\r\n        return null; // 手动模式不自动选择\r\n      default:\r\n        return this.selectAdapterAuto(target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 自动选择适配器\r\n   */\r\n  private async selectAdapterAuto(target: WatchTarget): Promise<{\r\n    adapter: CommentAdapter;\r\n    platform: Platform;\r\n    reason: string;\r\n  } | null> {\r\n    const candidateAdapters: Array<{\r\n      adapter: CommentAdapter;\r\n      platform: Platform;\r\n      score: number;\r\n    }> = [];\r\n\r\n    for (const [platform, adapter] of this.adapters) {\r\n      if (!adapter.isTargetSupported(target)) continue;\r\n\r\n      const status = await adapter.getStatus();\r\n      if (!status.available) continue;\r\n\r\n      const permissions = await adapter.validatePermissions(target);\r\n      if (!permissions.canCollect) continue;\r\n\r\n      // 计算适配器评分\r\n      let score = 0;\r\n      \r\n      // 平台匹配度\r\n      if (platform === target.platform) score += 100;\r\n      \r\n      // 历史成功率\r\n      const platformStats = this.stats.collections_by_platform[platform] || 0;\r\n      if (platformStats > 0) score += Math.min(platformStats / 10, 50);\r\n      \r\n      // 权限完整性\r\n      if (!permissions.requiredScopes || permissions.requiredScopes.length === 0) score += 20;\r\n\r\n      candidateAdapters.push({ adapter, platform, score });\r\n    }\r\n\r\n    if (candidateAdapters.length === 0) return null;\r\n\r\n    // 选择评分最高的适配器\r\n    candidateAdapters.sort((a, b) => b.score - a.score);\r\n    const best = candidateAdapters[0];\r\n\r\n    return {\r\n      adapter: best.adapter,\r\n      platform: best.platform,\r\n      reason: `Auto-selected based on score: ${best.score}`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 按优先级选择适配器\r\n   */\r\n  private async selectAdapterByPriority(target: WatchTarget): Promise<{\r\n    adapter: CommentAdapter;\r\n    platform: Platform;\r\n    reason: string;\r\n  } | null> {\r\n    const priorities = this.config.platform_priority || [Platform.DOUYIN, Platform.OCEANENGINE, Platform.PUBLIC];\r\n\r\n    for (const platform of priorities) {\r\n      const adapter = this.adapters.get(platform);\r\n      if (!adapter) continue;\r\n\r\n      if (!adapter.isTargetSupported(target)) continue;\r\n\r\n      const status = await adapter.getStatus();\r\n      if (!status.available) continue;\r\n\r\n      const permissions = await adapter.validatePermissions(target);\r\n      if (permissions.canCollect) {\r\n        return {\r\n          adapter,\r\n          platform,\r\n          reason: `Selected by platform priority (position: ${priorities.indexOf(platform) + 1})`\r\n        };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 采集评论（主要入口方法）\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 133,
        "end": 259,
        "startLoc": {
          "line": 133,
          "column": 3,
          "position": 975
        },
        "endLoc": {
          "line": 259,
          "column": 6,
          "position": 2086
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 482,
        "end": 608,
        "startLoc": {
          "line": 482,
          "column": 3,
          "position": 3824
        },
        "endLoc": {
          "line": 608,
          "column": 6,
          "position": 4935
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "// 更新失败统计\r\n      this.updateStats(params.target.platform, false, 0, Date.now() - startTime);\r\n\r\n      // 尝试回退策略\r\n      if (this.config.fallback_enabled && error instanceof Error && !error.message.includes('No suitable adapter')) {\r\n        console.warn(`[CommentAdapterManager] Primary collection failed, trying fallback: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 281,
        "end": 286,
        "startLoc": {
          "line": 281,
          "column": 7,
          "position": 2296
        },
        "endLoc": {
          "line": 286,
          "column": 70,
          "position": 2375
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 647,
        "end": 652,
        "startLoc": {
          "line": 647,
          "column": 7,
          "position": 5278
        },
        "endLoc": {
          "line": 652,
          "column": 78,
          "position": 5357
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "${error.message}`);\r\n        return this.collectCommentsWithFallback(params);\r\n      }\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 回退采集策略\r\n   */\r\n  private async collectCommentsWithFallback(params: CommentCollectionParams): Promise<CommentCollectionResult> {\r\n    const availableAdapters: Array<{ adapter: CommentAdapter; platform: Platform }> = [];\r\n\r\n    // 收集所有可用的适配器\r\n    for (const [platform, adapter] of this.adapters) {\r\n      if (adapter.isTargetSupported(params.target)) {\r\n        const status = await adapter.getStatus();\r\n        if (status.available) {\r\n          const permissions = await adapter.validatePermissions(params.target);\r\n          if (permissions.canCollect) {\r\n            availableAdapters.push({ adapter, platform });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (availableAdapters.length === 0) {\r\n      throw new Error('No fallback adapters available');\r\n    }\r\n\r\n    // 尝试每个适配器\r\n    for (const { adapter, platform } of availableAdapters) {\r\n      try {\r\n        console.log(`[CommentAdapterManager] Trying fallback adapter: ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 286,
        "end": 320,
        "startLoc": {
          "line": 286,
          "column": 70,
          "position": 2376
        },
        "endLoc": {
          "line": 320,
          "column": 51,
          "position": 2692
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 652,
        "end": 686,
        "startLoc": {
          "line": 652,
          "column": 78,
          "position": 5358
        },
        "endLoc": {
          "line": 686,
          "column": 59,
          "position": 5674
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "private updateStats(platform: Platform, success: boolean, commentCount: number, responseTime: number): void {\r\n    this.stats.total_collections++;\r\n    \r\n    if (success) {\r\n      this.stats.successful_collections++;\r\n      this.stats.total_comments += commentCount;\r\n    } else {\r\n      this.stats.failed_collections++;\r\n    }\r\n\r\n    // 更新平台统计\r\n    this.stats.collections_by_platform[platform] = (this.stats.collections_by_platform[platform] || 0) + 1;\r\n\r\n    // 更新平均响应时间",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 514,
        "end": 527,
        "startLoc": {
          "line": 514,
          "column": 3,
          "position": 4297
        },
        "endLoc": {
          "line": 527,
          "column": 12,
          "position": 4440
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 428,
        "end": 441,
        "startLoc": {
          "line": 428,
          "column": 3,
          "position": 3290
        },
        "endLoc": {
          "line": 441,
          "column": 13,
          "position": 3433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "/**\r\n * 验证适配器管理器配置\r\n */\r\nexport function validateCommentAdapterManagerConfig(config: Partial<CommentAdapterManagerConfig>): {\r\n  isValid: boolean;\r\n  errors: string[];\r\n} {\r\n  const errors: string[] = [];\r\n\r\n  if (!config.default_strategy) {\r\n    errors.push('default_strategy is required');\r\n  }\r\n\r\n  if (config.default_strategy === 'platform_priority' && !config.platform_priority) {\r\n    errors.push('platform_priority is required when using platform_priority strategy');\r\n  }\r\n\r\n  if (!config.douyin && !config.oceanengine && !config.public_whitelist) {\r\n    errors.push('At least one adapter configuration is required');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\comment-collection\\CommentAdapterManager.ts",
        "start": 546,
        "end": 571,
        "startLoc": {
          "line": 546,
          "column": 1,
          "position": 4573
        },
        "endLoc": {
          "line": 571,
          "column": 2,
          "position": 4777
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\comment-collection\\EnhancedCommentAdapterManager.ts",
        "start": 742,
        "end": 767,
        "startLoc": {
          "line": 742,
          "column": 1,
          "position": 6119
        },
        "endLoc": {
          "line": 767,
          "column": 2,
          "position": 6323
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "let hash = 0;\r\n    for (let i = 0; i < xmlContent.length; i++) {\r\n      const char = xmlContent.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // 转换为32位整数\r\n    }\r\n    return Math",
      "tokens": 0,
      "firstFile": {
        "name": "src\\utils\\encoding\\safeBase64.ts",
        "start": 108,
        "end": 114,
        "startLoc": {
          "line": 108,
          "column": 5,
          "position": 1166
        },
        "endLoc": {
          "line": 114,
          "column": 5,
          "position": 1268
        }
      },
      "secondFile": {
        "name": "src\\services\\unified-view-data\\utils\\CacheManager.ts",
        "start": 22,
        "end": 28,
        "startLoc": {
          "line": 22,
          "column": 5,
          "position": 138
        },
        "endLoc": {
          "line": 28,
          "column": 15,
          "position": 240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 47,
      "fragment": "export enum IndustryTag {\r\n  // 医疗健康类\r\n  ORAL_CARE = '口腔',\r\n  ORAL_ORTHODONTICS = '口腔正畸',\r\n  MATERNAL_BABY = '母婴',\r\n  MEDICAL_HEALTH = '医疗健康',\r\n  FITNESS = '健身',\r\n\r\n  // 美妆生活类\r\n  BEAUTY = '美妆',\r\n  SKINCARE = '护肤',\r\n  HOME_FURNISHING = '家居',\r\n  FOOD_BEVERAGE = '食品饮料',\r\n\r\n  // 教育培训类\r\n  EDUCATION_TRAINING = '教育培训',\r\n  LANGUAGE_LEARNING = '语言学习',\r\n  SKILL_TRAINING = '技能培训',\r\n\r\n  // 科技数码类\r\n  DIGITAL_3C = '3C',\r\n  SOFTWARE_APPS = '软件应用',\r\n  AI_TECH = 'AI科技',\r\n\r\n  // 汽车交通类\r\n  AUTOMOTIVE = '汽车',\r\n  NEW_ENERGY_VEHICLE = '新能源汽车',\r\n\r\n  // 旅游娱乐类\r\n  TRAVEL = '旅游',\r\n  ENTERTAINMENT = '娱乐',\r\n  GAMES = '游戏',\r\n\r\n  // 宠物服饰类\r\n  PETS = '宠物',\r\n  FASHION = '服饰',\r\n\r\n  // 金融服务类\r\n  FINANCE = '金融',\r\n  INSURANCE = '保险',\r\n  REAL_ESTATE = '房产',\r\n\r\n  // 其他\r\n  OTHER = '其他'\r\n}\r\n\r\n// ==================== 地域标签枚举 ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 105,
        "end": 151,
        "startLoc": {
          "line": 105,
          "column": 1,
          "position": 925
        },
        "endLoc": {
          "line": 151,
          "column": 52,
          "position": 1224
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\types\\core.ts",
        "start": 47,
        "end": 95,
        "startLoc": {
          "line": 47,
          "column": 1,
          "position": 190
        },
        "endLoc": {
          "line": 95,
          "column": 4,
          "position": 489
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export enum RegionTag {\r\n  // 全国和大区\r\n  NATIONWIDE = '全国',\r\n  EAST_CHINA = '华东',\r\n  NORTH_CHINA = '华北', \r\n  SOUTH_CHINA = '华南',\r\n  CENTRAL_CHINA = '华中',\r\n  SOUTHWEST_CHINA = '西南',\r\n  NORTHWEST_CHINA = '西北',\r\n  NORTHEAST_CHINA = '东北',\r\n\r\n  // 主要省份（可扩展）\r\n  BEIJING = '北京',\r\n  SHANGHAI = '上海',\r\n  GUANGDONG = '广东',\r\n  ZHEJIANG = '浙江',\r\n  JIANGSU = '江苏',\r\n  SHANDONG = '山东',\r\n  SICHUAN = '四川',\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 153,
        "end": 172,
        "startLoc": {
          "line": 153,
          "column": 1,
          "position": 1229
        },
        "endLoc": {
          "line": 172,
          "column": 2,
          "position": 1383
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\types\\core.ts",
        "start": 96,
        "end": 115,
        "startLoc": {
          "line": 96,
          "column": 1,
          "position": 492
        },
        "endLoc": {
          "line": 115,
          "column": 6,
          "position": 647
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "static parseBounds(boundsStr?: string | null): BoundsRect | null {\r\n    if (!boundsStr || typeof boundsStr !== 'string') {\r\n      return null;\r\n    }\r\n\r\n    const trimmed = boundsStr.trim();\r\n    if (!trimmed) return null;\r\n\r\n    // 处理 [left,top][right,bottom] 格式\r\n    const bracketMatch = trimmed.match(/\\[(\\d+),(\\d+)\\]\\[(\\d+),(\\d+)\\]/);\r\n    if (bracketMatch) {\r\n      const [, left, top, right, bottom] = bracketMatch.map(Number);\r\n      return { left, top, right, bottom };\r\n    }\r\n\r\n    // 处理 left,top,right,bottom 格式\r\n    const parts = trimmed.split(',').map(p => p.trim());\r\n    if (parts.length === 4) {\r\n      const numbers",
      "tokens": 0,
      "firstFile": {
        "name": "src\\shared\\bounds\\BoundsCalculator.ts",
        "start": 47,
        "end": 65,
        "startLoc": {
          "line": 47,
          "column": 3,
          "position": 131
        },
        "endLoc": {
          "line": 65,
          "column": 8,
          "position": 358
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\shared\\bounds\\BoundsCalculator.ts",
        "start": 36,
        "end": 54,
        "startLoc": {
          "line": 36,
          "column": 3,
          "position": 131
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 358
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(boundsStr?: string | null): BoundsInfo | null {\r\n    const bounds = this.parseBounds(boundsStr);\r\n    if (!bounds) return null;\r\n\r\n    const width = bounds.right - bounds.left;\r\n    const height = bounds.bottom - bounds.top;\r\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\shared\\bounds\\BoundsCalculator.ts",
        "start": 78,
        "end": 84,
        "startLoc": {
          "line": 78,
          "column": 14,
          "position": 460
        },
        "endLoc": {
          "line": 84,
          "column": 6,
          "position": 553
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\shared\\utils\\boundsParser.ts",
        "start": 63,
        "end": 70,
        "startLoc": {
          "line": 63,
          "column": 16,
          "position": 395
        },
        "endLoc": {
          "line": 70,
          "column": 7,
          "position": 490
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "const width = bounds.right - bounds.left;\r\n    const height = bounds.bottom - bounds.top;\r\n    const centerX = bounds.left + width / 2;\r\n    const centerY = bounds.top + height / 2;\r\n\r\n    return {\r\n      ...bounds,\r\n      width,\r\n      height,\r\n      centerX,\r\n      centerY\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取bounds中心点\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\shared\\bounds\\BoundsCalculator.ts",
        "start": 82,
        "end": 98,
        "startLoc": {
          "line": 82,
          "column": 5,
          "position": 515
        },
        "endLoc": {
          "line": 98,
          "column": 6,
          "position": 639
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\shared\\bounds\\BoundsCalculator.ts",
        "start": 67,
        "end": 83,
        "startLoc": {
          "line": 67,
          "column": 5,
          "position": 473
        },
        "endLoc": {
          "line": 83,
          "column": 6,
          "position": 597
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ": React.FC = () => {\r\n  const [statistics, setStatistics] = useState<FollowStatistics>({\r\n    total_follows: 0,\r\n    daily_follows: 0,\r\n    success_rate: 0,\r\n    cost_today: 0,\r\n    cost_total: 0\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  const { token } = theme.useToken();\r\n\r\n  // 模拟获取统计数据\r\n  useEffect(() => {\r\n    const fetchStatistics = async () => {\r\n      // 模拟API调用延迟",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\statistics\\StatisticsPageNative.tsx",
        "start": 35,
        "end": 50,
        "startLoc": {
          "line": 35,
          "column": 21,
          "position": 188
        },
        "endLoc": {
          "line": 50,
          "column": 13,
          "position": 344
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\StatisticsPageOptimized.tsx",
        "start": 28,
        "end": 43,
        "startLoc": {
          "line": 28,
          "column": 24,
          "position": 168
        },
        "endLoc": {
          "line": 43,
          "column": 13,
          "position": 324
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ")}\r\n              </Text>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <Divider style={{ margin: `${token.marginXS}px 0` }} />\r\n          \r\n          <Row justify=\"space-between\" align=\"middle\">\r\n            <Col>\r\n              <Text>今日关注成本",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\statistics\\StatisticsPageNative.tsx",
        "start": 182,
        "end": 191,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 1602
        },
        "endLoc": {
          "line": 191,
          "column": 7,
          "position": 1683
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\StatisticsPageNative.tsx",
        "start": 169,
        "end": 178,
        "startLoc": {
          "line": 169,
          "column": 2,
          "position": 1479
        },
        "endLoc": {
          "line": 178,
          "column": 9,
          "position": 1560
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ": React.FC = () => {\r\n  const [statistics, setStatistics] = useState<FollowStatistics>({\r\n    total_follows: 0,\r\n    daily_follows: 0,\r\n    success_rate: 0,\r\n    cost_today: 0,\r\n    cost_total: 0\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // 模拟获取统计数据",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\statistics\\StatisticsPage.tsx",
        "start": 13,
        "end": 23,
        "startLoc": {
          "line": 13,
          "column": 15,
          "position": 92
        },
        "endLoc": {
          "line": 23,
          "column": 12,
          "position": 195
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\StatisticsPageOptimized.tsx",
        "start": 28,
        "end": 38,
        "startLoc": {
          "line": 28,
          "column": 24,
          "position": 168
        },
        "endLoc": {
          "line": 38,
          "column": 6,
          "position": 271
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ");\r\n\r\n  // 模拟获取统计数据\r\n  useEffect(() => {\r\n    const fetchStatistics = async () => {\r\n      // 模拟API调用延迟\r\n      setTimeout(() => {\r\n        setStatistics({\r\n          total_follows: 1250,\r\n          daily_follows: 45,\r\n          success_rate: 92.5,\r\n          cost_today: 4.5,\r\n          cost_total: 125.0\r\n        });\r\n        setIsLoading(false);\r\n      }, 1000);\r\n    };\r\n\r\n    fetchStatistics();\r\n  }, []);\r\n\r\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\statistics\\StatisticsPage.tsx",
        "start": 21,
        "end": 42,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 188
        },
        "endLoc": {
          "line": 42,
          "column": 6,
          "position": 336
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\StatisticsPageNative.tsx",
        "start": 45,
        "end": 66,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 305
        },
        "endLoc": {
          "line": 66,
          "column": 3,
          "position": 453
        }
      }
    },
    {
      "format": "javascript",
      "lines": 71,
      "fragment": "={onlineDevices}\r\n        selectedDevice={selectedDevice}\r\n        refreshDevices={refreshDevices}\r\n      />\r\n    },\r\n    {\r\n      key: 'account',\r\n      label: (\r\n        <span>\r\n          <UserOutlined />\r\n          账号监控\r\n        </span>\r\n      ),\r\n      children: <AccountMonitoringModule \r\n        onlineDevices={onlineDevices}\r\n        selectedDevice={selectedDevice}\r\n        refreshDevices={refreshDevices}\r\n      />\r\n    },\r\n    {\r\n      key: 'tasks',\r\n      label: (\r\n        <span>\r\n          <ThunderboltOutlined />\r\n          任务中心\r\n        </span>\r\n      ),\r\n      children: <TaskManagementCenter \r\n        onlineDevices={onlineDevices}\r\n        selectedDevice={selectedDevice}\r\n        refreshDevices={refreshDevices}\r\n      />\r\n    },\r\n    {\r\n      key: 'candidate-import',\r\n      label: (\r\n        <span>\r\n          <FileTextOutlined />\r\n          候选池导入\r\n        </span>\r\n      ),\r\n      children: (\r\n        <CandidatePoolImportPanel />\r\n      )\r\n    },\r\n    {\r\n      key: 'reports',\r\n      label: (\r\n        <span>\r\n          <FileTextOutlined />\r\n          数据报告\r\n        </span>\r\n      ),\r\n      children: <DailyReportModule \r\n        onlineDevices={onlineDevices}\r\n        selectedDevice={selectedDevice}\r\n        refreshDevices={refreshDevices}\r\n      />\r\n    },\r\n    {\r\n      key: 'safety',\r\n      label: (\r\n        <span>\r\n          <SafetyCertificateOutlined />\r\n          安全保护\r\n        </span>\r\n      ),\r\n      children: (\r\n        <DuplicationProtectionPanel \r\n          onlineDevices={onlineDevices}\r\n          onRuleUpdate={(",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\precise-acquisition\\PreciseAcquisitionPage.tsx",
        "start": 87,
        "end": 157,
        "startLoc": {
          "line": 87,
          "column": 14,
          "position": 546
        },
        "endLoc": {
          "line": 157,
          "column": 2,
          "position": 948
        }
      },
      "secondFile": {
        "name": "src\\pages\\precise-acquisition\\PreciseAcquisitionPage.tsx",
        "start": 72,
        "end": 142,
        "startLoc": {
          "line": 72,
          "column": 14,
          "position": 462
        },
        "endLoc": {
          "line": 142,
          "column": 15,
          "position": 864
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ",\r\n      onClick: () => {\r\n        if (!selectedDevices.length) return message.info('请先选择设备');\r\n        const data = selectedDevices.map(d => ({ id: d.id, status: d.status, connection_type: d.connection_type }));\r\n        const ts = new Date().toISOString().replace(/[:.]/g, '-');\r\n        downloadFile(toCsv",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\device-monitor\\SelectionBar.tsx",
        "start": 99,
        "end": 104,
        "startLoc": {
          "line": 99,
          "column": 9,
          "position": 1818
        },
        "endLoc": {
          "line": 104,
          "column": 6,
          "position": 1931
        }
      },
      "secondFile": {
        "name": "src\\pages\\device-monitor\\SelectionBar.tsx",
        "start": 89,
        "end": 94,
        "startLoc": {
          "line": 89,
          "column": 10,
          "position": 1653
        },
        "endLoc": {
          "line": 94,
          "column": 5,
          "position": 1766
        }
      }
    },
    {
      "format": "javascript",
      "lines": 28,
      "fragment": "}\r\n            >\r\n              刷新列表\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 统计卡片区域 */}\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} sm={12} md={6}>\r\n            <CardShell variant=\"elevated\" className=\"text-center p-4\">\r\n              <div className=\"text-2xl font-bold text-blue-500 mb-1\">{stats.total}</div>\r\n              <div className=\"text-sm text-gray-400\">总设备数</div>\r\n            </CardShell>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={6}>\r\n            <CardShell variant=\"elevated\" className=\"text-center p-4\">\r\n              <div className=\"text-2xl font-bold text-green-500 mb-1\">{stats.connected}</div>\r\n              <div className=\"text-sm text-gray-400\">在线设备</div>\r\n            </CardShell>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={6}>\r\n            <CardShell variant=\"elevated\" className=\"text-center p-4\">\r\n              <div className=\"text-2xl font-bold text-orange-500 mb-1\">{stats.offline}</div>\r\n              <div className=\"text-sm text-gray-400\">离线设备</div>\r\n            </CardShell>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={6}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\device-management\\DeviceManagementPageBrandNew.tsx",
        "start": 90,
        "end": 117,
        "startLoc": {
          "line": 90,
          "column": 14,
          "position": 669
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 1011
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\demo\\StrategySystemDemo.tsx",
        "start": 323,
        "end": 346,
        "startLoc": {
          "line": 323,
          "column": 2,
          "position": 2582
        },
        "endLoc": {
          "line": 346,
          "column": 2,
          "position": 2877
        }
      }
    },
    {
      "format": "tsx",
      "lines": 128,
      "fragment": "<Card variant=\"default\" className=\"p-6\">\r\n            <h3 className=\"text-lg font-semibold text-text-1 mb-4\">交互组件演示 - Tooltip & Dialog</h3>\r\n            <div className=\"space-y-6\">\r\n              {/* Tooltip演示 */}\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-text-2 mb-3\">工具提示 (Tooltip)</h4>\r\n                <TooltipProvider>\r\n                  <div className=\"flex items-center gap-4 flex-wrap\">\r\n                    <Tooltip>\r\n                      <TooltipTrigger asChild>\r\n                        <Button variant=\"outline\">悬停查看提示</Button>\r\n                      </TooltipTrigger>\r\n                      <TooltipContent>\r\n                        <p>这是一个基于Design Tokens的现代化工具提示</p>\r\n                      </TooltipContent>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip>\r\n                      <TooltipTrigger asChild>\r\n                        <TagPill variant=\"brand\">带提示的标签</TagPill>\r\n                      </TooltipTrigger>\r\n                      <TooltipContent side=\"bottom\">\r\n                        <p>品牌渐变标签与玻璃态提示的完美结合</p>\r\n                      </TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip>\r\n                      <TooltipTrigger asChild>\r\n                        <Button variant=\"default\" size=\"sm\">\r\n                          <Settings className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </TooltipTrigger>\r\n                      <TooltipContent side=\"left\">\r\n                        <p>设置按钮</p>\r\n                      </TooltipContent>\r\n                    </Tooltip>\r\n                  </div>\r\n                </TooltipProvider>\r\n              </div>\r\n\r\n              {/* Dialog演示 */}\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-text-2 mb-3\">对话框 (Dialog)</h4>\r\n                <div className=\"flex items-center gap-4 flex-wrap\">\r\n                  <Dialog>\r\n                    <DialogTrigger asChild>\r\n                      <Button variant=\"default\">打开对话框</Button>\r\n                    </DialogTrigger>\r\n                    <DialogContent>\r\n                      <DialogHeader>\r\n                        <DialogTitle>品牌化对话框</DialogTitle>\r\n                        <DialogDescription>\r\n                          这是一个使用Design Tokens的现代化对话框，具有玻璃态背景和品牌化发光效果。\r\n                        </DialogDescription>\r\n                      </DialogHeader>\r\n                      <div className=\"grid gap-4 py-4\">\r\n                        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                          <label htmlFor=\"name\" className=\"text-right text-text-1\">姓名</label>\r\n                          <Input id=\"name\" placeholder=\"请输入姓名\" className=\"col-span-3\" />\r\n                        </div>\r\n                        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                          <label htmlFor=\"role\" className=\"text-right text-text-1\">角色</label>\r\n                          <Select placeholder=\"选择角色\" className=\"col-span-3\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex justify-end gap-3\">\r\n                        <Button variant=\"outline\">取消</Button>\r\n                        <Button variant=\"default\">确认</Button>\r\n                      </div>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n\r\n                  <Dialog>\r\n                    <DialogTrigger asChild>\r\n                      <Button variant=\"outline\">小尺寸对话框</Button>\r\n                    </DialogTrigger>\r\n                    <DialogContent size=\"sm\">\r\n                      <DialogHeader>\r\n                        <DialogTitle>确认操作</DialogTitle>\r\n                        <DialogDescription>\r\n                          确定要执行此操作吗？此操作无法撤销。\r\n                        </DialogDescription>\r\n                      </DialogHeader>\r\n                      <div className=\"flex justify-end gap-3\">\r\n                        <Button variant=\"ghost\">取消</Button>\r\n                        <Button variant=\"destructive\">确认删除</Button>\r\n                      </div>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n\r\n                  <Dialog>\r\n                    <DialogTrigger asChild>\r\n                      <Button variant=\"ghost\">大尺寸对话框</Button>\r\n                    </DialogTrigger>\r\n                    <DialogContent size=\"lg\">\r\n                      <DialogHeader>\r\n                        <DialogTitle>详细信息</DialogTitle>\r\n                        <DialogDescription>\r\n                          展示大尺寸对话框的布局和内容组织方式。\r\n                        </DialogDescription>\r\n                      </DialogHeader>\r\n                      <div className=\"grid gap-6\">\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-text-1 mb-2\">基本信息</label>\r\n                            <div className=\"space-y-3\">\r\n                              <Input placeholder=\"姓名\" />\r\n                              <Input placeholder=\"邮箱\" />\r\n                              <Select placeholder=\"部门\" />\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-text-1 mb-2\">标签</label>\r\n                            <div className=\"flex flex-wrap gap-2\">\r\n                              <TagPill variant=\"brand\">管理员</TagPill>\r\n                              <TagPill variant=\"success\">活跃</TagPill>\r\n                              <TagPill variant=\"outline\">营销部</TagPill>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\brand-showcase\\BrandShowcasePage.tsx",
        "start": 389,
        "end": 516,
        "startLoc": {
          "line": 389,
          "column": 11,
          "position": 3460
        },
        "endLoc": {
          "line": 516,
          "column": 3,
          "position": 4634
        }
      },
      "secondFile": {
        "name": "src\\pages\\brand-showcase\\components\\InteractiveDemo.tsx",
        "start": 32,
        "end": 159,
        "startLoc": {
          "line": 32,
          "column": 5,
          "position": 212
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1386
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "export const ActionLogPanel: React.FC<ActionLogPanelProps> = ({ logs, onClear }) => {\r\n  return (\r\n    <Card size=\"small\" title=\"操作日志\" extra={onClear && <Button onClick={onClear}>清空</Button>}>\r\n      <pre style={{ whiteSpace: 'pre-wrap', margin: 0 }}>{logs.length ? logs.join('\\n') : '暂无日志'}</pre>\r\n    </Card>\r\n  );\r\n};",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\AdbAuthorizationWizard\\ActionLogPanel.tsx",
        "start": 9,
        "end": 15,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 56
        },
        "endLoc": {
          "line": 15,
          "column": 2,
          "position": 189
        }
      },
      "secondFile": {
        "name": "src\\pages\\adb\\auth\\ActionLogPanel.tsx",
        "start": 13,
        "end": 19,
        "startLoc": {
          "line": 13,
          "column": 1,
          "position": 78
        },
        "endLoc": {
          "line": 19,
          "column": 2,
          "position": 211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "const di = {\r\n    deviceId: deviceInfo?.deviceId || 'unknown',\r\n    deviceName: deviceInfo?.deviceName || 'unknown',\r\n    appPackage: deviceInfo?.appPackage || 'com.xingin.xhs',\r\n    activityName: deviceInfo?.activityName || 'unknown',\r\n  } as XmlSnapshot['deviceInfo'];\r\n\r\n  const pi = {\r\n    pageTitle: pageInfo?.pageTitle || '未知页面',\r\n    pageType: pageInfo?.pageType || 'unknown',\r\n    elementCount: pageInfo?.elementCount || 0,\r\n    appVersion",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\self-contained\\StepParamSelfContained.ts",
        "start": 51,
        "end": 62,
        "startLoc": {
          "line": 51,
          "column": 3,
          "position": 618
        },
        "endLoc": {
          "line": 62,
          "column": 11,
          "position": 757
        }
      },
      "secondFile": {
        "name": "src\\modules\\self-contained\\XmlSnapshotAutoBuilder.ts",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 3,
          "position": 153
        },
        "endLoc": {
          "line": 33,
          "column": 8,
          "position": 292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": BackendCompatibleParentCriteria = {\r\n      strategy: criteria.strategy,\r\n      fields: [...criteria.fields],\r\n      values: { ...criteria.values },\r\n      includes: criteria.includes ? { ...criteria.includes } : {},\r\n      excludes: criteria.excludes ? { ...criteria.excludes } : {}\r\n    };\r\n    \r\n    // 如果有父节点resource_id但原始元素没有，使用父节点的作为主字段",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\parent-backend-compatibility\\ParentBackendCompatibilityHandler.ts",
        "start": 233,
        "end": 241,
        "startLoc": {
          "line": 233,
          "column": 9,
          "position": 1804
        },
        "endLoc": {
          "line": 241,
          "column": 40,
          "position": 1910
        }
      },
      "secondFile": {
        "name": "src\\modules\\parent-backend-compatibility\\ParentBackendCompatibilityHandler.ts",
        "start": 45,
        "end": 53,
        "startLoc": {
          "line": 45,
          "column": 9,
          "position": 294
        },
        "endLoc": {
          "line": 53,
          "column": 8,
          "position": 400
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(bounds1: any, bounds2: any): boolean {\r\n    if (!bounds1 || !bounds2) return false;\r\n    \r\n    return bounds1.left === bounds2.left &&\r\n           bounds1.top === bounds2.top &&\r\n           bounds1.right === bounds2.right &&\r\n           bounds1.bottom === bounds2.bottom;\r\n  }\r\n\r\n  /**\r\n   * 解析边界字符串\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\enhanced-element-info\\EnhancedElementInfoService.ts",
        "start": 188,
        "end": 199,
        "startLoc": {
          "line": 188,
          "column": 12,
          "position": 1649
        },
        "endLoc": {
          "line": 199,
          "column": 6,
          "position": 1753
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\core\\ElementContextAnalyzer.ts",
        "start": 542,
        "end": 550,
        "startLoc": {
          "line": 542,
          "column": 12,
          "position": 5153
        },
        "endLoc": {
          "line": 550,
          "column": 8,
          "position": 5255
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "isValidText(text: string): boolean {\r\n    if (!text) return false;\r\n    \r\n    const cleaned = text.trim();\r\n    if (cleaned.length === 0) return false;\r\n    if (cleaned.length === 1 && !cleaned.match(/[\\u4e00-\\u9fa5]/)) return false; // 单个非中文字符",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\child-node-extractor\\ChildNodeExtractor.ts",
        "start": 88,
        "end": 93,
        "startLoc": {
          "line": 88,
          "column": 2,
          "position": 613
        },
        "endLoc": {
          "line": 93,
          "column": 11,
          "position": 705
        }
      },
      "secondFile": {
        "name": "src\\modules\\xml-enhancement\\XmlEnhancementService.ts",
        "start": 183,
        "end": 189,
        "startLoc": {
          "line": 183,
          "column": 2,
          "position": 1568
        },
        "endLoc": {
          "line": 189,
          "column": 3,
          "position": 1662
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "= {\r\n      strategy: criteria.strategy,\r\n      fields: [...criteria.fields],\r\n      values: { ...criteria.values },\r\n      includes: criteria.includes ? { ...criteria.includes } : {},\r\n      excludes: criteria.excludes ? { ...criteria.excludes } : {},",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\backend-xml-enhancement\\XmlBackendEnhancer.ts",
        "start": 30,
        "end": 35,
        "startLoc": {
          "line": 30,
          "column": 2,
          "position": 179
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 271
        }
      },
      "secondFile": {
        "name": "src\\modules\\parent-backend-compatibility\\ParentBackendCompatibilityHandler.ts",
        "start": 45,
        "end": 51,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 298
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "];\r\n    for (const cmd of candidates) {\r\n      try {\r\n        const res = await invoke<any>(cmd, { deviceId, device_id: deviceId });\r\n        const n = Number(res?.count ?? res?.contacts ?? res ?? 0);\r\n        if (!Number.isNaN(n) && n >= 0) return n;\r\n      } catch {\r\n        // try next",
      "tokens": 0,
      "firstFile": {
        "name": "src\\infrastructure\\repositories\\TauriDeviceMetricsRepository.ts",
        "start": 10,
        "end": 17,
        "startLoc": {
          "line": 10,
          "column": 21,
          "position": 91
        },
        "endLoc": {
          "line": 17,
          "column": 12,
          "position": 220
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\services\\deviceContactMetrics.ts",
        "start": 13,
        "end": 20,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 86
        },
        "endLoc": {
          "line": 20,
          "column": 11,
          "position": 215
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\r\n    }\r\n\r\n    const backendConfig = {\r\n      continue_on_error: !!config?.continue_on_error,\r\n      auto_verification_enabled: !!config?.auto_verification_enabled,\r\n      smart_recovery_enabled: !!config?.smart_recovery_enabled,\r\n      detailed_logging: !!config?.detailed_logging,\r\n    };\r\n\r\n    const result = await invoke<Record",
      "tokens": 0,
      "firstFile": {
        "name": "src\\infrastructure\\repositories\\script-tauri-repository.ts",
        "start": 79,
        "end": 89,
        "startLoc": {
          "line": 79,
          "column": 5,
          "position": 682
        },
        "endLoc": {
          "line": 89,
          "column": 7,
          "position": 771
        }
      },
      "secondFile": {
        "name": "src\\infrastructure\\repositories\\script-tauri-repository.ts",
        "start": 34,
        "end": 44,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 287
        },
        "endLoc": {
          "line": 44,
          "column": 21,
          "position": 376
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\r\n      const distance = Number(p.distance ?? 600);\r\n      const speed = Number(p.speed_ms ?? 300);\r\n      const screen = { width: 1080, height: 1920 };\r\n\r\n      const cx = Math.floor(screen.width / 2);\r\n      const cy = Math.floor(screen.height / 2);\r\n      const delta = Math.max(100, Math.min(distance, Math.floor(screen.height * 0.8)));\r\n      let start_x = cx, start_y = cy, end_x = cx, end_y = cy;\r\n      switch (direction) {\r\n        case 'up'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\singleStepTest\\utils.ts",
        "start": 108,
        "end": 118,
        "startLoc": {
          "line": 108,
          "column": 7,
          "position": 1987
        },
        "endLoc": {
          "line": 118,
          "column": 5,
          "position": 2185
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\normalizeSteps.ts",
        "start": 12,
        "end": 21,
        "startLoc": {
          "line": 12,
          "column": 7,
          "position": 110
        },
        "endLoc": {
          "line": 21,
          "column": 5,
          "position": 306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ":\r\n          start_x = cx + Math.floor(delta / 2);\r\n          end_x = cx - Math.floor(delta / 2);\r\n          break;\r\n        default:\r\n          start_y = cy + Math.floor(delta / 2);\r\n          end_y = cy - Math.floor(delta / 2);\r\n      }\r\n\r\n      return {\r\n        ...step,\r\n        step_type: 'swipe'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\singleStepTest\\utils.ts",
        "start": 130,
        "end": 141,
        "startLoc": {
          "line": 130,
          "column": 8,
          "position": 2354
        },
        "endLoc": {
          "line": 141,
          "column": 8,
          "position": 2477
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\normalizeSteps.ts",
        "start": 33,
        "end": 43,
        "startLoc": {
          "line": 33,
          "column": 8,
          "position": 475
        },
        "endLoc": {
          "line": 43,
          "column": 8,
          "position": 596
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ") {\r\n        const screen = { width: 1080, height: 1920 };\r\n        return {\r\n          ...step,\r\n          parameters: {\r\n            ...p,\r\n            x: p.x ?? Math.floor(screen.width / 2),\r\n            y: p.y ?? Math.floor(screen.height / 2),\r\n            hold_duration_ms: p.duration_ms ?? p.hold_duration_ms ?? 100,\r\n          },\r\n        } as SmartScriptStep",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\singleStepTest\\utils.ts",
        "start": 154,
        "end": 164,
        "startLoc": {
          "line": 154,
          "column": 2,
          "position": 2647
        },
        "endLoc": {
          "line": 164,
          "column": 16,
          "position": 2785
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\normalizeSteps.ts",
        "start": 56,
        "end": 66,
        "startLoc": {
          "line": 56,
          "column": 10,
          "position": 764
        },
        "endLoc": {
          "line": 66,
          "column": 24,
          "position": 902
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "| null>(null);\r\n  \r\n  // 隐藏的元素列表\r\n  const [hiddenElements, setHiddenElements] = useState<HiddenElement[]>([]);\r\n  \r\n  // 悬停的元素\r\n  const [hoveredElement, setHoveredElement] = useState<string | null>(null);\r\n  \r\n  // 定时器引用\r\n  const hoverTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const restoreTimeoutsRef = useRef<Map<string, NodeJS.Timeout>>(new Map());\r\n\r\n  // 清理定时器\r\n  useEffect(() => {\r\n    return () => {\r\n      if (hoverTimeoutRef.current) {\r\n        clearTimeout(hoverTimeoutRef.current);\r\n      }\r\n      restoreTimeoutsRef.current.forEach(timeout => clearTimeout(timeout));\r\n      restoreTimeoutsRef.current.clear();\r\n    };\r\n  }, []);\r\n\r\n  // 检查元素是否被隐藏\r\n  const isElementHidden = useCallback((elementId: string): boolean => {\r\n    return hiddenElements.some(hidden => hidden.id === elementId);\r\n  }, [hiddenElements]);\r\n\r\n  // 获取可见的元素列表\r\n  const getVisibleElements = useCallback((): UIElement[] => {\r\n    const hiddenIds = new Set(hiddenElements.map(h => h.id));\r\n    return elements.filter(element => !hiddenIds.has(element.id));\r\n  }, [elements, hiddenElements]);\r\n\r\n  // 处理元素点击\r\n  const handleElementClick = useCallback((element: UIElement, clickPosition: { x: number; y: number }) => {\r\n    // 如果元素被隐藏，不处理点击",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\VisualElementInteractionManager.ts",
        "start": 47,
        "end": 83,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 319
        },
        "endLoc": {
          "line": 83,
          "column": 17,
          "position": 751
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 41,
        "end": 77,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 281
        },
        "endLoc": {
          "line": 77,
          "column": 8,
          "position": 713
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "]);\r\n\r\n  // 处理元素悬停\r\n  const handleElementHover = useCallback((elementId: string | null) => {\r\n    if (!enableHover) return;\r\n\r\n    // 清除之前的悬停定时器\r\n    if (hoverTimeoutRef.current) {\r\n      clearTimeout(hoverTimeoutRef.current);\r\n      hoverTimeoutRef.current = null;\r\n    }\r\n\r\n    if (elementId &&",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\VisualElementInteractionManager.ts",
        "start": 96,
        "end": 108,
        "startLoc": {
          "line": 96,
          "column": 16,
          "position": 844
        },
        "endLoc": {
          "line": 108,
          "column": 3,
          "position": 943
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 102,
        "end": 114,
        "startLoc": {
          "line": 102,
          "column": 17,
          "position": 899
        },
        "endLoc": {
          "line": 114,
          "column": 2,
          "position": 997
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "setHiddenElements(prev => prev.filter(h => h.id !== elementId));\r\n      restoreTimeoutsRef.current.delete(elementId);\r\n    }, autoRestoreTime);\r\n\r\n    restoreTimeoutsRef.current.set(elementId, restoreTimeout);\r\n\r\n    // 清除待确认状态\r\n    setPendingSelection(null);\r\n  },",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\VisualElementInteractionManager.ts",
        "start": 150,
        "end": 158,
        "startLoc": {
          "line": 150,
          "column": 7,
          "position": 1299
        },
        "endLoc": {
          "line": 158,
          "column": 2,
          "position": 1379
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 161,
        "end": 170,
        "startLoc": {
          "line": 161,
          "column": 9,
          "position": 1417
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 1500
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "const timeout = restoreTimeoutsRef.current.get(elementId);\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n      restoreTimeoutsRef.current.delete(elementId);\r\n    }\r\n  }, []);\r\n\r\n  // 恢复所有隐藏的元素\r\n  const restoreAllElements = useCallback(() => {\r\n    console.log('🔄 恢复所有隐藏元素');\r\n    \r\n    // 清除所有恢复定时器",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\VisualElementInteractionManager.ts",
        "start": 174,
        "end": 185,
        "startLoc": {
          "line": 174,
          "column": 5,
          "position": 1522
        },
        "endLoc": {
          "line": 185,
          "column": 13,
          "position": 1619
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 198,
        "end": 209,
        "startLoc": {
          "line": 198,
          "column": 5,
          "position": 1754
        },
        "endLoc": {
          "line": 209,
          "column": 11,
          "position": 1851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ");\r\n  }, []);\r\n\r\n  // 获取元素的显示状态\r\n  const getElementDisplayState = useCallback((elementId: string) => {\r\n    const isHidden = isElementHidden(elementId);\r\n    const isHovered = hoveredElement === elementId;\r\n    const isPending = pendingSelection?.element.id === elementId;\r\n    \r\n    return {\r\n      isHidden,\r\n      isHovered,\r\n      isPending,\r\n      isVisible: !isHidden\r\n    };\r\n  }, [isElementHidden, hoveredElement, pendingSelection]);\r\n\r\n  return {\r\n    // 状态\r\n    pendingSelection,\r\n    hiddenElements,\r\n    hoveredElement,\r\n    \r\n    // 数据\r\n    visibleElements: getVisibleElements(),\r\n    \r\n    // 事件处理器\r\n    handleElementClick,\r\n    handleElementHover,\r\n    confirmSelection,\r\n    hideElement",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\VisualElementInteractionManager.ts",
        "start": 190,
        "end": 220,
        "startLoc": {
          "line": 190,
          "column": 2,
          "position": 1663
        },
        "endLoc": {
          "line": 220,
          "column": 12,
          "position": 1871
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\element-selection\\useElementSelectionManager.ts",
        "start": 241,
        "end": 271,
        "startLoc": {
          "line": 241,
          "column": 5,
          "position": 2107
        },
        "endLoc": {
          "line": 271,
          "column": 15,
          "position": 2315
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "onApplyCriteria?: (criteria: {\r\n    strategy: string;\r\n    fields: string[];\r\n    values: Record<string, string>;\r\n    includes?: Record<string, string[]>;\r\n    excludes?: Record<string, string[]>;\r\n    matchMode?: Record<string, \"equals\" | \"contains\" | \"regex\">;\r\n    regexIncludes?: Record<string, string[]>;\r\n    regexExcludes?: Record<string, string[]>;\r\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal.tsx",
        "start": 74,
        "end": 83,
        "startLoc": {
          "line": 74,
          "column": 3,
          "position": 666
        },
        "endLoc": {
          "line": 83,
          "column": 2,
          "position": 801
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\GridElementView.tsx",
        "start": 108,
        "end": 117,
        "startLoc": {
          "line": 108,
          "column": 3,
          "position": 856
        },
        "endLoc": {
          "line": 117,
          "column": 8,
          "position": 991
        }
      }
    },
    {
      "format": "tsx",
      "lines": 35,
      "fragment": "snapshotOnlyMode?: boolean;\r\n  onSnapshotCaptured?: (snapshot: XmlSnapshot) => void;\r\n  onXmlContentUpdated?: (\r\n    xmlContent: string,\r\n    deviceInfo?: any,\r\n    pageInfo?: any\r\n  ) => void;\r\n  onSnapshotUpdated?: (snapshot: XmlSnapshot) => void;\r\n  initialViewMode?: ViewMode;\r\n  loadFromStepXml?: {\r\n    stepId: string;\r\n    xmlCacheId?: string;\r\n    xmlContent?: string;\r\n    deviceId?: string;\r\n    deviceName?: string;\r\n  };\r\n  preselectLocator?: NodeLocator;\r\n  onApplyCriteria?: (criteria: {\r\n    strategy: string;\r\n    fields: string[];\r\n    values: Record<string, string>;\r\n    includes?: Record<string, string[]>;\r\n    excludes?: Record<string, string[]>;\r\n    matchMode?: Record<string, \"equals\" | \"contains\" | \"regex\">;\r\n    regexIncludes?: Record<string, string[]>;\r\n    regexExcludes?: Record<string, string[]>;\r\n  }) => void;\r\n  initialMatching?: any;\r\n}\r\n\r\nconst UniversalPageFinderModal: React.FC<UniversalPageFinderModalProps> = ({\r\n  visible,\r\n  onClose,\r\n  onElementSelected,\r\n  snapshotOnlyMode",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal-Refactored.tsx",
        "start": 72,
        "end": 106,
        "startLoc": {
          "line": 72,
          "column": 3,
          "position": 437
        },
        "endLoc": {
          "line": 106,
          "column": 17,
          "position": 791
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal.tsx",
        "start": 57,
        "end": 91,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 504
        },
        "endLoc": {
          "line": 91,
          "column": 14,
          "position": 858
        }
      }
    },
    {
      "format": "tsx",
      "lines": 39,
      "fragment": ";\r\n\r\n  // 初始化逻辑\r\n  useEffect(() => {\r\n    if (visible && snapshotOnlyMode && selectedDevice) {\r\n      handleSnapshotCapture();\r\n    }\r\n  }, [visible, snapshotOnlyMode, selectedDevice]);\r\n\r\n  // 快照捕获\r\n  const handleSnapshotCapture = async () => {\r\n    if (!selectedDevice) {\r\n      message.error(\"请先选择设备\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const xmlData = await captureCurrentPage(selectedDevice);\r\n      \r\n      if (xmlData) {\r\n        const snapshot = createSnapshot(xmlData, deviceInfo);\r\n        onSnapshotCaptured?.(snapshot);\r\n        onSnapshotUpdated?.(snapshot);\r\n        \r\n        if (snapshotOnlyMode) {\r\n          onClose();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"快照捕获失败:\", error);\r\n      message.error(\"快照捕获失败，请重试\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 元素选择处理\r\n  const handleUIElementSelect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal-Refactored.tsx",
        "start": 151,
        "end": 189,
        "startLoc": {
          "line": 151,
          "column": 2,
          "position": 1086
        },
        "endLoc": {
          "line": 189,
          "column": 22,
          "position": 1382
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal.tsx",
        "start": 224,
        "end": 262,
        "startLoc": {
          "line": 224,
          "column": 2,
          "position": 1913
        },
        "endLoc": {
          "line": 262,
          "column": 20,
          "position": 2209
        }
      }
    },
    {
      "format": "tsx",
      "lines": 57,
      "fragment": "as unknown as UIElement);\r\n  };\r\n\r\n  // 从缓存加载页面\r\n  const handleCachedPageSelect = async (page: any) => {\r\n    try {\r\n      setLoading(true);\r\n      const success = await loadXmlSnapshot(page);\r\n      if (success) {\r\n        message.success(\"已加载缓存页面\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"加载缓存页面失败:\", error);\r\n      message.error(\"加载缓存页面失败\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 应用匹配条件\r\n  const handleApplyCriteria = async (criteria: any) => {\r\n    try {\r\n      onApplyCriteria?.(criteria);\r\n      message.success(\"匹配条件已应用\");\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"应用匹配条件失败:\", error);\r\n      message.error(\"应用匹配条件失败\");\r\n    }\r\n  };\r\n\r\n  // 刷新数据\r\n  const handleRefresh = async () => {\r\n    if (selectedDevice) {\r\n      await handleSnapshotCapture();\r\n    } else {\r\n      await refreshDevices();\r\n    }\r\n  };\r\n\r\n  // 导出数据\r\n  const handleExport = () => {\r\n    if (xmlContent) {\r\n      const blob = new Blob([xmlContent], { type: \"application/xml\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `ui_dump_${selectedDevice}_${Date.now()}.xml`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n      message.success(\"XML文件已导出\");\r\n    }\r\n  };\r\n\r\n  // 渲染视图内容\r\n  const renderViewContent = () => {\r\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal-Refactored.tsx",
        "start": 197,
        "end": 253,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 1483
        },
        "endLoc": {
          "line": 253,
          "column": 3,
          "position": 1997
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal.tsx",
        "start": 270,
        "end": 326,
        "startLoc": {
          "line": 270,
          "column": 2,
          "position": 2312
        },
        "endLoc": {
          "line": 326,
          "column": 7,
          "position": 2826
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ".map((element, index) => ({\r\n          ...element,\r\n          depth: 0, // 默认深度\r\n          originalIndex: index\r\n        }));\r\n        \r\n        return (\r\n          <ErrorBoundary>\r\n            <UIElementTree\r\n              elements={elementsWithHierarchy}\r\n              onElementSelect={(selectedElements) => {\r\n                if (selectedElements.length > 0) {\r\n                  handleUIElementSelect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal-Refactored.tsx",
        "start": 269,
        "end": 281,
        "startLoc": {
          "line": 269,
          "column": 11,
          "position": 2132
        },
        "endLoc": {
          "line": 281,
          "column": 22,
          "position": 2235
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal.tsx",
        "start": 345,
        "end": 357,
        "startLoc": {
          "line": 345,
          "column": 18,
          "position": 2954
        },
        "endLoc": {
          "line": 357,
          "column": 20,
          "position": 3057
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "\r\n            />\r\n          </ErrorBoundary>\r\n        );\r\n      \r\n      case \"mirror\":\r\n        return <ScrcpyControlView />;\r\n      \r\n      default:\r\n        return (\r\n          <Alert\r\n            message=\"暂无页面数据\"\r\n            description=\"请先获取页面信息或选择其他视图\"\r\n            type=\"info\"\r\n            showIcon\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Universal UI 智能页面查找器\"\r\n      open={visible}\r\n      onCancel={onClose}\r\n      width=\"98vw",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal-Refactored.tsx",
        "start": 310,
        "end": 335,
        "startLoc": {
          "line": 310,
          "column": 2,
          "position": 2416
        },
        "endLoc": {
          "line": 335,
          "column": 5,
          "position": 2537
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\UniversalPageFinderModal.tsx",
        "start": 388,
        "end": 413,
        "startLoc": {
          "line": 388,
          "column": 2,
          "position": 3265
        },
        "endLoc": {
          "line": 413,
          "column": 4,
          "position": 3386
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "export interface ElementContext {\r\n  // 元素基础信息\r\n  text: string;\r\n  contentDesc: string;\r\n  resourceId: string;\r\n  className: string;\r\n  bounds: string;\r\n  clickable: boolean;\r\n  selected: boolean;\r\n  enabled: boolean;\r\n  focusable: boolean;\r\n  scrollable: boolean;\r\n  checkable: boolean;\r\n  checked: boolean;\r\n  \r\n  // 位置信息\r\n  position: {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n  };\r\n  \r\n  // 设备信息\r\n  screenWidth: number;\r\n  screenHeight: number;\r\n  \r\n  // 上下文信息（可选，用于更精确的分析）\r\n  parentElements?: ElementContext[];\r\n  siblingElements?: ElementContext[];\r\n  childElements?: ElementContext[];\r\n}\r\n\r\nexport interface ElementAnalysisResult {\r\n  // 元素类型\r\n  elementType: 'navigation_tab' | 'action_button' | 'content_item' | 'search_bar' | \r\n              'text_input' | 'image_button' | 'list_item' | 'menu_item' | \r\n              'tab_button' | 'toggle_button' | 'info_text' | 'icon' | 'unknown';\r\n  \r\n  // 功能描述\r\n  functionality: string;\r\n  \r\n  // 用户友好的描述\r\n  userDescription: string;\r\n  \r\n  // 操作建议\r\n  actionSuggestion: string;\r\n  \r\n  // 置信度 (0-1)\r\n  confidence: number;\r\n  \r\n  // 详细分析信息\r\n  analysisDetails: {\r\n    positionAnalysis: string;\r\n    textAnalysis: string;\r\n    contextAnalysis: string;\r\n    interactionAnalysis: string;\r\n    semanticAnalysis: string;\r\n  };\r\n  \r\n  // 额外的元数据\r\n  metadata: {\r\n    category: 'navigation' | 'interaction' | 'content' | 'input' | 'display' | 'system';\r\n    priority: 'high' | 'medium' | 'low';\r\n    commonUseCase: string[];\r\n  };\r\n}\r\n\r\n/**\r\n * 应用特定的配置和映射\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 10,
        "end": 80,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 80,
          "column": 4,
          "position": 505
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\types.ts",
        "start": 10,
        "end": 78,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 78,
          "column": 7,
          "position": 505
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "= {\r\n    packageName: 'com.xingin.xhs',\r\n    bottomNavigation: {\r\n      '首页': { icon: '🏠', function: 'navigate_to_home', description: '浏览推荐内容和关注动态' },\r\n      '市集': { icon: '🛍️', function: 'navigate_to_shopping', description: '购买商品和浏览店铺' },\r\n      '发布': { icon: '➕', function: 'create_content', description: '发布新的笔记或视频' },\r\n      '消息': { icon: '💬', function: 'view_messages', description: '查看私信、评论和通知' },\r\n      '我': { icon: '👤', function: 'view_profile', description: '个人中心和设置' }\r\n    },\r\n    topTabs: {\r\n      '关注': { function: 'view_following', description: '查看关注用户的最新内容' },\r\n      '发现': { function: 'discover_content', description: '发现推荐和热门内容' },\r\n      '视频': { function: 'view_videos', description: '观看短视频内容' }\r\n    },\r\n    commonButtons: {\r\n      '搜索': { function: 'search', description: '搜索用户、内容或商品' },\r\n      '点赞': { function: 'like_content', description: '为内容点赞' },\r\n      '收藏': { function: 'bookmark_content', description: '收藏内容到个人收藏夹' },\r\n      '分享': { function: 'share_content', description: '分享内容到其他平台' },\r\n      '关注': { function: 'follow_user', description: '关注用户获取更新' },\r\n      '购买': { function: 'purchase_item', description: '购买商品' }\r\n    }\r\n  };\r\n  \r\n  // 微信应用配置\r\n  static readonly WECHAT_CONFIG =",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 84,
        "end": 109,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 530
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 917
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\AppSpecificMappings.ts",
        "start": 15,
        "end": 40,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 60
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 446
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "= {\r\n    packageName: 'com.tencent.mm',\r\n    bottomNavigation: {\r\n      '微信': { icon: '💬', function: 'chat_list', description: '查看聊天列表和消息' },\r\n      '通讯录': { icon: '📞', function: 'contacts', description: '管理联系人' },\r\n      '发现': { icon: '🔍', function: 'discover', description: '朋友圈、小程序等功能' },\r\n      '我': { icon: '👤', function: 'profile', description: '个人设置和钱包' }\r\n    },\r\n    commonButtons: {\r\n      '发送': { function: 'send_message', description: '发送消息' },\r\n      '语音': { function: 'voice_message', description: '录制语音消息' },\r\n      '视频通话': { function: 'video_call', description: '发起视频通话' },\r\n      '转账': { function: 'transfer_money', description: '转账给联系人' },\r\n      '收付款': { function: 'payment', description: '扫码支付或收款' }\r\n    }\r\n  };\r\n  \r\n  // 淘宝应用配置\r\n  static readonly TAOBAO_CONFIG =",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 109,
        "end": 127,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 917
        },
        "endLoc": {
          "line": 127,
          "column": 2,
          "position": 1182
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\AppSpecificMappings.ts",
        "start": 40,
        "end": 58,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 450
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "= {\r\n    packageName: 'com.taobao.taobao',\r\n    bottomNavigation: {\r\n      '首页': { icon: '🏠', function: 'home_browse', description: '浏览商品推荐' },\r\n      '微淘': { icon: '📱', function: 'social_shopping', description: '关注店铺和达人' },\r\n      '消息': { icon: '💬', function: 'messages', description: '查看订单和客服消息' },\r\n      '购物车': { icon: '🛒', function: 'shopping_cart', description: '管理购物车商品' },\r\n      '我的淘宝': { icon: '👤', function: 'user_center', description: '订单、收藏和设置' }\r\n    },\r\n    commonButtons: {\r\n      '搜索': { function: 'search_products', description: '搜索商品' },\r\n      '立即购买': { function: 'buy_now', description: '直接购买商品' },\r\n      '加入购物车': { function: 'add_to_cart', description: '添加到购物车' },\r\n      '收藏': { function: 'favorite_item', description: '收藏商品或店铺' },\r\n      '联系卖家': { function: 'contact_seller', description: '咨询商品信息' }\r\n    }\r\n  };\r\n  \r\n  // 通用Android应用模式\r\n  static readonly GENERIC_PATTERNS =",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 127,
        "end": 146,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1182
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1474
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\AppSpecificMappings.ts",
        "start": 58,
        "end": 77,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 718
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 1009
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "= {\r\n    navigation: {\r\n      patterns: ['首页', '主页', 'Home', '发现', 'Discover', '我的', 'Profile', '设置', 'Settings'],\r\n      bottomArea: { minY: 0.8 }, // 屏幕底部80%以下\r\n      characteristics: { clickable: true, textLength: [1, 6] }\r\n    },\r\n    search: {\r\n      patterns: ['搜索', 'Search', '查找', 'Find', '🔍'],\r\n      contentDescPatterns: ['搜索', 'search'],\r\n      characteristics: { clickable: true,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 146,
        "end": 155,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1474
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1619
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\AppSpecificMappings.ts",
        "start": 77,
        "end": 86,
        "startLoc": {
          "line": 77,
          "column": 2,
          "position": 1019
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 1165
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\r\n    }\r\n    \r\n    // 尺寸判断\r\n    const area = position.width * position.height;\r\n    const screenArea = screenWidth * screenHeight;\r\n    const areaRatio = area / screenArea;\r\n    \r\n    if (areaRatio > 0.1) {\r\n      analysis += '，大型元素';\r\n    } else if (areaRatio < 0.001) {\r\n      analysis += '，小型元素（可能是图标）';\r\n    }\r\n    \r\n    return analysis;\r\n  }\r\n  \r\n  /**\r\n   * 文本内容分析\r\n   */\r\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 253,
        "end": 273,
        "startLoc": {
          "line": 253,
          "column": 6,
          "position": 2550
        },
        "endLoc": {
          "line": 273,
          "column": 8,
          "position": 2688
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\ElementAnalysisUtils.ts",
        "start": 40,
        "end": 60,
        "startLoc": {
          "line": 40,
          "column": 6,
          "position": 328
        },
        "endLoc": {
          "line": 60,
          "column": 7,
          "position": 466
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": "static analyzeText(element: ElementContext): string {\r\n    const { text, contentDesc } = element;\r\n    const displayText = text || contentDesc;\r\n    \r\n    if (!displayText) {\r\n      return '无文本内容（可能是图标、图片或装饰元素）';\r\n    }\r\n    \r\n    let analysis = `显示文本: \"${displayText}\"`;\r\n    \r\n    // 文本长度分析\r\n    if (displayText.length === 1) {\r\n      analysis += ' - 单字符（可能是图标或缩写）';\r\n    } else if (displayText.length <= 4) {\r\n      analysis += ' - 短文本（可能是按钮或标签）';\r\n    } else if (displayText.length <= 20) {\r\n      analysis += ' - 中等长度文本';\r\n    } else {\r\n      analysis += ' - 长文本（可能是描述或内容）';\r\n    }\r\n    \r\n    // 数字检测\r\n    if (/^\\d+$/.test(displayText)) {\r\n      analysis += ' - 纯数字（可能是数量、ID或统计）';\r\n    } else if (/\\d+/.test(displayText)) {\r\n      analysis += ' - 包含数字';\r\n    }\r\n    \r\n    // 特殊字符检测\r\n    if (/[📱💬🏠👤🔍➕🛍️🛒]/u.test(displayText)) {\r\n      analysis += ' - 包含表情符号或图标';\r\n    }\r\n    \r\n    return analysis;\r\n  }\r\n  \r\n  /**\r\n   * 上下文环境分析\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 273,
        "end": 311,
        "startLoc": {
          "line": 273,
          "column": 2,
          "position": 2690
        },
        "endLoc": {
          "line": 311,
          "column": 6,
          "position": 3002
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\ElementAnalysisUtils.ts",
        "start": 60,
        "end": 98,
        "startLoc": {
          "line": 60,
          "column": 3,
          "position": 466
        },
        "endLoc": {
          "line": 98,
          "column": 6,
          "position": 778
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "const navInfo = appConfig.bottomNavigation[displayText];\r\n      const isBottomArea = (element.position.y / element.screenHeight) > 0.8;\r\n      \r\n      if (isBottomArea && element.clickable) {\r\n        result.elementType = 'navigation_tab';\r\n        result.functionality = navInfo.function;\r\n        result.userDescription = `${navInfo.icon} ${displayText} - ${navInfo.description}`;\r\n        result.actionSuggestion = `点击进入${displayText}页面`;\r\n        result.confidence = Math.max(result.confidence, 0.9);\r\n        result.metadata.category = 'navigation';\r\n        result.metadata.priority = 'high';\r\n        result.metadata.commonUseCase.push('页面导航', '主要功能入口');\r\n        \r\n        if (element.selected) {\r\n          result.userDescription += '（当前页面）';\r\n          result.actionSuggestion = '当前已在此页面';\r\n        }\r\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 455,
        "end": 472,
        "startLoc": {
          "line": 455,
          "column": 7,
          "position": 4516
        },
        "endLoc": {
          "line": 472,
          "column": 7,
          "position": 4747
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\AppSpecificAnalyzer.ts",
        "start": 51,
        "end": 68,
        "startLoc": {
          "line": 51,
          "column": 5,
          "position": 323
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const tabInfo = appConfig.topTabs[displayText];\r\n      const isTopArea = (element.position.y / element.screenHeight) < 0.3;\r\n      \r\n      if (isTopArea && element.clickable) {\r\n        result.elementType = 'tab_button';\r\n        result.functionality = tabInfo.function;\r\n        result.userDescription = `📂 ${displayText} - ${tabInfo.description}`;\r\n        result.actionSuggestion = `切换到${displayText}标签页`;\r\n        result.confidence = Math.max(result.confidence, 0.85);\r\n        result.metadata.category = 'navigation';\r\n        result.metadata.priority = 'medium';\r\n        result.metadata.commonUseCase.push('内容切换', '标签页导航');\r\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 478,
        "end": 490,
        "startLoc": {
          "line": 478,
          "column": 7,
          "position": 4787
        },
        "endLoc": {
          "line": 490,
          "column": 7,
          "position": 4972
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\AppSpecificAnalyzer.ts",
        "start": 84,
        "end": 96,
        "startLoc": {
          "line": 84,
          "column": 5,
          "position": 648
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 833
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const buttonInfo = appConfig.commonButtons[displayText];\r\n      if (element.clickable) {\r\n        result.elementType = 'action_button';\r\n        result.functionality = buttonInfo.function;\r\n        result.userDescription = `🔘 ${displayText} - ${buttonInfo.description}`;\r\n        result.actionSuggestion = `点击${displayText}`;\r\n        result.confidence = Math.max(result.confidence, 0.8);\r\n        result.metadata.category = 'interaction';\r\n        result.metadata.priority = displayText.includes('购买') || displayText.includes('支付') ? 'high' : 'medium';\r\n        result.metadata.commonUseCase.push('用户操作', buttonInfo.function);\r\n        return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\universal-ui\\UniversalElementAnalyzer.ts",
        "start": 496,
        "end": 506,
        "startLoc": {
          "line": 496,
          "column": 7,
          "position": 5012
        },
        "endLoc": {
          "line": 506,
          "column": 7,
          "position": 5188
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\analyzer\\AppSpecificAnalyzer.ts",
        "start": 112,
        "end": 122,
        "startLoc": {
          "line": 112,
          "column": 5,
          "position": 927
        },
        "endLoc": {
          "line": 122,
          "column": 2,
          "position": 1103
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "</span>\r\n                <Badge count={filteredElements.length} size=\"small\" />\r\n              </Space>\r\n            }\r\n            key=\"list\"\r\n          >\r\n            <div style={{ \r\n              background: '#1f2937',\r\n              borderRadius: '8px',\r\n              padding: '16px',\r\n              minHeight: '500px',\r\n              maxHeight",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\unified-view\\UnifiedVisualizationView.tsx",
        "start": 336,
        "end": 347,
        "startLoc": {
          "line": 336,
          "column": 5,
          "position": 2831
        },
        "endLoc": {
          "line": 347,
          "column": 24,
          "position": 2897
        }
      },
      "secondFile": {
        "name": "src\\components\\unified-view\\UnifiedVisualizationView.tsx",
        "start": 209,
        "end": 220,
        "startLoc": {
          "line": 209,
          "column": 6,
          "position": 1786
        },
        "endLoc": {
          "line": 220,
          "column": 22,
          "position": 1852
        }
      }
    },
    {
      "format": "javascript",
      "lines": 28,
      "fragment": "</span>\r\n                <Badge count={filteredElements.length} size=\"small\" />\r\n              </Space>\r\n            }\r\n            key=\"tree\"\r\n          >\r\n            <div style={{ \r\n              background: '#1f2937',\r\n              borderRadius: '8px',\r\n              padding: '16px',\r\n              minHeight: '500px',\r\n              maxHeight: '600px',\r\n              overflowY: 'auto'\r\n            }}>\r\n              <UIElementTree\r\n                elements={filteredElements}\r\n                onElementSelect={(elements) => {\r\n                  if (elements.length > 0 && onElementSelect) {\r\n                    onElementSelect(elements[0]);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </TabPane>\r\n        </Tabs>\r\n\r\n        {/* 底部统计信息 */}\r\n        <Card size=\"small\" style={{",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\unified-view\\UnifiedVisualizationView.tsx",
        "start": 389,
        "end": 416,
        "startLoc": {
          "line": 389,
          "column": 4,
          "position": 3320
        },
        "endLoc": {
          "line": 416,
          "column": 2,
          "position": 3511
        }
      },
      "secondFile": {
        "name": "src\\components\\unified-view\\UnifiedVisualizationView.tsx",
        "start": 209,
        "end": 350,
        "startLoc": {
          "line": 209,
          "column": 6,
          "position": 1786
        },
        "endLoc": {
          "line": 350,
          "column": 2,
          "position": 2919
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "}>\r\n                <strong>总元素:</strong> {stats.total}\r\n              </Text>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <Text style={{ color: token.colorText }}>\r\n                <strong>可交互:</strong> {stats.interactive}\r\n              </Text>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <Text style={{ color: token.colorText }}>\r\n                <strong>已筛选:</strong> {filteredElements.length}\r\n              </Text>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <Text style={{ color: token.colorText }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\unified-view\\UnifiedVisualizationView.tsx",
        "start": 419,
        "end": 434,
        "startLoc": {
          "line": 419,
          "column": 2,
          "position": 3577
        },
        "endLoc": {
          "line": 434,
          "column": 2,
          "position": 3772
        }
      },
      "secondFile": {
        "name": "src\\components\\unified-view\\UnifiedVisualizationView.tsx",
        "start": 417,
        "end": 429,
        "startLoc": {
          "line": 417,
          "column": 2,
          "position": 3535
        },
        "endLoc": {
          "line": 429,
          "column": 2,
          "position": 3707
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ", null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `${template",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\template\\TemplateLibrary.tsx",
        "start": 287,
        "end": 292,
        "startLoc": {
          "line": 287,
          "column": 9,
          "position": 2521
        },
        "endLoc": {
          "line": 292,
          "column": 9,
          "position": 2611
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeConfigPanel.tsx",
        "start": 122,
        "end": 265,
        "startLoc": {
          "line": 122,
          "column": 12,
          "position": 1020
        },
        "endLoc": {
          "line": 265,
          "column": 14,
          "position": 1847
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": "}\r\n                    />\r\n                  </Tooltip>\r\n                </Space>\r\n              }\r\n            >\r\n              <Paragraph ellipsis={{ rows: 2 }} style={{ marginBottom: 8 }}>\r\n                {template.description}\r\n              </Paragraph>\r\n              <div style={{ marginBottom: 8 }}>\r\n                {template.tags?.slice(0, 3).map((tag: string) => (\r\n                  <Tag key={tag}>{tag}</Tag>\r\n                ))}\r\n              </div>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Rate disabled defaultValue={template.rating ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\template\\TemplateIOManager.tsx",
        "start": 318,
        "end": 333,
        "startLoc": {
          "line": 318,
          "column": 2,
          "position": 2807
        },
        "endLoc": {
          "line": 333,
          "column": 8,
          "position": 2992
        }
      },
      "secondFile": {
        "name": "src\\components\\template\\TemplateLibrary.tsx",
        "start": 416,
        "end": 431,
        "startLoc": {
          "line": 416,
          "column": 2,
          "position": 3872
        },
        "endLoc": {
          "line": 431,
          "column": 7,
          "position": 4058
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ", null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `${template.name.",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\template\\TemplateIOManager.tsx",
        "start": 122,
        "end": 127,
        "startLoc": {
          "line": 122,
          "column": 11,
          "position": 1049
        },
        "endLoc": {
          "line": 127,
          "column": 2,
          "position": 1142
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeConfigPanel.tsx",
        "start": 122,
        "end": 292,
        "startLoc": {
          "line": 122,
          "column": 12,
          "position": 1020
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2614
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ",\r\n      version: '1.0.0'\r\n    };\r\n\r\n    const dataStr = JSON.stringify(exportData, null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `script_templates_batch_",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\template\\TemplateIOManager.tsx",
        "start": 141,
        "end": 150,
        "startLoc": {
          "line": 141,
          "column": 7,
          "position": 1294
        },
        "endLoc": {
          "line": 150,
          "column": 25,
          "position": 1411
        }
      },
      "secondFile": {
        "name": "src\\components\\template\\TemplateIOManager.tsx",
        "start": 118,
        "end": 127,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 1020
        },
        "endLoc": {
          "line": 127,
          "column": 15,
          "position": 1108
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "\">\r\n                      <Option value=\"beginner\">初级</Option>\r\n                      <Option value=\"intermediate\">中级</Option>\r\n                      <Option value=\"advanced\">高级</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\template\\TemplateEditor.tsx",
        "start": 508,
        "end": 516,
        "startLoc": {
          "line": 508,
          "column": 5,
          "position": 4882
        },
        "endLoc": {
          "line": 516,
          "column": 2,
          "position": 4967
        }
      },
      "secondFile": {
        "name": "src\\components\\template\\TemplateLibrary.tsx",
        "start": 667,
        "end": 676,
        "startLoc": {
          "line": 667,
          "column": 8,
          "position": 6286
        },
        "endLoc": {
          "line": 676,
          "column": 19,
          "position": 6371
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ";\r\n    selectedDevices: string[];\r\n  }) => void;\r\n  availableDevices: Array<{ id: string; name: string; phone_name: string }>;\r\n  selectedDevices: string[];\r\n  onDeviceSelectionChange: (deviceIds: string[]) => void;\r\n  isLoading?: boolean;\r\n  totalContacts",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\task\\ContactFollowForm.tsx",
        "start": 15,
        "end": 22,
        "startLoc": {
          "line": 15,
          "column": 5,
          "position": 133
        },
        "endLoc": {
          "line": 22,
          "column": 14,
          "position": 225
        }
      },
      "secondFile": {
        "name": "src\\components\\task\\PreciseAcquisitionForm.tsx",
        "start": 20,
        "end": 27,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 184
        },
        "endLoc": {
          "line": 27,
          "column": 15,
          "position": 276
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ",\r\n              padding: `${STRATEGY_DESIGN_TOKENS.spacing.xs} ${STRATEGY_DESIGN_TOKENS.spacing.sm}`,\r\n              borderRadius: STRATEGY_DESIGN_TOKENS.borderRadius.sm,\r\n              fontSize: STRATEGY_DESIGN_TOKENS.typography.fontSize.xs,\r\n              fontWeight: STRATEGY_DESIGN_TOKENS.typography.fontWeight.medium,\r\n              cursor: disabled",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\strategy-selector\\StrategySelector.tsx",
        "start": 277,
        "end": 282,
        "startLoc": {
          "line": 277,
          "column": 10,
          "position": 2576
        },
        "endLoc": {
          "line": 282,
          "column": 9,
          "position": 2647
        }
      },
      "secondFile": {
        "name": "src\\components\\strategy-selector\\StrategySelector.tsx",
        "start": 214,
        "end": 219,
        "startLoc": {
          "line": 214,
          "column": 7,
          "position": 1941
        },
        "endLoc": {
          "line": 219,
          "column": 10,
          "position": 2012
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "? STRATEGY_DESIGN_TOKENS.colors.bg.primary\r\n                  : STRATEGY_DESIGN_TOKENS.colors.text.secondary,\r\n                padding: `${STRATEGY_DESIGN_TOKENS.spacing.xs} ${STRATEGY_DESIGN_TOKENS.spacing.sm}`,\r\n                borderRadius: STRATEGY_DESIGN_TOKENS.borderRadius.sm,\r\n                fontSize: STRATEGY_DESIGN_TOKENS.typography.fontSize.xs,\r\n                cursor",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\strategy-selector\\StrategySelector.tsx",
        "start": 331,
        "end": 336,
        "startLoc": {
          "line": 331,
          "column": 19,
          "position": 3128
        },
        "endLoc": {
          "line": 336,
          "column": 7,
          "position": 3203
        }
      },
      "secondFile": {
        "name": "src\\components\\strategy-selector\\StrategySelector.tsx",
        "start": 276,
        "end": 281,
        "startLoc": {
          "line": 276,
          "column": 17,
          "position": 2555
        },
        "endLoc": {
          "line": 281,
          "column": 11,
          "position": 2630
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ",\r\n              padding: `${STRATEGY_DESIGN_TOKENS.spacing.xs} ${STRATEGY_DESIGN_TOKENS.spacing.sm}`,\r\n              borderRadius: STRATEGY_DESIGN_TOKENS.borderRadius.sm,\r\n              fontSize: STRATEGY_DESIGN_TOKENS.typography.fontSize.xs,\r\n              cursor: disabled ? 'not-allowed' : 'pointer',\r\n              opacity: disabled ? 0.6 : 1,\r\n            }}\r\n          >\r\n            📋",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\strategy-selector\\StrategySelector.tsx",
        "start": 396,
        "end": 404,
        "startLoc": {
          "line": 396,
          "column": 10,
          "position": 3746
        },
        "endLoc": {
          "line": 404,
          "column": 3,
          "position": 3841
        }
      },
      "secondFile": {
        "name": "src\\components\\strategy-selector\\StrategySelector.tsx",
        "start": 379,
        "end": 387,
        "startLoc": {
          "line": 379,
          "column": 5,
          "position": 3564
        },
        "endLoc": {
          "line": 387,
          "column": 3,
          "position": 3659
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ";\r\n\r\nconst SMART_STEPS: { step: SmartStep; label: string }[] = [\r\n  { step: 'step1', label: 'Step1 - 基础识别' },\r\n  { step: 'step2', label: 'Step2 - 属性匹配' },\r\n  { step: 'step3', label: 'Step3 - 结构分析' },\r\n  { step: 'step4', label: 'Step4 - 语义理解' },\r\n  { step: 'step5', label: 'Step5 - 上下文推理' },\r\n  { step: 'step6', label: 'Step6 - 全局索引' },\r\n];\r\n\r\ninterface CompactStrategyMenuProps",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\strategy-selector\\CompactStrategyMenu.tsx",
        "start": 24,
        "end": 35,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 175
        },
        "endLoc": {
          "line": 35,
          "column": 25,
          "position": 323
        }
      },
      "secondFile": {
        "name": "src\\components\\strategy-selector\\StrategySelector.tsx",
        "start": 98,
        "end": 109,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 659
        },
        "endLoc": {
          "line": 109,
          "column": 23,
          "position": 807
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "} color=\"blue\">\r\n                                {element.groupInfo.groupTotal}个\r\n                              </Tag>\r\n                            </Tooltip>\r\n                          )}\r\n                        </Space>\r\n                      </Col>\r\n                      \r\n                      <Col>\r\n                        <Space size=\"small\">\r\n                          {element.isClickable && (\r\n                            <Tag color=\"green\" style={{ fontSize: '10px', padding: '0 4px', lineHeight: '16px' }}>可点击</Tag>\r\n                          )}\r\n                          {element.isEditable && (\r\n                            <Tag color=\"orange\" style={{ fontSize: '10px', padding: '0 4px', lineHeight: '16px' }}>可编辑</Tag>\r\n                          )}\r\n                          {element.isScrollable && (\r\n                            <Tag color=\"purple\" style={{ fontSize: '10px', padding: '0 4px', lineHeight: '16px' }}>可滚动</Tag>\r\n                          )}\r\n                        </Space>\r\n                      </Col>\r\n                    </Row>\r\n                    \r\n                    <div style={{ marginTop",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-page-finder\\ElementHierarchyTree.tsx",
        "start": 194,
        "end": 217,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 2129
        },
        "endLoc": {
          "line": 217,
          "column": 11,
          "position": 2389
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-page-finder\\ElementHierarchyTree.tsx",
        "start": 193,
        "end": 211,
        "startLoc": {
          "line": 193,
          "column": 3,
          "position": 2101
        },
        "endLoc": {
          "line": 211,
          "column": 10,
          "position": 2332
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "} />\r\n              </Form.Item>\r\n              <Form.Item name=\"x_end\" label=\"X结束\" style={{ marginBottom: 0 }}>\r\n                <Input placeholder=\"1.0\" style={{ width: 80 }} />\r\n              </Form.Item>\r\n              <Form.Item name=\"y_start\" label=\"Y起始\" style={{ marginBottom: 0 }}>\r\n                <Input placeholder=\"0.9\" style={{ width: 80 }} />\r\n              </Form.Item>\r\n              <Form.Item name=\"y_end\" label=\"Y结束\" style={{ marginBottom: 0 }}>\r\n                <Input placeholder=\"1.0\" style={{ width: 80 }} />\r\n              </Form.Item>\r\n            </Space>\r\n          </Form.Item>\r\n        )}\r\n\r\n        {/* 目标按钮选择 */}\r\n        <Form.Item label=\"目标按钮\">\r\n          <Space direction=\"vertical\" style={{ width",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 383,
        "end": 400,
        "startLoc": {
          "line": 383,
          "column": 2,
          "position": 3501
        },
        "endLoc": {
          "line": 400,
          "column": 7,
          "position": 3746
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 370,
        "end": 391,
        "startLoc": {
          "line": 370,
          "column": 11,
          "position": 3336
        },
        "endLoc": {
          "line": 391,
          "column": 14,
          "position": 3654
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "}\r\n\r\n// 测试模式类型\r\ntype TestMode = 'app_specific' | 'direct_adb';\r\n\r\n// 测试模式配置\r\nconst TEST_MODE_CONFIG = {\r\n  app_specific: {\r\n    label: '指定应用模式',\r\n    description: '根据选择的应用进行检测，会验证应用状态',\r\n    icon: '📱',\r\n    color: 'blue' as const\r\n  },\r\n  direct_adb: {\r\n    label: '直接ADB模式', \r\n    description: '直接在当前界面查找，不管是什么应用',\r\n    icon: '⚡',\r\n    color: 'green' as const\r\n  }\r\n};\r\n\r\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 105,
        "end": 126,
        "startLoc": {
          "line": 105,
          "column": 1,
          "position": 891
        },
        "endLoc": {
          "line": 126,
          "column": 6,
          "position": 1026
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationStepBuilder.tsx",
        "start": 66,
        "end": 87,
        "startLoc": {
          "line": 66,
          "column": 1,
          "position": 507
        },
        "endLoc": {
          "line": 87,
          "column": 11,
          "position": 642
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const toTuple = (pos?: string): [number, number] | undefined => {\r\n        if (!pos) return undefined;\r\n        const m = pos.match(/\\(([-\\d.]+),\\s*([-\\d.]+)\\)/);\r\n        if (m) return [Number(m[1]), Number(m[2])];\r\n        const parts = pos.split(/[ ,]+/).map(Number).filter(n => !Number.isNaN(n));\r\n        return parts.length >= 2 ? [parts[0], parts[1]] : undefined;\r\n      };\r\n\r\n      const navigationResult",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 222,
        "end": 230,
        "startLoc": {
          "line": 222,
          "column": 7,
          "position": 1971
        },
        "endLoc": {
          "line": 230,
          "column": 17,
          "position": 2140
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationStepBuilder.tsx",
        "start": 295,
        "end": 303,
        "startLoc": {
          "line": 295,
          "column": 7,
          "position": 2706
        },
        "endLoc": {
          "line": 303,
          "column": 20,
          "position": 2875
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "= {\r\n        success: result.element_found,\r\n        message: result.element_found \r\n          ? `✅ [${result.mode}] 成功找到目标按钮 \"${navigationParams.target_button}\"` \r\n          : (result.error_message || '未找到目标按钮'),\r\n        found_elements: result.found_element ? [{\r\n          text: result.found_element.text,\r\n          position: toTuple(result.found_element.position) || [0, 0]\r\n        }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 230,
        "end": 238,
        "startLoc": {
          "line": 230,
          "column": 2,
          "position": 2145
        },
        "endLoc": {
          "line": 238,
          "column": 2,
          "position": 2252
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationStepBuilder.tsx",
        "start": 303,
        "end": 310,
        "startLoc": {
          "line": 303,
          "column": 2,
          "position": 2880
        },
        "endLoc": {
          "line": 310,
          "column": 2,
          "position": 2984
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ");\r\n\r\n      if (result.element_found) {\r\n        message.success(`✅ 成功检测到导航元素！(${result.mode}, ${result.execution_time_ms}ms)`);\r\n      } else {\r\n        message.warning(result.error_message || '未找到目标按钮');\r\n      }\r\n    } catch (error) {\r\n      console.error('智能检测失败:', error);\r\n      message.error(`检测失败: ${error}`);\r\n      setResult",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 245,
        "end": 255,
        "startLoc": {
          "line": 245,
          "column": 17,
          "position": 2329
        },
        "endLoc": {
          "line": 255,
          "column": 10,
          "position": 2437
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationStepBuilder.tsx",
        "start": 322,
        "end": 332,
        "startLoc": {
          "line": 322,
          "column": 20,
          "position": 3099
        },
        "endLoc": {
          "line": 332,
          "column": 2,
          "position": 3207
        }
      }
    },
    {
      "format": "tsx",
      "lines": 37,
      "fragment": ">\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Radio.Group \r\n              value={testMode} \r\n              onChange={(e) => setTestMode(e.target.value)}\r\n              style={{ width: '100%' }}\r\n            >\r\n              {Object.entries(TEST_MODE_CONFIG).map(([key, config]) => (\r\n                <Radio.Button \r\n                  key={key} \r\n                  value={key}\r\n                  style={{ marginRight: 8, marginBottom: 8 }}\r\n                >\r\n                  <Space size=\"small\">\r\n                    <span>{config.icon}</span>\r\n                    <span>{config.label}</span>\r\n                  </Space>\r\n                </Radio.Button>\r\n              ))}\r\n            </Radio.Group>\r\n            \r\n            {/* 模式说明 */}\r\n            <Alert\r\n              message={\r\n                <Space>\r\n                  <span style={{ fontSize: 14 }}>\r\n                    {TEST_MODE_CONFIG[testMode].icon} <strong>{TEST_MODE_CONFIG[testMode].label}</strong>\r\n                  </span>\r\n                </Space>\r\n              }\r\n              description={TEST_MODE_CONFIG[testMode].description}\r\n              type={testMode === 'app_specific' ? 'info' : 'success'}\r\n              showIcon={false}\r\n              style={{ marginTop: 8, fontSize: 12 }}\r\n            />\r\n          </div>\r\n        </Form.Item",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 445,
        "end": 481,
        "startLoc": {
          "line": 445,
          "column": 2,
          "position": 4176
        },
        "endLoc": {
          "line": 481,
          "column": 10,
          "position": 4518
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationStepBuilder.tsx",
        "start": 498,
        "end": 538,
        "startLoc": {
          "line": 498,
          "column": 5,
          "position": 4871
        },
        "endLoc": {
          "line": 538,
          "column": 4,
          "position": 5235
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</Button>\r\n            )}\r\n          </Space>\r\n\r\n          {/* 当前模式提示 */}\r\n          <div style={{ fontSize: 12, color: '#666' }}>\r\n            <Space>\r\n              <span>{TEST_MODE_CONFIG[testMode].icon}</span>\r\n              <span>当前模式: {TEST_MODE_CONFIG[testMode].label}</span>\r\n              {testMode === 'app_specific' && selectedPreset",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationFinder.tsx",
        "start": 514,
        "end": 523,
        "startLoc": {
          "line": 514,
          "column": 15,
          "position": 4769
        },
        "endLoc": {
          "line": 523,
          "column": 15,
          "position": 4869
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationStepBuilder.tsx",
        "start": 562,
        "end": 571,
        "startLoc": {
          "line": 562,
          "column": 15,
          "position": 5414
        },
        "endLoc": {
          "line": 571,
          "column": 2,
          "position": 5514
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": " }} />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"x_end\" label=\"X结束\" style={{ marginBottom: 0 }}>\r\n                                <InputNumber min={0} max={1} step={0.1} style={{ width: 80 }} />\r\n                            </Form.Item>\r\n                        </Space>\r\n                        <Space>\r\n                            <Form.Item name=\"y_start\" label=\"Y起始\" style={{ marginBottom: 0 }}>\r\n                                <InputNumber min={0} max={1} step={0.1} style={{ width: 80 }} />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"y_end\" label=\"Y结束\" style={{ marginBottom: 0 }}>\r\n                                <InputNumber min={0} max={1} step={0.1} style={{ width: 80 }} />\r\n                            </Form.Item>\r\n                        </Space>\r\n                        <Text type=\"secondary\">\r\n                            位置比例：0.0-1.0，例如底部导航通常为 Y: 0.9-1.0\r\n                        </Text>\r\n                    </Space>\r\n                </Form.Item>\r\n\r\n                {/* 按钮数量 */}\r\n                <Form.Item \r\n                    name=\"button_count\" \r\n                    label=\"预期按钮数量\" \r\n                >\r\n                    <InputNumber min={1",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-element-finder\\SmartElementFinder.tsx",
        "start": 310,
        "end": 335,
        "startLoc": {
          "line": 310,
          "column": 3,
          "position": 3047
        },
        "endLoc": {
          "line": 335,
          "column": 2,
          "position": 3376
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-element-finder\\SmartElementFinder.tsx",
        "start": 307,
        "end": 317,
        "startLoc": {
          "line": 307,
          "column": 7,
          "position": 2975
        },
        "endLoc": {
          "line": 317,
          "column": 2,
          "position": 3164
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "export interface NavigationBarConfig {\r\n    position_type: 'bottom' | 'top' | 'side' | 'floating';\r\n    position_ratio?: {\r\n        x_start: number;\r\n        x_end: number;\r\n        y_start: number;\r\n        y_end: number;\r\n    };\r\n    button_count?: number;\r\n    button_patterns: string[];\r\n    target_button: string;\r\n    click_action: 'single_tap' | 'double_tap' | 'long_press';\r\n}\r\n\r\nexport interface DetectedElement {\r\n    text: string;\r\n    bounds",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\smart-element-finder\\SmartElementFinder.tsx",
        "start": 14,
        "end": 30,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 162
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 302
        }
      },
      "secondFile": {
        "name": "src\\components\\smart-navigation-finder\\SmartNavigationStepBuilder.tsx",
        "start": 34,
        "end": 50,
        "startLoc": {
          "line": 34,
          "column": 1,
          "position": 216
        },
        "endLoc": {
          "line": 50,
          "column": 13,
          "position": 356
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ")\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'created_at',\r\n      key: 'created_at',\r\n      render: (date: Date) => (\r\n        <span className=\"text-xs text-gray-500\">\r\n          {dayjs(date).format('MM-DD HH:mm')}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'actions',\r\n      width: 200,\r\n      render: (_, record: Task",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\precise-acquisition\\EnhancedTaskManagementDashboard.tsx",
        "start": 379,
        "end": 395,
        "startLoc": {
          "line": 379,
          "column": 7,
          "position": 3195
        },
        "endLoc": {
          "line": 395,
          "column": 5,
          "position": 3327
        }
      },
      "secondFile": {
        "name": "src\\components\\precise-acquisition\\TemplateManagementSystem.tsx",
        "start": 413,
        "end": 429,
        "startLoc": {
          "line": 413,
          "column": 7,
          "position": 3677
        },
        "endLoc": {
          "line": 429,
          "column": 14,
          "position": 3809
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ">\r\n            <Select placeholder=\"选择任务类型\">\r\n              <Option value={TaskType.FOLLOW}>关注</Option>\r\n              <Option value={TaskType.LIKE}>点赞</Option>\r\n              <Option value={TaskType.COMMENT}>评论</Option>\r\n              <Option value={TaskType.REPLY}>回复</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\precise-acquisition\\EnhancedTaskManagementDashboard.tsx",
        "start": 592,
        "end": 601,
        "startLoc": {
          "line": 592,
          "column": 11,
          "position": 5055
        },
        "endLoc": {
          "line": 601,
          "column": 2,
          "position": 5157
        }
      },
      "secondFile": {
        "name": "src\\components\\precise-acquisition\\TemplateManagementSystem.tsx",
        "start": 715,
        "end": 723,
        "startLoc": {
          "line": 715,
          "column": 15,
          "position": 6008
        },
        "endLoc": {
          "line": 723,
          "column": 3,
          "position": 6108
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "(\r\n      loopConfig || {\r\n        loopId: (step.parameters?.loop_id as string) || `loop_${Date.now()}`,\r\n        name: (step.parameters?.loop_name as string) || \"新循环\",\r\n        iterations: (step.parameters?.iterations as number) || 1,\r\n        enabled: true,\r\n      }\r\n    );\r\n    setIsEditing",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\LoopStartCard\\index.tsx",
        "start": 48,
        "end": 56,
        "startLoc": {
          "line": 48,
          "column": 14,
          "position": 442
        },
        "endLoc": {
          "line": 56,
          "column": 13,
          "position": 548
        }
      },
      "secondFile": {
        "name": "src\\components\\LoopStartCard\\index.tsx",
        "start": 26,
        "end": 35,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 230
        },
        "endLoc": {
          "line": 35,
          "column": 8,
          "position": 338
        }
      }
    },
    {
      "format": "javascript",
      "lines": 178,
      "fragment": " }}\r\n            >\r\n              添加动态参数\r\n            </Button>\r\n          </Space>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdvancedLoopBuilder: React.FC = () => {\r\n  const [loops, setLoops] = useState<LoopConfig[]>([]);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [currentLoop, setCurrentLoop] = useState<LoopConfig | null>(null);\r\n\r\n  const getTemplateTagColor = (type: string) => {\r\n    switch (type) {\r\n      case 'simple': return 'blue';\r\n      case 'conditional': return 'green';\r\n      case 'nested': return 'orange';\r\n      case 'dynamic': return 'purple';\r\n      default: return 'blue';\r\n    }\r\n  };\r\n\r\n  const getTemplateTagText = (type: string) => {\r\n    switch (type) {\r\n      case 'simple': return '简单';\r\n      case 'conditional': return '条件';\r\n      case 'nested': return '嵌套';\r\n      case 'dynamic': return '动态';\r\n      default: return '简单';\r\n    }\r\n  };\r\n\r\n  const handleAddLoop = useCallback((template?: LoopConfig) => {\r\n    const newLoop: LoopConfig = template || {\r\n      id: `loop_${Date.now()}`,\r\n      type: 'simple',\r\n      name: '新循环',\r\n      condition: {\r\n        type: 'count',\r\n        value: 1\r\n      },\r\n      maxIterations: 10,\r\n      breakCondition: {\r\n        enabled: false,\r\n        type: 'element_found',\r\n        value: ''\r\n      },\r\n      dynamicParameters: {\r\n        enabled: false,\r\n        parameters: []\r\n      }\r\n    };\r\n    \r\n    setLoops([...loops, { ...newLoop, id: `loop_${Date.now()}` }]);\r\n  }, [loops]);\r\n\r\n  const handleRemoveLoop = useCallback((id: string) => {\r\n    setLoops(loops.filter(loop => loop.id !== id));\r\n    message.success('高级循环删除成功');\r\n  }, [loops]);\r\n\r\n  const handleUpdateLoop = useCallback((id: string, updates: Partial<LoopConfig>) => {\r\n    setLoops(loops.map(loop => \r\n      loop.id === id ? { ...loop, ...updates } : loop\r\n    ));\r\n  }, [loops]);\r\n\r\n  const handleCloneLoop = useCallback((loop: LoopConfig) => {\r\n    const clonedLoop = {\r\n      ...loop,\r\n      id: `loop_${Date.now()}`,\r\n      name: `${loop.name} (复制)`\r\n    };\r\n    setLoops([...loops, clonedLoop]);\r\n  }, [loops]);\r\n\r\n  const handlePreviewLoop = (loop: LoopConfig) => {\r\n    setCurrentLoop(loop);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const renderLoopCard = (loop: LoopConfig, index: number) => {\r\n    const getLoopTypeColor = (type: string) => {\r\n      const colors = {\r\n        simple: 'blue',\r\n        conditional: 'green',\r\n        nested: 'orange',\r\n        dynamic: 'purple'\r\n      };\r\n      return colors[type as keyof typeof colors] || 'default';\r\n    };\r\n\r\n    const getLoopTypeName = (type: string) => {\r\n      const names = {\r\n        simple: '简单循环',\r\n        conditional: '条件循环',\r\n        nested: '嵌套循环',\r\n        dynamic: '动态循环'\r\n      };\r\n      return names[type as keyof typeof names] || type;\r\n    };\r\n\r\n    return (\r\n      <Card\r\n        key={loop.id}\r\n        style={{ marginBottom: 16 }}\r\n        title={\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Space>\r\n              <BranchesOutlined />\r\n              <span>{loop.name}</span>\r\n              <Tag color={getLoopTypeColor(loop.type)}>\r\n                {getLoopTypeName(loop.type)}\r\n              </Tag>\r\n            </Space>\r\n            <Space>\r\n              <Button\r\n                type=\"text\"\r\n                icon={<PlayCircleOutlined />}\r\n                onClick={() => handlePreviewLoop(loop)}\r\n                title=\"预览循环\"\r\n              />\r\n              <Button\r\n                type=\"text\"\r\n                icon={<CopyOutlined />}\r\n                onClick={() => handleCloneLoop(loop)}\r\n                title=\"复制循环\"\r\n              />\r\n              <ConfirmPopover\r\n                mode=\"default\"\r\n                title=\"确认删除高级循环\"\r\n                description=\"确定要删除这个高级循环配置吗？此操作不可撤销。\"\r\n                onConfirm={() => handleRemoveLoop(loop.id)}\r\n                okText=\"删除\"\r\n                cancelText=\"取消\"\r\n                placement=\"topLeft\"\r\n              >\r\n                <Button\r\n                  type=\"text\"\r\n                  danger\r\n                  icon={<DeleteOutlined />}\r\n                  title=\"删除循环\"\r\n                />\r\n              </ConfirmPopover>\r\n            </Space>\r\n          </div>\r\n        }\r\n      >\r\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n          <div style={{ display: 'flex', gap: 16 }}>\r\n            <div style={{ flex: 1 }}>\r\n              <Input\r\n                value={loop.name}\r\n                onChange={(e) => handleUpdateLoop(loop.id, { name: e.target.value })}\r\n                placeholder=\"循环名称\"\r\n              />\r\n            </div>\r\n            <div style={{ width: 120 }}>\r\n              <Select\r\n                value={loop.type}\r\n                onChange={(type) => handleUpdateLoop(loop.id, { type })}\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Option value=\"simple\">简单循环</Option>\r\n                <Option value=\"conditional\">条件循环</Option>\r\n                <Option value=\"nested\">嵌套循环</Option>\r\n                <Option value=\"dynamic\">动态循环</Option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n\r\n          <ConditionBuilder\r\n            condition={loop",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 334,
        "end": 511,
        "startLoc": {
          "line": 334,
          "column": 7,
          "position": 2791
        },
        "endLoc": {
          "line": 511,
          "column": 5,
          "position": 4473
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 259,
        "end": 343,
        "startLoc": {
          "line": 259,
          "column": 4,
          "position": 2289
        },
        "endLoc": {
          "line": 343,
          "column": 2,
          "position": 3023
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "}\r\n          />\r\n\r\n          <div style={{ display: 'flex', gap: 16, alignItems: 'center' }}>\r\n            <Text>最大迭代次数:</Text>\r\n            <InputNumber\r\n              min={1}\r\n              max={1000}\r\n              value={loop.maxIterations}\r\n              onChange={(maxIterations) => handleUpdateLoop(loop.id, { maxIterations })}\r\n              style={{ width: 120 }}\r\n            />\r\n          </div>\r\n\r\n          {loop.type === 'dynamic' && (\r\n            <DynamicParametersConfig\r\n              config={loop",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 512,
        "end": 528,
        "startLoc": {
          "line": 512,
          "column": 2,
          "position": 4498
        },
        "endLoc": {
          "line": 528,
          "column": 5,
          "position": 4635
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 331,
        "end": 357,
        "startLoc": {
          "line": 331,
          "column": 2,
          "position": 2916
        },
        "endLoc": {
          "line": 357,
          "column": 2,
          "position": 3177
        }
      }
    },
    {
      "format": "javascript",
      "lines": 100,
      "fragment": " }}>\r\n                  <div>\r\n                    <Text strong>跳出条件:</Text>\r\n                    <div style={{ marginTop: 8 }}>\r\n                      <Switch\r\n                        checked={loop.breakCondition?.enabled}\r\n                        onChange={(enabled) => handleUpdateLoop(loop.id, {\r\n                          breakCondition: { ...loop.breakCondition, enabled } as any\r\n                        })}\r\n                        checkedChildren=\"启用\"\r\n                        unCheckedChildren=\"禁用\"\r\n                      />\r\n                    </div>\r\n                    {loop.breakCondition?.enabled && (\r\n                      <div style={{ marginTop: 12 }}>\r\n                        <Space>\r\n                          <Select\r\n                            value={loop.breakCondition?.type}\r\n                            onChange={(type) => handleUpdateLoop(loop.id, {\r\n                              breakCondition: { ...loop.breakCondition, type } as any\r\n                            })}\r\n                            style={{ width: 150 }}\r\n                          >\r\n                            <Option value=\"element_found\">元素出现</Option>\r\n                            <Option value=\"element_not_found\">元素消失</Option>\r\n                            <Option value=\"time_exceeded\">超时</Option>\r\n                            <Option value=\"custom\">自定义</Option>\r\n                          </Select>\r\n                          <Input\r\n                            value={loop.breakCondition?.value}\r\n                            onChange={(e) => handleUpdateLoop(loop.id, {\r\n                              breakCondition: { ...loop.breakCondition, value: e.target.value } as any\r\n                            })}\r\n                            placeholder=\"条件值\"\r\n                            style={{ width: 200 }}\r\n                          />\r\n                        </Space>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Space>\r\n              </Panel>\r\n            </Collapse>\r\n          )}\r\n        </Space>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 24, background: '#f0f2f5', minHeight: '100vh' }}>\r\n      <div style={{ maxWidth: 1200, margin: '0 auto' }}>\r\n        <div style={{ marginBottom: 24 }}>\r\n          <Title level={2} style={{ margin: 0, color: '#1890ff' }}>\r\n            🔄 高级循环控制器\r\n          </Title>\r\n          <Paragraph type=\"secondary\">\r\n            构建复杂的循环逻辑，支持嵌套循环、条件判断和动态参数调整\r\n          </Paragraph>\r\n        </div>\r\n\r\n        <Alert\r\n          message=\"循环控制增强功能\"\r\n          description=\"支持多种循环类型：简单计数循环、条件循环、嵌套循环和动态参数循环。可以设置复杂的跳出条件和动态参数调整。\"\r\n          type=\"info\"\r\n          style={{ marginBottom: 24 }}\r\n          showIcon\r\n        />\r\n\r\n        <Card \r\n          title=\"快速开始\" \r\n          style={{ marginBottom: 24 }}\r\n          extra={\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusOutlined />}\r\n              onClick={() => handleAddLoop()}\r\n            >\r\n              创建自定义循环\r\n            </Button>\r\n          }\r\n        >\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Text strong>选择循环模板:</Text>\r\n          </div>\r\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))', gap: 16 }}>\r\n            {LOOP_TEMPLATES.map((template) => (\r\n              <Card\r\n                key={template.id}\r\n                hoverable\r\n                size=\"small\"\r\n                style={{ border: '1px solid #d9d9d9' }}\r\n                bodyStyle={{ padding: 12 }}\r\n                onClick={() => handleAddLoop(template)}\r\n              >\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Text strong>{template.name}</Text>\r\n                    <div style={{ marginTop: 4 }}>\r\n                      <Tag color={getTemplateTagColor",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 544,
        "end": 643,
        "startLoc": {
          "line": 544,
          "column": 7,
          "position": 4765
        },
        "endLoc": {
          "line": 643,
          "column": 20,
          "position": 5739
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 350,
        "end": 448,
        "startLoc": {
          "line": 350,
          "column": 4,
          "position": 3109
        },
        "endLoc": {
          "line": 448,
          "column": 17,
          "position": 4069
        }
      }
    },
    {
      "format": "javascript",
      "lines": 53,
      "fragment": "(template.type)}>\r\n                        {getTemplateTagText(template.type)}\r\n                      </Tag>\r\n                    </div>\r\n                  </div>\r\n                  <PlusOutlined style={{ color: '#1890ff' }} />\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </Card>\r\n\r\n        <Card \r\n          title={\r\n            <Space>\r\n              <SettingOutlined />\r\n              <span>循环配置</span>\r\n              <Text type=\"secondary\">({loops.length} 个循环)</Text>\r\n            </Space>\r\n          }\r\n        >\r\n          {loops.length === 0 ? (\r\n            <div style={{ textAlign: 'center', padding: 40 }}>\r\n              <BranchesOutlined style={{ fontSize: 48, color: '#d9d9d9', marginBottom: 16 }} />\r\n              <div>\r\n                <Text type=\"secondary\">还没有配置任何循环</Text>\r\n              </div>\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"secondary\">选择上方的模板或创建自定义循环开始</Text>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {loops.map((loop, index) => renderLoopCard(loop, index))}\r\n            </div>\r\n          )}\r\n        </Card>\r\n\r\n        <Modal\r\n          title=\"循环预览\"\r\n          open={previewVisible}\r\n          onCancel={() => setPreviewVisible(false)}\r\n          footer={[\r\n            <Button key=\"close\" onClick={() => setPreviewVisible(false)}>\r\n              关闭\r\n            </Button>\r\n          ]}\r\n          width={800}\r\n        >\r\n          {currentLoop && (\r\n            <div>\r\n              <Card title=\"循环信息\" size=\"small\" style={{ marginBottom: 16 }}>\r\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16 }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 643,
        "end": 695,
        "startLoc": {
          "line": 643,
          "column": 20,
          "position": 5740
        },
        "endLoc": {
          "line": 695,
          "column": 2,
          "position": 6228
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 448,
        "end": 500,
        "startLoc": {
          "line": 448,
          "column": 17,
          "position": 4070
        },
        "endLoc": {
          "line": 500,
          "column": 2,
          "position": 4552
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ",\r\n  Modal,\r\n  message,\r\n} from 'antd';\r\nimport ConfirmPopover from '../universal-ui/common-popover/ConfirmPopover';\r\nimport {\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  CopyOutlined,\r\n  PlayCircleOutlined,\r\n  BranchesOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { Option } = Select;\r\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 18,
        "end": 34,
        "startLoc": {
          "line": 18,
          "column": 8,
          "position": 93
        },
        "endLoc": {
          "line": 34,
          "column": 6,
          "position": 203
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 16,
        "end": 34,
        "startLoc": {
          "line": 16,
          "column": 7,
          "position": 83
        },
        "endLoc": {
          "line": 34,
          "column": 10,
          "position": 197
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": ";\r\n  };\r\n}\r\n\r\n// 预设循环模板\r\nconst LOOP_TEMPLATES: LoopConfig[] = [\r\n  {\r\n    id: 'simple_count',\r\n    type: 'simple',\r\n    name: '简单计数循环',\r\n    condition: {\r\n      type: 'count',\r\n      value: 10\r\n    },\r\n    maxIterations: 50,\r\n  },\r\n  {\r\n    id: 'wait_element',\r\n    type: 'conditional',\r\n    name: '等待元素出现',\r\n    condition: {\r\n      type: 'element',\r\n      value: 'com.example:id/loading',",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 59,
        "end": 81,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 446
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 592
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 47,
        "end": 70,
        "startLoc": {
          "line": 47,
          "column": 4,
          "position": 320
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 469
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ": React.FC = () => {\r\n  const [loops, setLoops] = useState<LoopConfig[]>([]);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [currentLoop, setCurrentLoop] = useState<LoopConfig | null>(null);\r\n\r\n  const getTemplateTagColor",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 345,
        "end": 350,
        "startLoc": {
          "line": 345,
          "column": 20,
          "position": 2845
        },
        "endLoc": {
          "line": 350,
          "column": 20,
          "position": 2936
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 95,
        "end": 100,
        "startLoc": {
          "line": 95,
          "column": 12,
          "position": 630
        },
        "endLoc": {
          "line": 100,
          "column": 14,
          "position": 721
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ";\r\n\r\n  const handleAddLoop = useCallback((template?: LoopConfig) => {\r\n    const newLoop: LoopConfig = template || {\r\n      id: `loop_${Date.now()}`,\r\n      type: 'simple',\r\n      name: '新循环',\r\n      condition: {\r\n        type: 'count',\r\n        value: 1\r\n      },\r\n      maxIterations: 10,\r\n      breakCondition: {\r\n        enabled: false,\r\n        type: 'element_found',\r\n        value: ''\r\n      },",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 368,
        "end": 384,
        "startLoc": {
          "line": 368,
          "column": 2,
          "position": 3124
        },
        "endLoc": {
          "line": 384,
          "column": 2,
          "position": 3267
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 98,
        "end": 115,
        "startLoc": {
          "line": 98,
          "column": 2,
          "position": 713
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 859
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\r\n    };\r\n    \r\n    setLoops([...loops, { ...newLoop, id: `loop_${Date.now()}` }]);\r\n  }, [loops]);\r\n\r\n  const handleRemoveLoop = useCallback((id: string) => {\r\n    setLoops(loops.filter(loop => loop.id !== id));\r\n    message.success('高级循环删除成功'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 388,
        "end": 396,
        "startLoc": {
          "line": 388,
          "column": 7,
          "position": 3294
        },
        "endLoc": {
          "line": 396,
          "column": 11,
          "position": 3399
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 114,
        "end": 122,
        "startLoc": {
          "line": 114,
          "column": 7,
          "position": 855
        },
        "endLoc": {
          "line": 122,
          "column": 9,
          "position": 960
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ");\r\n  }, [loops]);\r\n\r\n  const handleUpdateLoop = useCallback((id: string, updates: Partial<LoopConfig>) => {\r\n    setLoops(loops.map(loop => \r\n      loop.id === id ? { ...loop, ...updates } : loop\r\n    ));\r\n  }, [loops]);\r\n\r\n  const handleCloneLoop = useCallback((loop: LoopConfig) => {\r\n    const clonedLoop = {\r\n      ...loop,\r\n      id: `loop_${Date.now()}`,\r\n      name: `${loop.name} (复制)`\r\n    };\r\n    setLoops([...loops, clonedLoop]);\r\n  }, [loops]);\r\n\r\n  const handlePreviewLoop = (loop: LoopConfig) => {\r\n    setCurrentLoop(loop);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 396,
        "end": 419,
        "startLoc": {
          "line": 396,
          "column": 11,
          "position": 3400
        },
        "endLoc": {
          "line": 419,
          "column": 62,
          "position": 3646
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 122,
        "end": 145,
        "startLoc": {
          "line": 122,
          "column": 9,
          "position": 961
        },
        "endLoc": {
          "line": 145,
          "column": 6,
          "position": 1207
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "return (\r\n      <Card\r\n        key={loop.id}\r\n        style={{ marginBottom: 16 }}\r\n        title={\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Space>\r\n              <BranchesOutlined />\r\n              <span>{loop.name}</span>\r\n              <Tag color={getLoopTypeColor(loop.type)}>\r\n                {getLoopTypeName(loop.type)}\r\n              </Tag>\r\n            </Space>\r\n            <Space>\r\n              <Button\r\n                type=\"text\"\r\n                icon={<PlayCircleOutlined />}\r\n                onClick={() => handlePreviewLoop(loop)}\r\n                title=\"预览循环\"\r\n              />\r\n              <Button\r\n                type=\"text\"\r\n                icon={<CopyOutlined />}\r\n                onClick={() => handleCloneLoop(loop)}\r\n                title=\"复制循环\"\r\n              />\r\n              <ConfirmPopover\r\n                mode=\"default\"\r\n                title=\"确认删除高级循环",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 441,
        "end": 469,
        "startLoc": {
          "line": 441,
          "column": 5,
          "position": 3863
        },
        "endLoc": {
          "line": 469,
          "column": 9,
          "position": 4091
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 272,
        "end": 300,
        "startLoc": {
          "line": 272,
          "column": 5,
          "position": 2402
        },
        "endLoc": {
          "line": 300,
          "column": 7,
          "position": 2630
        }
      }
    },
    {
      "format": "tsx",
      "lines": 41,
      "fragment": "\"\r\n                onConfirm={() => handleRemoveLoop(loop.id)}\r\n                okText=\"删除\"\r\n                cancelText=\"取消\"\r\n                placement=\"topLeft\"\r\n              >\r\n                <Button\r\n                  type=\"text\"\r\n                  danger\r\n                  icon={<DeleteOutlined />}\r\n                  title=\"删除循环\"\r\n                />\r\n              </ConfirmPopover>\r\n            </Space>\r\n          </div>\r\n        }\r\n      >\r\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n          <div style={{ display: 'flex', gap: 16 }}>\r\n            <div style={{ flex: 1 }}>\r\n              <Input\r\n                value={loop.name}\r\n                onChange={(e) => handleUpdateLoop(loop.id, { name: e.target.value })}\r\n                placeholder=\"循环名称\"\r\n              />\r\n            </div>\r\n            <div style={{ width: 120 }}>\r\n              <Select\r\n                value={loop.type}\r\n                onChange={(type) => handleUpdateLoop(loop.id, { type })}\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Option value=\"simple\">简单循环</Option>\r\n                <Option value=\"conditional\">条件循环</Option>\r\n                <Option value=\"nested\">嵌套循环</Option>\r\n                <Option value=\"dynamic\">动态循环</Option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n\r\n          <",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 470,
        "end": 510,
        "startLoc": {
          "line": 470,
          "column": 24,
          "position": 4098
        },
        "endLoc": {
          "line": 510,
          "column": 2,
          "position": 4467
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 301,
        "end": 341,
        "startLoc": {
          "line": 301,
          "column": 22,
          "position": 2637
        },
        "endLoc": {
          "line": 341,
          "column": 2,
          "position": 3006
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "<div>\r\n                    <Text strong>跳出条件:</Text>\r\n                    <div style={{ marginTop: 8 }}>\r\n                      <Switch\r\n                        checked={loop.breakCondition?.enabled}\r\n                        onChange={(enabled) => handleUpdateLoop(loop.id, {\r\n                          breakCondition: { ...loop.breakCondition, enabled } as any\r\n                        })}\r\n                        checkedChildren=\"启用\"\r\n                        unCheckedChildren=\"禁用\"\r\n                      />\r\n                    </div>\r\n                    {loop.breakCondition?.enabled && (\r\n                      <div style={{ marginTop: 12 }}>\r\n                        <Space>\r\n                          <Select\r\n                            value={loop.breakCondition?.type}\r\n                            onChange={(type) => handleUpdateLoop(loop.id, {\r\n                              breakCondition: { ...loop.breakCondition, type } as any\r\n                            })}\r\n                            style={{ width: 150 }}\r\n                          >\r\n                            <Option value=\"element_found\">元素出现</Option>\r\n                            <Option value=\"element_not_found",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 545,
        "end": 568,
        "startLoc": {
          "line": 545,
          "column": 19,
          "position": 4772
        },
        "endLoc": {
          "line": 568,
          "column": 18,
          "position": 5041
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 355,
        "end": 378,
        "startLoc": {
          "line": 355,
          "column": 13,
          "position": 3152
        },
        "endLoc": {
          "line": 378,
          "column": 14,
          "position": 3421
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "</Option>\r\n                          </Select>\r\n                          <Input\r\n                            value={loop.breakCondition?.value}\r\n                            onChange={(e) => handleUpdateLoop(loop.id, {\r\n                              breakCondition: { ...loop.breakCondition, value: e.target.value } as any\r\n                            })}\r\n                            placeholder=\"条件值\"\r\n                            style={{ width: 200 }}\r\n                          />\r\n                        </Space>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 570,
        "end": 584,
        "startLoc": {
          "line": 570,
          "column": 4,
          "position": 5077
        },
        "endLoc": {
          "line": 584,
          "column": 3,
          "position": 5210
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 378,
        "end": 392,
        "startLoc": {
          "line": 378,
          "column": 3,
          "position": 3425
        },
        "endLoc": {
          "line": 392,
          "column": 2,
          "position": 3558
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ">\r\n          )}\r\n        </Space>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 24, background: '#f0f2f5', minHeight: '100vh' }}>\r\n      <div style={{ maxWidth: 1200, margin: '0 auto' }}>\r\n        <div style={{ marginBottom: 24 }}>\r\n          <Title level={2} style={{ margin: 0, color: '#1890ff' }}>\r\n            🔄 高级循环控制器\r\n          </Title>\r\n          <Paragraph type=\"secondary\">\r\n            构建复杂的循环逻辑，支持嵌套循环、条件判断和动态参数调整\r\n          </Paragraph>\r\n        </div>\r\n\r\n        <Alert\r\n          message=\"循环控制增强功能\"\r\n          description=\"支持多种循环类型：简单计数循环、条件循环、嵌套循环和动态参数循环。可以设置复杂的跳出条件和动态参数调整。",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 586,
        "end": 607,
        "startLoc": {
          "line": 586,
          "column": 9,
          "position": 5224
        },
        "endLoc": {
          "line": 607,
          "column": 53,
          "position": 5415
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 391,
        "end": 412,
        "startLoc": {
          "line": 391,
          "column": 4,
          "position": 3554
        },
        "endLoc": {
          "line": 412,
          "column": 39,
          "position": 3745
        }
      }
    },
    {
      "format": "tsx",
      "lines": 38,
      "fragment": "\"\r\n          type=\"info\"\r\n          style={{ marginBottom: 24 }}\r\n          showIcon\r\n        />\r\n\r\n        <Card \r\n          title=\"快速开始\" \r\n          style={{ marginBottom: 24 }}\r\n          extra={\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusOutlined />}\r\n              onClick={() => handleAddLoop()}\r\n            >\r\n              创建自定义循环\r\n            </Button>\r\n          }\r\n        >\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Text strong>选择循环模板:</Text>\r\n          </div>\r\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))', gap: 16 }}>\r\n            {LOOP_TEMPLATES.map((template) => (\r\n              <Card\r\n                key={template.id}\r\n                hoverable\r\n                size=\"small\"\r\n                style={{ border: '1px solid #d9d9d9' }}\r\n                bodyStyle={{ padding: 12 }}\r\n                onClick={() => handleAddLoop(template)}\r\n              >\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Text strong>{template.name}</Text>\r\n                    <div style={{ marginTop: 4 }}>\r\n                      <Tag color={getTemplateTagColor(template.type)}>\r\n                        {getTemplateTagText",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 607,
        "end": 644,
        "startLoc": {
          "line": 607,
          "column": 53,
          "position": 5416
        },
        "endLoc": {
          "line": 644,
          "column": 19,
          "position": 5751
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 412,
        "end": 449,
        "startLoc": {
          "line": 412,
          "column": 39,
          "position": 3746
        },
        "endLoc": {
          "line": 449,
          "column": 16,
          "position": 4081
        }
      }
    },
    {
      "format": "tsx",
      "lines": 33,
      "fragment": "(template.type)}\r\n                      </Tag>\r\n                    </div>\r\n                  </div>\r\n                  <PlusOutlined style={{ color: '#1890ff' }} />\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </Card>\r\n\r\n        <Card \r\n          title={\r\n            <Space>\r\n              <SettingOutlined />\r\n              <span>循环配置</span>\r\n              <Text type=\"secondary\">({loops.length} 个循环)</Text>\r\n            </Space>\r\n          }\r\n        >\r\n          {loops.length === 0 ? (\r\n            <div style={{ textAlign: 'center', padding: 40 }}>\r\n              <BranchesOutlined style={{ fontSize: 48, color: '#d9d9d9', marginBottom: 16 }} />\r\n              <div>\r\n                <Text type=\"secondary\">还没有配置任何循环</Text>\r\n              </div>\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"secondary\">选择上方的模板或创建自定义循环开始</Text>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {loops.map((loop,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 644,
        "end": 676,
        "startLoc": {
          "line": 644,
          "column": 19,
          "position": 5752
        },
        "endLoc": {
          "line": 676,
          "column": 2,
          "position": 6047
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 449,
        "end": 481,
        "startLoc": {
          "line": 449,
          "column": 16,
          "position": 4082
        },
        "endLoc": {
          "line": 481,
          "column": 2,
          "position": 4377
        }
      }
    },
    {
      "format": "tsx",
      "lines": 36,
      "fragment": "))}\r\n            </div>\r\n          )}\r\n        </Card>\r\n\r\n        <Modal\r\n          title=\"循环预览\"\r\n          open={previewVisible}\r\n          onCancel={() => setPreviewVisible(false)}\r\n          footer={[\r\n            <Button key=\"close\" onClick={() => setPreviewVisible(false)}>\r\n              关闭\r\n            </Button>\r\n          ]}\r\n          width={800}\r\n        >\r\n          {currentLoop && (\r\n            <div>\r\n              <Card title=\"循环信息\" size=\"small\" style={{ marginBottom: 16 }}>\r\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 16 }}>\r\n                  <div>\r\n                    <Text strong>名称:</Text> {currentLoop.name}\r\n                  </div>\r\n                  <div>\r\n                    <Text strong>类型:</Text> <Tag>{currentLoop.type}</Tag>\r\n                  </div>\r\n                  <div>\r\n                    <Text strong>条件:</Text> {currentLoop.condition.type} = {currentLoop.condition.value}\r\n                  </div>\r\n                  <div>\r\n                    <Text strong>最大次数:</Text> {currentLoop.maxIterations}\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n              \r\n              {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 676,
        "end": 711,
        "startLoc": {
          "line": 676,
          "column": 6,
          "position": 6060
        },
        "endLoc": {
          "line": 711,
          "column": 2,
          "position": 6389
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 481,
        "end": 516,
        "startLoc": {
          "line": 481,
          "column": 5,
          "position": 4384
        },
        "endLoc": {
          "line": 516,
          "column": 2,
          "position": 4713
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "<Card title=\"执行预览\" size=\"small\">\r\n                <Text type=\"secondary\">\r\n                  此循环将执行 {currentLoop.condition.value} 次，每次迭代最多等待 {currentLoop.maxIterations} 步。\r\n                  {currentLoop.breakCondition?.enabled && ` 当 ${currentLoop.breakCondition.type} 时将跳出循环。`}\r\n                </Text>\r\n              </Card>\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvancedLoopBuilder",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\loop-control\\AdvancedLoopBuilder.tsx",
        "start": 723,
        "end": 737,
        "startLoc": {
          "line": 723,
          "column": 15,
          "position": 6539
        },
        "endLoc": {
          "line": 737,
          "column": 20,
          "position": 6669
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 516,
        "end": 530,
        "startLoc": {
          "line": 516,
          "column": 15,
          "position": 4713
        },
        "endLoc": {
          "line": 530,
          "column": 12,
          "position": 4843
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "</div>\r\n\r\n          <div className=\"relative z-10\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-3 h-3 bg-white/80 rounded-full animate-pulse\"></div>\r\n                <span className=\"text-white/90 font-medium text-sm\">Account",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\layout\\Sidebar.tsx",
        "start": 96,
        "end": 102,
        "startLoc": {
          "line": 96,
          "column": 11,
          "position": 748
        },
        "endLoc": {
          "line": 102,
          "column": 8,
          "position": 816
        }
      },
      "secondFile": {
        "name": "src\\components\\layout\\Sidebar_fixed.tsx",
        "start": 82,
        "end": 88,
        "startLoc": {
          "line": 82,
          "column": 2,
          "position": 621
        },
        "endLoc": {
          "line": 88,
          "column": 5,
          "position": 689
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "</span>\r\n              </div>\r\n              <div className=\"w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center backdrop-blur-sm\">\r\n                <span className=\"text-white text-lg\">💰</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-white font-bold text-2xl mb-1\">\r\n              ¥{balance.toLocaleString()}\r\n            </div>\r\n            <div className=\"text-white/80 text-xs font-medium",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\layout\\Sidebar.tsx",
        "start": 102,
        "end": 111,
        "startLoc": {
          "line": 102,
          "column": 8,
          "position": 819
        },
        "endLoc": {
          "line": 111,
          "column": 34,
          "position": 906
        }
      },
      "secondFile": {
        "name": "src\\components\\layout\\Sidebar_fixed.tsx",
        "start": 88,
        "end": 97,
        "startLoc": {
          "line": 88,
          "column": 5,
          "position": 690
        },
        "endLoc": {
          "line": 97,
          "column": 40,
          "position": 777
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "}\r\n      <nav className=\"flex-grow px-4 pb-4\">\r\n        <div className=\"space-y-2\">\r\n          {navigation.map((item) => {\r\n            const IconComponent = item.icon;\r\n            const isActive = currentPage === item.id;\r\n\r\n            return (\r\n              <button\r\n                key={item.id}\r\n                onClick={() => onPageChange(item.id)}\r\n                className={`w-full text-left group flex items-center p-4 text-sm font-medium rounded-xl transition-all duration-300 transform hover:scale-[1.01] relative overflow-hidden ${\r\n                  isActive\r\n                    ? 'glass-card shadow-lg border'\r\n                    : 'hover:bg-white/5'\r\n                }`}\r\n                ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\layout\\Sidebar.tsx",
        "start": 118,
        "end": 134,
        "startLoc": {
          "line": 118,
          "column": 19,
          "position": 956
        },
        "endLoc": {
          "line": 134,
          "column": 17,
          "position": 1081
        }
      },
      "secondFile": {
        "name": "src\\components\\layout\\Sidebar_fixed.tsx",
        "start": 104,
        "end": 120,
        "startLoc": {
          "line": 104,
          "column": 11,
          "position": 819
        },
        "endLoc": {
          "line": 120,
          "column": 15,
          "position": 944
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ": React.FC<{ className?: string }> = ({ className }) => (\r\n  <svg\r\n    className={className}\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth={2}\r\n  >\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\layout\\PageShell.tsx",
        "start": 163,
        "end": 171,
        "startLoc": {
          "line": 163,
          "column": 14,
          "position": 979
        },
        "endLoc": {
          "line": 171,
          "column": 16,
          "position": 1067
        }
      },
      "secondFile": {
        "name": "src\\components\\ui\\SmartDialog.tsx",
        "start": 242,
        "end": 250,
        "startLoc": {
          "line": 242,
          "column": 10,
          "position": 1493
        },
        "endLoc": {
          "line": 250,
          "column": 21,
          "position": 1581
        }
      }
    },
    {
      "format": "javascript",
      "lines": 7,
      "fragment": ", background: '#f0f2f5', minHeight: '100vh' }}>\r\n      <div style={{ maxWidth: 1200, margin: '0 auto' }}>\r\n        <div style={{ marginBottom: 24 }}>\r\n          <Title level={2} style={{ margin: 0, color: '#1890ff' }}>🎯 流程化脚本构建器</Title>\r\n          <Paragraph type=\"secondary\">选择应用模板，按步骤构建自动化流程，支持条件判断和智能导航</Paragraph>\r\n        </div>\r\n        <Row gutter={24",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\flow\\FlowScriptBuilder.tsx",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 7,
          "position": 141
        },
        "endLoc": {
          "line": 20,
          "column": 3,
          "position": 262
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 399,
        "end": 414,
        "startLoc": {
          "line": 399,
          "column": 3,
          "position": 3604
        },
        "endLoc": {
          "line": 414,
          "column": 2,
          "position": 3757
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ", null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `execution_report_",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 320,
        "end": 325,
        "startLoc": {
          "line": 320,
          "column": 7,
          "position": 2903
        },
        "endLoc": {
          "line": 325,
          "column": 19,
          "position": 2991
        }
      },
      "secondFile": {
        "name": "src\\components\\feature-modules\\theme-system\\components\\ThemeConfigPanel.tsx",
        "start": 122,
        "end": 127,
        "startLoc": {
          "line": 122,
          "column": 12,
          "position": 1020
        },
        "endLoc": {
          "line": 127,
          "column": 15,
          "position": 1108
        }
      }
    },
    {
      "format": "javascript",
      "lines": 57,
      "fragment": "={{ padding: 24, background: '#f0f2f5', minHeight: '100vh' }}>\r\n      <div style={{ maxWidth: 1400, margin: '0 auto' }}>\r\n        {/* 头部信息 */}\r\n        <Card style={{ marginBottom: 16 }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <div>\r\n              <Title level={3} style={{ margin: 0 }}>\r\n                📊 脚本执行监控\r\n              </Title>\r\n              <Text type=\"secondary\">\r\n                {script?.name || '未选择脚本'} | 执行ID: {executionId || '未开始'}\r\n              </Text>\r\n            </div>\r\n            <Space>\r\n              <Button onClick={onBack}>返回</Button>\r\n              <Button \r\n                icon={<SettingOutlined />} \r\n                onClick={() => setShowSettings(true)}\r\n              >\r\n                设置\r\n              </Button>\r\n              <Button \r\n                icon={<DownloadOutlined />} \r\n                onClick={exportReport}\r\n                disabled={executionStatus === ExecutionStatus.IDLE}\r\n              >\r\n                导出报告\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        </Card>\r\n\r\n        <Row gutter={16}>\r\n          {/* 左侧控制面板 */}\r\n          <Col span={8}>\r\n            {/* 执行控制 */}\r\n            <Card title=\"执行控制\" style={{ marginBottom: 16 }}>\r\n              <div style={{ textAlign: 'center', marginBottom: 16 }}>\r\n                <Badge \r\n                  status={executionStatus === ExecutionStatus.RUNNING ? 'processing' : 'default'}\r\n                  text={\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', color: getStatusColor(executionStatus) }}>\r\n                      {executionStatus === ExecutionStatus.IDLE ? '待执行' :\r\n                       executionStatus === ExecutionStatus.RUNNING ? '执行中' :\r\n                       executionStatus === ExecutionStatus.PAUSED ? '已暂停' :\r\n                       executionStatus === ExecutionStatus.COMPLETED ? '已完成' :\r\n                       executionStatus === ExecutionStatus.FAILED ? '执行失败' : '已停止'}\r\n                    </Text>\r\n                  }\r\n                />\r\n              </div>\r\n              \r\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                {executionStatus === ExecutionStatus.IDLE && (\r\n                  <Button \r\n                    type=\"primary\" \r\n                    icon={<",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 339,
        "end": 395,
        "startLoc": {
          "line": 339,
          "column": 6,
          "position": 3144
        },
        "endLoc": {
          "line": 395,
          "column": 2,
          "position": 3755
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 406,
        "end": 460,
        "startLoc": {
          "line": 406,
          "column": 6,
          "position": 3497
        },
        "endLoc": {
          "line": 460,
          "column": 2,
          "position": 4046
        }
      }
    },
    {
      "format": "javascript",
      "lines": 83,
      "fragment": "}\r\n                    block\r\n                  >\r\n                    重新执行\r\n                  </Button>\r\n                )}\r\n              </Space>\r\n            </Card>\r\n\r\n            {/* 执行统计 */}\r\n            <Card title=\"执行统计\" style={{ marginBottom: 16 }}>\r\n              <Row gutter={[8, 8]}>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#1890ff' }}>\r\n                      {stats.totalSteps}\r\n                    </div>\r\n                    <Text type=\"secondary\">总步骤</Text>\r\n                  </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#52c41a' }}>\r\n                      {stats.completedSteps}\r\n                    </div>\r\n                    <Text type=\"secondary\">已完成</Text>\r\n                  </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#ff4d4f' }}>\r\n                      {stats.failedSteps}\r\n                    </div>\r\n                    <Text type=\"secondary\">失败</Text>\r\n                  </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#722ed1' }}>\r\n                      {Math.round(stats.successRate)}%\r\n                    </div>\r\n                    <Text type=\"secondary\">成功率</Text>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n\r\n            {/* 快捷操作 */}\r\n            <Card title=\"快捷操作\">\r\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                <Button \r\n                  icon={<EyeOutlined />}\r\n                  onClick={() => setShowLogs(true)}\r\n                  block\r\n                >\r\n                  查看详细日志\r\n                </Button>\r\n                <Button \r\n                  icon={<BugOutlined />}\r\n                  disabled={logs.filter(l => l.level === 'error').length === 0}\r\n                  block\r\n                >\r\n                  查看错误信息\r\n                </Button>\r\n                <Button \r\n                  icon={<ThunderboltOutlined />}\r\n                  disabled={executionStatus === ExecutionStatus.IDLE}\r\n                  block\r\n                >\r\n                  性能分析\r\n                </Button>\r\n              </Space>\r\n            </Card>\r\n          </Col>\r\n\r\n          {/* 右侧执行详情 */}\r\n          <Col span={16}>\r\n            {/* 整体进度 */}\r\n            <Card title=\"执行进度\" style={{ marginBottom: 16 }}>\r\n              <Progress \r\n                percent={getProgress()} \r\n                status={\r\n                  executionStatus ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 451,
        "end": 533,
        "startLoc": {
          "line": 451,
          "column": 17,
          "position": 4072
        },
        "endLoc": {
          "line": 533,
          "column": 35,
          "position": 4831
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 454,
        "end": 531,
        "startLoc": {
          "line": 454,
          "column": 2,
          "position": 4001
        },
        "endLoc": {
          "line": 531,
          "column": 18,
          "position": 4750
        }
      }
    },
    {
      "format": "javascript",
      "lines": 119,
      "fragment": "}\r\n              >\r\n                {stepStatuses.map((step, index) => (\r\n                  <Step\r\n                    key={step.id}\r\n                    title={step.name}\r\n                    description={\r\n                      <div>\r\n                        {step.duration && (\r\n                          <Text type=\"secondary\">\r\n                            耗时: {step.duration}ms\r\n                          </Text>\r\n                        )}\r\n                        {step.error && (\r\n                          <div style={{ color: '#ff4d4f', marginTop: 4 }}>\r\n                            错误: {step.error}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    }\r\n                    status={step.status}\r\n                    icon={\r\n                      step.status === 'error' ? <ExclamationCircleOutlined /> :\r\n                      step.status === 'finish' ? <CheckCircleOutlined /> :\r\n                      step.status === 'process' ? <ClockCircleOutlined /> : undefined\r\n                    }\r\n                  />\r\n                ))}\r\n              </Steps>\r\n            </Card>\r\n\r\n            {/* 实时日志 */}\r\n            <Card \r\n              title=\"实时日志\" \r\n              extra={\r\n                <Space>\r\n                  <Switch \r\n                    size=\"small\"\r\n                    checked={autoScroll}\r\n                    onChange={setAutoScroll}\r\n                  />\r\n                  <Text type=\"secondary\">自动滚动</Text>\r\n                </Space>\r\n              }\r\n            >\r\n              <div \r\n                style={{ \r\n                  height: 300, \r\n                  overflow: 'auto',\r\n                  background: '#f5f5f5',\r\n                  padding: 8,\r\n                  borderRadius: 4\r\n                }}\r\n              >\r\n                {logs.slice(-50).map(log => (\r\n                  <div \r\n                    key={log.id}\r\n                    style={{ \r\n                      marginBottom: 4,\r\n                      fontSize: 12,\r\n                      fontFamily: 'monospace'\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: '#666' }}>\r\n                      [{log.timestamp.toLocaleTimeString()}]\r\n                    </Text>\r\n                    {' '}\r\n                    <Tag \r\n                      color={getLogLevelColor(log.level)}\r\n                      style={{ margin: '0 4px' }}\r\n                    >\r\n                      {log.level.toUpperCase()}\r\n                    </Tag>\r\n                    <Text>{log.message}</Text>\r\n                  </div>\r\n                ))}\r\n                {logs.length === 0 && (\r\n                  <Text type=\"secondary\">暂无日志</Text>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 设置对话框 */}\r\n        <Modal\r\n          title=\"执行设置\"\r\n          open={showSettings}\r\n          onCancel={() => setShowSettings(false)}\r\n          footer={[\r\n            <Button key=\"cancel\" onClick={() => setShowSettings(false)}>\r\n              取消\r\n            </Button>,\r\n            <Button key=\"save\" type=\"primary\" onClick={() => setShowSettings(false)}>\r\n              保存设置\r\n            </Button>\r\n          ]}\r\n        >\r\n          <div>\r\n            <Paragraph>配置脚本执行的相关设置</Paragraph>\r\n            {/* 这里可以添加各种执行设置选项 */}\r\n          </div>\r\n        </Modal>\r\n\r\n        {/* 详细日志抽屉 */}\r\n        <Drawer\r\n          title=\"详细执行日志\"\r\n          placement=\"right\"\r\n          width={600}\r\n          open={showLogs}\r\n          onClose={() => setShowLogs(false)}\r\n        >\r\n          <Timeline>\r\n            {logs.map(log => (\r\n              <Timeline.Item\r\n                key={log.id}\r\n                color={getLogLevelColor(log.level)}\r\n                dot={\r\n                  log",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 553,
        "end": 671,
        "startLoc": {
          "line": 553,
          "column": 17,
          "position": 5032
        },
        "endLoc": {
          "line": 671,
          "column": 22,
          "position": 5895
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 546,
        "end": 666,
        "startLoc": {
          "line": 546,
          "column": 2,
          "position": 4909
        },
        "endLoc": {
          "line": 666,
          "column": 16,
          "position": 5785
        }
      }
    },
    {
      "format": "tsx",
      "lines": 91,
      "fragment": "// module: ui | layer: ui | role: component\r\n// summary: UI 组件\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Space,\r\n  Typography,\r\n  Progress,\r\n  Steps,\r\n  Tag,\r\n  Modal,\r\n  Badge,\r\n  Timeline,\r\n  Drawer,\r\n  Switch,\r\n} from 'antd';\r\nimport {\r\n  PlayCircleOutlined,\r\n  PauseCircleOutlined,\r\n  StopOutlined,\r\n  ReloadOutlined,\r\n  SettingOutlined,\r\n  EyeOutlined,\r\n  ExclamationCircleOutlined,\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  BugOutlined,\r\n  ThunderboltOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\nimport { invoke } from '@tauri-apps/api/core';\r\n\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { Step } = Steps;\r\n\r\n// 执行状态枚举\r\nenum ExecutionStatus {\r\n  IDLE = 'idle',\r\n  RUNNING = 'running',\r\n  PAUSED = 'paused',\r\n  COMPLETED = 'completed',\r\n  FAILED = 'failed',\r\n  STOPPED = 'stopped'\r\n}\r\n\r\n// 步骤状态\r\ninterface StepStatus {\r\n  id: string;\r\n  name: string;\r\n  status: 'wait' | 'process' | 'finish' | 'error';\r\n  startTime?: Date;\r\n  endTime?: Date;\r\n  duration?: number;\r\n  error?: string;\r\n  logs: LogEntry[];\r\n}\r\n\r\n// 日志条目\r\ninterface LogEntry {\r\n  id: string;\r\n  timestamp: Date;\r\n  level: 'info' | 'warn' | 'error' | 'debug';\r\n  message: string;\r\n  stepId?: string;\r\n  data?: any;\r\n}\r\n\r\n// 执行统计\r\ninterface ExecutionStats {\r\n  totalSteps: number;\r\n  completedSteps: number;\r\n  failedSteps: number;\r\n  totalDuration: number;\r\n  averageStepTime: number;\r\n  successRate: number;\r\n}\r\n\r\n// 脚本信息\r\ninterface ScriptInfo {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  steps: any[];\r\n  device?: string;\r\n}\r\n\r\n// 执行监控组件",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 2,
        "end": 92,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 92,
          "column": 10,
          "position": 602
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 2,
        "end": 92,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 92,
          "column": 8,
          "position": 602
        }
      }
    },
    {
      "format": "tsx",
      "lines": 61,
      "fragment": "interface ScriptExecutionMonitorProps {\r\n  script?: ScriptInfo;\r\n  onBack?: () => void;\r\n}\r\n\r\nconst ScriptExecutionMonitor: React.FC<ScriptExecutionMonitorProps> = ({ script, onBack }) => {\r\n  const [executionStatus, setExecutionStatus] = useState<ExecutionStatus>(ExecutionStatus.IDLE);\r\n  const [stepStatuses, setStepStatuses] = useState<StepStatus[]>([]);\r\n  const [logs, setLogs] = useState<LogEntry[]>([]);\r\n  const [currentStepIndex, setCurrentStepIndex] = useState<number>(-1);\r\n  const [stats, setStats] = useState<ExecutionStats>({\r\n    totalSteps: 0,\r\n    completedSteps: 0,\r\n    failedSteps: 0,\r\n    totalDuration: 0,\r\n    averageStepTime: 0,\r\n    successRate: 0\r\n  });\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [showLogs, setShowLogs] = useState(false);\r\n  const [autoScroll, setAutoScroll] = useState(true);\r\n  const [executionId, setExecutionId] = useState<string>('');\r\n\r\n  // 初始化步骤状态\r\n  useEffect(() => {\r\n    if (script?.steps) {\r\n      const initialSteps: StepStatus[] = script.steps.map((step, index) => ({\r\n        id: `step_${index}`,\r\n        name: step.name || `步骤 ${index + 1}`,\r\n        status: 'wait',\r\n        logs: []\r\n      }));\r\n      setStepStatuses(initialSteps);\r\n      setStats(prev => ({ ...prev, totalSteps: script.steps.length }));\r\n    }\r\n  }, [script]);\r\n\r\n  // 添加日志\r\n  const addLog = (level: LogEntry['level'], message: string, stepId?: string, data?: any) => {\r\n    const logEntry: LogEntry = {\r\n      id: `log_${Date.now()}_${Math.random()}`,\r\n      timestamp: new Date(),\r\n      level,\r\n      message,\r\n      stepId,\r\n      data\r\n    };\r\n    \r\n    setLogs(prev => [...prev, logEntry]);\r\n    \r\n    // 更新步骤日志\r\n    if (stepId) {\r\n      setStepStatuses(prev => prev.map(step => \r\n        step.id === stepId \r\n          ? { ...step, logs: [...step.logs, logEntry] }\r\n          : step\r\n      ));\r\n    }\r\n  };\r\n\r\n  // 更新步骤状态",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 93,
        "end": 153,
        "startLoc": {
          "line": 93,
          "column": 1,
          "position": 605
        },
        "endLoc": {
          "line": 153,
          "column": 10,
          "position": 1320
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 148,
        "end": 208,
        "startLoc": {
          "line": 148,
          "column": 1,
          "position": 1167
        },
        "endLoc": {
          "line": 208,
          "column": 8,
          "position": 1882
        }
      }
    },
    {
      "format": "tsx",
      "lines": 105,
      "fragment": ");\r\n    }\r\n  };\r\n\r\n  // 开始执行\r\n  const startExecution = async () => {\r\n    if (!script) return;\r\n\r\n    try {\r\n      setExecutionStatus(ExecutionStatus.RUNNING);\r\n      setCurrentStepIndex(0);\r\n      \r\n      const execId = `exec_${Date.now()}`;\r\n      setExecutionId(execId);\r\n      \r\n      addLog('info', `开始执行脚本: ${script.name}`);\r\n      addLog('info', `执行ID: ${execId}`);\r\n      addLog('info', `总步骤数: ${script.steps.length}`);\r\n\r\n      // 调用后端执行脚本\r\n      const result = await invoke('execute_script_with_monitoring', {\r\n        script: {\r\n          id: script.id,\r\n          name: script.name,\r\n          steps: script.steps\r\n        },\r\n        executionId: execId\r\n      });\r\n\r\n      addLog('info', '脚本执行启动成功', undefined, result);\r\n      \r\n    } catch (error) {\r\n      console.error('启动执行失败:', error);\r\n      addLog('error', `启动执行失败: ${error}`);\r\n      setExecutionStatus(ExecutionStatus.FAILED);\r\n    }\r\n  };\r\n\r\n  // 暂停执行\r\n  const pauseExecution = async () => {\r\n    try {\r\n      setExecutionStatus(ExecutionStatus.PAUSED);\r\n      addLog('warn', '暂停脚本执行');\r\n      \r\n      await invoke('pause_script_execution', { executionId });\r\n    } catch (error) {\r\n      console.error('暂停执行失败:', error);\r\n      addLog('error', `暂停执行失败: ${error}`);\r\n    }\r\n  };\r\n\r\n  // 恢复执行\r\n  const resumeExecution = async () => {\r\n    try {\r\n      setExecutionStatus(ExecutionStatus.RUNNING);\r\n      addLog('info', '恢复脚本执行');\r\n      \r\n      await invoke('resume_script_execution', { executionId });\r\n    } catch (error) {\r\n      console.error('恢复执行失败:', error);\r\n      addLog('error', `恢复执行失败: ${error}`);\r\n    }\r\n  };\r\n\r\n  // 停止执行\r\n  const stopExecution = async () => {\r\n    try {\r\n      setExecutionStatus(ExecutionStatus.STOPPED);\r\n      addLog('warn', '停止脚本执行');\r\n      \r\n      await invoke('stop_script_execution', { executionId });\r\n    } catch (error) {\r\n      console.error('停止执行失败:', error);\r\n      addLog('error', `停止执行失败: ${error}`);\r\n    }\r\n  };\r\n\r\n  // 重新执行\r\n  const restartExecution = () => {\r\n    // 重置状态\r\n    setExecutionStatus(ExecutionStatus.IDLE);\r\n    setCurrentStepIndex(-1);\r\n    setLogs([]);\r\n    setStepStatuses(prev => prev.map(step => ({\r\n      ...step,\r\n      status: 'wait',\r\n      startTime: undefined,\r\n      endTime: undefined,\r\n      duration: undefined,\r\n      error: undefined,\r\n      logs: []\r\n    })));\r\n    \r\n    // 重新开始\r\n    setTimeout(() => startExecution(), 100);\r\n  };\r\n\r\n  // 计算进度\r\n  const getProgress = () => {\r\n    if (stepStatuses.length === 0) return 0;\r\n    const completed = stepStatuses.filter(s => s.status === 'finish').length;\r\n    return Math.round((completed / stepStatuses.length) * 100);\r\n  };\r\n\r\n  // 获取状态颜色",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 189,
        "end": 293,
        "startLoc": {
          "line": 189,
          "column": 7,
          "position": 1745
        },
        "endLoc": {
          "line": 293,
          "column": 10,
          "position": 2675
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 204,
        "end": 308,
        "startLoc": {
          "line": 204,
          "column": 2,
          "position": 1866
        },
        "endLoc": {
          "line": 308,
          "column": 10,
          "position": 2796
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "};\r\n\r\n  // 导出执行报告\r\n  const exportReport = () => {\r\n    const report = {\r\n      script: script?.name,\r\n      executionId,\r\n      status: executionStatus,\r\n      stats,\r\n      steps: stepStatuses,\r\n      logs: logs,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const dataStr = JSON.stringify(report, null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `execution_report_${executionId}.json`;\r\n    link.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // 渲染日志级别颜色",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 303,
        "end": 327,
        "startLoc": {
          "line": 303,
          "column": 3,
          "position": 2792
        },
        "endLoc": {
          "line": 327,
          "column": 12,
          "position": 3029
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 306,
        "end": 330,
        "startLoc": {
          "line": 306,
          "column": 3,
          "position": 2789
        },
        "endLoc": {
          "line": 330,
          "column": 10,
          "position": 3026
        }
      }
    },
    {
      "format": "tsx",
      "lines": 46,
      "fragment": "};\r\n\r\n  return (\r\n    <div style={{ padding: 24, background: '#f0f2f5', minHeight: '100vh' }}>\r\n      <div style={{ maxWidth: 1400, margin: '0 auto' }}>\r\n        {/* 头部信息 */}\r\n        <Card style={{ marginBottom: 16 }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <div>\r\n              <Title level={3} style={{ margin: 0 }}>\r\n                📊 脚本执行监控\r\n              </Title>\r\n              <Text type=\"secondary\">\r\n                {script?.name || '未选择脚本'} | 执行ID: {executionId || '未开始'}\r\n              </Text>\r\n            </div>\r\n            <Space>\r\n              <Button onClick={onBack}>返回</Button>\r\n              <Button \r\n                icon={<SettingOutlined />} \r\n                onClick={() => setShowSettings(true)}\r\n              >\r\n                设置\r\n              </Button>\r\n              <Button \r\n                icon={<DownloadOutlined />} \r\n                onClick={exportReport}\r\n                disabled={executionStatus === ExecutionStatus.IDLE}\r\n              >\r\n                导出报告\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        </Card>\r\n\r\n        <Row gutter={16}>\r\n          {/* 左侧控制面板 */}\r\n          <Col span={8}>\r\n            {/* 执行控制 */}\r\n            <Card title=\"执行控制\" style={{ marginBottom: 16 }}>\r\n              <div style={{ textAlign: 'center', marginBottom: 16 }}>\r\n                <Badge \r\n                  status={executionStatus === ExecutionStatus.RUNNING ? 'processing' : 'default'}\r\n                  text={\r\n                    <Text style={{ fontSize: 16, fontWeight: 'bold', color: getStatusColor(executionStatus) }}>\r\n                      {executionStatus",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 336,
        "end": 381,
        "startLoc": {
          "line": 336,
          "column": 3,
          "position": 3127
        },
        "endLoc": {
          "line": 381,
          "column": 16,
          "position": 3598
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 403,
        "end": 448,
        "startLoc": {
          "line": 403,
          "column": 3,
          "position": 3480
        },
        "endLoc": {
          "line": 448,
          "column": 14,
          "position": 3951
        }
      }
    },
    {
      "format": "tsx",
      "lines": 100,
      "fragment": ")}\r\n              </Space>\r\n            </Card>\r\n\r\n            {/* 执行统计 */}\r\n            <Card title=\"执行统计\" style={{ marginBottom: 16 }}>\r\n              <Row gutter={[8, 8]}>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#1890ff' }}>\r\n                      {stats.totalSteps}\r\n                    </div>\r\n                    <Text type=\"secondary\">总步骤</Text>\r\n                  </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#52c41a' }}>\r\n                      {stats.completedSteps}\r\n                    </div>\r\n                    <Text type=\"secondary\">已完成</Text>\r\n                  </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#ff4d4f' }}>\r\n                      {stats.failedSteps}\r\n                    </div>\r\n                    <Text type=\"secondary\">失败</Text>\r\n                  </div>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <div style={{ fontSize: 24, fontWeight: 'bold', color: '#722ed1' }}>\r\n                      {Math.round(stats.successRate)}%\r\n                    </div>\r\n                    <Text type=\"secondary\">成功率</Text>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n\r\n            {/* 快捷操作 */}\r\n            <Card title=\"快捷操作\">\r\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                <Button \r\n                  icon={<EyeOutlined />}\r\n                  onClick={() => setShowLogs(true)}\r\n                  block\r\n                >\r\n                  查看详细日志\r\n                </Button>\r\n                <Button \r\n                  icon={<BugOutlined />}\r\n                  disabled={logs.filter(l => l.level === 'error').length === 0}\r\n                  block\r\n                >\r\n                  查看错误信息\r\n                </Button>\r\n                <Button \r\n                  icon={<ThunderboltOutlined />}\r\n                  disabled={executionStatus === ExecutionStatus.IDLE}\r\n                  block\r\n                >\r\n                  性能分析\r\n                </Button>\r\n              </Space>\r\n            </Card>\r\n          </Col>\r\n\r\n          {/* 右侧执行详情 */}\r\n          <Col span={16}>\r\n            {/* 整体进度 */}\r\n            <Card title=\"执行进度\" style={{ marginBottom: 16 }}>\r\n              <Progress \r\n                percent={getProgress()} \r\n                status={\r\n                  executionStatus === ExecutionStatus.FAILED ? 'exception' :\r\n                  executionStatus === ExecutionStatus.COMPLETED ? 'success' : 'active'\r\n                }\r\n                strokeColor={getStatusColor(executionStatus)}\r\n              />\r\n              <div style={{ marginTop: 8, textAlign: 'center' }}>\r\n                <Text type=\"secondary\">\r\n                  当前步骤: {currentStepIndex >= 0 ? currentStepIndex + 1 : 0} / {stepStatuses.length}\r\n                </Text>\r\n              </div>\r\n            </Card>\r\n\r\n            {/* 步骤详情 */}\r\n            <Card title=\"执行步骤\" style={{ marginBottom: 16 }}>\r\n              <Steps \r\n                direction=\"vertical\" \r\n                current={currentStepIndex}\r\n                status={\r\n                  executionStatus === ExecutionStatus.FAILED ? 'error' :\r\n                  executionStatus === ExecutionStatus.COMPLETED ? 'finish' : 'process'\r\n                }\r\n              >\r\n                {stepStatuses.map((step,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 456,
        "end": 555,
        "startLoc": {
          "line": 456,
          "column": 17,
          "position": 4090
        },
        "endLoc": {
          "line": 555,
          "column": 2,
          "position": 5045
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 455,
        "end": 548,
        "startLoc": {
          "line": 455,
          "column": 2,
          "position": 4009
        },
        "endLoc": {
          "line": 548,
          "column": 2,
          "position": 4922
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ") => (\r\n                  <Step\r\n                    key={step.id}\r\n                    title={step.name}\r\n                    description={\r\n                      <div>\r\n                        {step.duration && (\r\n                          <Text type=\"secondary\">\r\n                            耗时: {step.duration}ms\r\n                          </Text>\r\n                        )}\r\n                        {step.error && (\r\n                          <div style={{ color: '#ff4d4f', marginTop: 4 }}>\r\n                            错误: {step.error}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    }\r\n                    status={step.status}\r\n                    icon={\r\n                      step",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 555,
        "end": 575,
        "startLoc": {
          "line": 555,
          "column": 6,
          "position": 5048
        },
        "endLoc": {
          "line": 575,
          "column": 5,
          "position": 5221
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 548,
        "end": 567,
        "startLoc": {
          "line": 548,
          "column": 5,
          "position": 4922
        },
        "endLoc": {
          "line": 567,
          "column": 12,
          "position": 5092
        }
      }
    },
    {
      "format": "tsx",
      "lines": 76,
      "fragment": "}\r\n                  />\r\n                ))}\r\n              </Steps>\r\n            </Card>\r\n\r\n            {/* 实时日志 */}\r\n            <Card \r\n              title=\"实时日志\" \r\n              extra={\r\n                <Space>\r\n                  <Switch \r\n                    size=\"small\"\r\n                    checked={autoScroll}\r\n                    onChange={setAutoScroll}\r\n                  />\r\n                  <Text type=\"secondary\">自动滚动</Text>\r\n                </Space>\r\n              }\r\n            >\r\n              <div \r\n                style={{ \r\n                  height: 300, \r\n                  overflow: 'auto',\r\n                  background: '#f5f5f5',\r\n                  padding: 8,\r\n                  borderRadius: 4\r\n                }}\r\n              >\r\n                {logs.slice(-50).map(log => (\r\n                  <div \r\n                    key={log.id}\r\n                    style={{ \r\n                      marginBottom: 4,\r\n                      fontSize: 12,\r\n                      fontFamily: 'monospace'\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: '#666' }}>\r\n                      [{log.timestamp.toLocaleTimeString()}]\r\n                    </Text>\r\n                    {' '}\r\n                    <Tag \r\n                      color={getLogLevelColor(log.level)}\r\n                      style={{ margin: '0 4px' }}\r\n                    >\r\n                      {log.level.toUpperCase()}\r\n                    </Tag>\r\n                    <Text>{log.message}</Text>\r\n                  </div>\r\n                ))}\r\n                {logs.length === 0 && (\r\n                  <Text type=\"secondary\">暂无日志</Text>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 设置对话框 */}\r\n        <Modal\r\n          title=\"执行设置\"\r\n          open={showSettings}\r\n          onCancel={() => setShowSettings(false)}\r\n          footer={[\r\n            <Button key=\"cancel\" onClick={() => setShowSettings(false)}>\r\n              取消\r\n            </Button>,\r\n            <Button key=\"save\" type=\"primary\" onClick={() => setShowSettings(false)}>\r\n              保存设置\r\n            </Button>\r\n          ]}\r\n        >\r\n          <div>\r\n            <Paragraph>配置脚本执行的相关设置</Paragraph>\r\n            {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 578,
        "end": 653,
        "startLoc": {
          "line": 578,
          "column": 21,
          "position": 5280
        },
        "endLoc": {
          "line": 653,
          "column": 2,
          "position": 5780
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 567,
        "end": 642,
        "startLoc": {
          "line": 567,
          "column": 2,
          "position": 5098
        },
        "endLoc": {
          "line": 642,
          "column": 3,
          "position": 5598
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ">\r\n                <div>\r\n                  <Text strong>{log.message}</Text>\r\n                  <br />\r\n                  <Text type=\"secondary\" style={{ fontSize: 11 }}>\r\n                    {log.timestamp.toLocaleString()} | {log.level.toUpperCase()}\r\n                    {log.stepId && ` | 步骤: ${log.stepId}`}\r\n                  </Text>\r\n                  {log.data && (\r\n                    <div style={{ marginTop: 4, fontSize: 11, color: '#666' }}>\r\n                      <pre>{JSON.stringify(log.data, null, 2)}</pre>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Timeline.Item>\r\n            ))",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\execution\\ScriptExecutionMonitor.tsx",
        "start": 675,
        "end": 690,
        "startLoc": {
          "line": 675,
          "column": 15,
          "position": 5933
        },
        "endLoc": {
          "line": 690,
          "column": 2,
          "position": 6126
        }
      },
      "secondFile": {
        "name": "src\\components\\execution\\SimpleExecutionMonitor.tsx",
        "start": 667,
        "end": 682,
        "startLoc": {
          "line": 667,
          "column": 17,
          "position": 5790
        },
        "endLoc": {
          "line": 682,
          "column": 2,
          "position": 5983
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "import React, { useMemo, useState, useEffect } from 'react';\r\nimport { Tree, Card, Space, Tag, Typography, Row, Col, Button, Input, Tooltip, Alert, Checkbox, Divider, Collapse } from 'antd';\r\nimport { \r\n  SearchOutlined,\r\n  ExpandAltOutlined,\r\n  CompressOutlined,\r\n  EyeOutlined,\r\n  AimOutlined,\r\n  BranchesOutlined,\r\n  LoadingOutlined,\r\n  FilterOutlined,\r\n  SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport type { TreeDataNode } from 'antd';\r\nimport type { UnifiedViewData, EnhancedUIElement } from '../../services/unified-view-data-manager';\r\n\r\nconst { Text } = Typography;\r\nconst { Search } = Input;\r\nconst { Panel } = Collapse;\r\n\r\n// 节点类型定义",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewer.tsx",
        "start": 10,
        "end": 31,
        "startLoc": {
          "line": 10,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 31,
          "column": 10,
          "position": 232
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 11,
        "end": 32,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 16
        },
        "endLoc": {
          "line": 32,
          "column": 12,
          "position": 232
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "}\r\n\r\ninterface HierarchyTreeViewerProps {\r\n  /** 统一视图数据 */\r\n  viewData: UnifiedViewData | null;\r\n  /** 当前要匹配的元素（用于高亮） */\r\n  targetElement?: EnhancedUIElement;\r\n  /** 是否显示详细信息 */\r\n  showDetails?: boolean;\r\n  /** 树节点选择回调 */\r\n  onNodeSelect?: (element: EnhancedUIElement, node: TreeDataNode) => void;\r\n  /** 元素高亮回调 */\r\n  onElementHighlight?: (element: EnhancedUIElement) => void;\r\n}\r\n\r\ninterface TreeNodeData extends TreeDataNode {\r\n  element: EnhancedUIElement;\r\n  matchScore?: number;\r\n  isTarget?: boolean;\r\n}\r\n\r\nexport const HierarchyTreeViewer",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewer.tsx",
        "start": 50,
        "end": 71,
        "startLoc": {
          "line": 50,
          "column": 1,
          "position": 387
        },
        "endLoc": {
          "line": 71,
          "column": 20,
          "position": 542
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 50,
        "end": 71,
        "startLoc": {
          "line": 50,
          "column": 1,
          "position": 377
        },
        "endLoc": {
          "line": 71,
          "column": 25,
          "position": 532
        }
      }
    },
    {
      "format": "tsx",
      "lines": 31,
      "fragment": ": React.FC<HierarchyTreeViewerProps> = ({\r\n  viewData,\r\n  targetElement,\r\n  showDetails = true,\r\n  onNodeSelect,\r\n  onElementHighlight\r\n}) => {\r\n  const [expandedKeys, setExpandedKeys] = useState<React.Key[]>([]);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [selectedKeys, setSelectedKeys] = useState<React.Key[]>([]);\r\n  const [autoExpanded, setAutoExpanded] = useState(false);\r\n  \r\n  // 🔧 节点类型过滤控制\r\n  const [nodeTypeFilter, setNodeTypeFilter] = useState<NodeTypeFilter>({\r\n    containers: true,\r\n    interactive: true,\r\n    textual: true,\r\n    media: true,\r\n    input: true,\r\n    decorative: false, // 默认隐藏装饰性元素\r\n  });\r\n  \r\n  // 🔧 节点属性过滤控制\r\n  const [nodeAttributeFilter, setNodeAttributeFilter] = useState<NodeAttributeFilter>({\r\n    hasText: false,\r\n    hasContentDesc: false,\r\n    hasResourceId: false,\r\n    isClickable: false,\r\n    isScrollable: false,\r\n    isEnabled: false,\r\n    isVisible",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewer.tsx",
        "start": 71,
        "end": 101,
        "startLoc": {
          "line": 71,
          "column": 20,
          "position": 543
        },
        "endLoc": {
          "line": 101,
          "column": 10,
          "position": 843
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 71,
        "end": 101,
        "startLoc": {
          "line": 71,
          "column": 25,
          "position": 533
        },
        "endLoc": {
          "line": 101,
          "column": 2,
          "position": 833
        }
      }
    },
    {
      "format": "tsx",
      "lines": 56,
      "fragment": ": false,\r\n  });\r\n\r\n  // 🔧 分类节点类型\r\n  const classifyNodeType = (element: EnhancedUIElement): keyof NodeTypeFilter => {\r\n    const elementType = element.element_type?.toLowerCase() || '';\r\n    \r\n    // 交互元素\r\n    if (element.is_clickable || element.is_scrollable) {\r\n      return 'interactive';\r\n    }\r\n    \r\n    // 输入元素\r\n    if (elementType.includes('edit') || elementType.includes('input') || \r\n        elementType.includes('checkbox') || elementType.includes('radio')) {\r\n      return 'input';\r\n    }\r\n    \r\n    // 文本元素\r\n    if (element.text && element.text.trim()) {\r\n      return 'textual';\r\n    }\r\n    \r\n    // 媒体元素\r\n    if (elementType.includes('image') || elementType.includes('video') || \r\n        elementType.includes('media')) {\r\n      return 'media';\r\n    }\r\n    \r\n    // 容器元素\r\n    if (elementType.includes('layout') || elementType.includes('group') ||\r\n        elementType.includes('container') || elementType.includes('frame')) {\r\n      return 'containers';\r\n    }\r\n    \r\n    // 装饰性元素 - 没有文本、描述或交互功能的元素\r\n    return 'decorative';\r\n  };\r\n  \r\n  // 🔧 检查节点是否应该显示\r\n  const shouldShowNode = (element: EnhancedUIElement): boolean => {\r\n    // 类型过滤\r\n    const nodeType = classifyNodeType(element);\r\n    if (!nodeTypeFilter[nodeType]) {\r\n      return false;\r\n    }\r\n    \r\n    // 属性过滤 - 如果任何属性过滤器启用了，元素必须满足对应条件\r\n    const attributeFilters = [\r\n      { enabled: nodeAttributeFilter.hasText, check: () => Boolean(element.text?.trim()) },\r\n      { enabled: nodeAttributeFilter.hasContentDesc, check: () => Boolean(element.content_desc?.trim()) },\r\n      { enabled: nodeAttributeFilter.hasResourceId, check: () => Boolean(element.resource_id?.trim()) },\r\n      { enabled: nodeAttributeFilter.isClickable, check: () => Boolean(element.is_clickable) },\r\n      { enabled: nodeAttributeFilter.isScrollable, check: () => Boolean(element.is_scrollable) },\r\n      { enabled: nodeAttributeFilter.isEnabled, check: () => Boolean(element.is_enabled) },\r\n      {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewer.tsx",
        "start": 101,
        "end": 156,
        "startLoc": {
          "line": 101,
          "column": 10,
          "position": 844
        },
        "endLoc": {
          "line": 156,
          "column": 2,
          "position": 1457
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 100,
        "end": 155,
        "startLoc": {
          "line": 100,
          "column": 10,
          "position": 826
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1439
        }
      }
    },
    {
      "format": "tsx",
      "lines": 36,
      "fragment": "const calculateMatchScore = (element: EnhancedUIElement, target?: EnhancedUIElement): number => {\r\n    if (!target) return 0;\r\n    \r\n    let score = 0;\r\n    \r\n    // 文本相似度 (35%)\r\n    if (element.text && target.text) {\r\n      if (element.text === target.text) score += 35;\r\n      else if (element.text.includes(target.text) || target.text.includes(element.text)) score += 20;\r\n    }\r\n    \r\n    // resource-id 匹配 (30%)\r\n    if (element.resource_id && target.resource_id) {\r\n      if (element.resource_id === target.resource_id) score += 30;\r\n    }\r\n    \r\n    // class 匹配 (20%)\r\n    if (element.element_type && target.element_type) {\r\n      if (element.element_type === target.element_type) score += 20;\r\n      else if (element.element_type.includes(target.element_type) || target.element_type.includes(element.element_type)) score += 10;\r\n    }\r\n    \r\n    // content-desc 匹配 (10%)\r\n    if (element.content_desc && target.content_desc) {\r\n      if (element.content_desc === target.content_desc) score += 10;\r\n    }\r\n    \r\n    // clickable 属性 (5%)\r\n    if (element.is_clickable !== undefined && target.is_clickable !== undefined) {\r\n      if (element.is_clickable === target.is_clickable) score += 5;\r\n    }\r\n    \r\n    return score;\r\n  };\r\n\r\n  // 生成树形数据结构",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewer.tsx",
        "start": 168,
        "end": 203,
        "startLoc": {
          "line": 168,
          "column": 3,
          "position": 1575
        },
        "endLoc": {
          "line": 203,
          "column": 12,
          "position": 1988
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 168,
        "end": 203,
        "startLoc": {
          "line": 168,
          "column": 3,
          "position": 1536
        },
        "endLoc": {
          "line": 203,
          "column": 19,
          "position": 1949
        }
      }
    },
    {
      "format": "javascript",
      "lines": 268,
      "fragment": "={4} className=\"flex-1\">\r\n              {/* 层级深度指示器 */}\r\n              <Tag color=\"cyan\" style={{ fontSize: '8px', margin: 0, minWidth: '20px' }}>\r\n                L{depth}\r\n              </Tag>\r\n              \r\n              {/* 元素类型标签 */}\r\n              <Tag color={element.class_name ? \"blue\" : \"default\"} style={{ fontSize: '10px', margin: 0 }}>\r\n                {element.class_name?.split('.').pop() || element.element_type?.split('.').pop() || 'Unknown'}\r\n              </Tag>\r\n\r\n              {/* 元素文本 */}\r\n              <Text \r\n                ellipsis={{ \r\n                  tooltip: displayText\r\n                }}\r\n                style={{ \r\n                  maxWidth: '180px',\r\n                  fontSize: '12px',\r\n                  color: isTarget ? '#1890ff' : (isHighMatch ? '#52c41a' : '#666')\r\n                }}\r\n              >\r\n                {displayText}\r\n              </Text>\r\n\r\n              {/* resource-id 显示 */}\r\n              {element.resource_id && (\r\n                <Text \r\n                  type=\"secondary\" \r\n                  style={{ fontSize: '10px' }}\r\n                  code\r\n                >\r\n                  #{element.resource_id.split('/').pop()}\r\n                </Text>\r\n              )}\r\n\r\n              {/* 匹配分数显示 */}\r\n              {matchScore && matchScore > 30 && (\r\n                <Tag color=\"green\" style={{ fontSize: '8px', margin: 0 }}>\r\n                  {matchScore.toFixed(0)}%\r\n                </Tag>\r\n              )}\r\n\r\n              {/* 可点击标识 */}\r\n              {element.is_clickable && (\r\n                <Tag color=\"orange\" style={{ fontSize: '8px', margin: 0 }}>\r\n                  点击\r\n                </Tag>\r\n              )}\r\n\r\n              {/* 位置信息 */}\r\n              {element.bounds && (\r\n                <Text type=\"secondary\" style={{ fontSize: '9px' }}>\r\n                  ({element.bounds.left},{element.bounds.top})\r\n                </Text>\r\n              )}\r\n            </Space>\r\n\r\n            {/* 目标标识 */}\r\n            {isTarget && (\r\n              <AimOutlined style={{ color: '#1890ff', fontSize: '12px' }} />\r\n            )}\r\n          </div>\r\n        ),\r\n        children: [] // 暂不实现子元素，避免复杂的递归\r\n      };\r\n    };\r\n\r\n    // 构建所有元素节点\r\n    const allNodes = sortedElements.map((element, index) => buildElementNode(element, index));\r\n\r\n    // 按深度分组并构建层级结构\r\n    const depthGroups = new Map<number, TreeNodeData[]>();\r\n    allNodes.forEach(node => {\r\n      const depth = node.depth;\r\n      if (!depthGroups.has(depth)) {\r\n        depthGroups.set(depth, []);\r\n      }\r\n      depthGroups.get(depth)!.push(node);\r\n    });\r\n\r\n    // 构建按深度分组的树\r\n    const result: TreeNodeData[] = [];\r\n    const sortedDepths = Array.from(depthGroups.keys()).sort((a, b) => a - b);\r\n    \r\n    sortedDepths.forEach(depth => {\r\n      const depthNodes = depthGroups.get(depth) || [];\r\n      \r\n      if (depthNodes.length > 0) {\r\n        // 创建深度分组节点\r\n        const groupNode: TreeNodeData = {\r\n          key: `depth-group-${depth}`,\r\n          element: depthNodes[0].element,\r\n          depth,\r\n          title: (\r\n            <div className=\"flex items-center gap-2\">\r\n              <Tag color=\"purple\" style={{ fontSize: '10px' }}>\r\n                深度层级 {depth}\r\n              </Tag>\r\n              <Text type=\"secondary\" style={{ fontSize: '11px' }}>\r\n                {depthNodes.length} 个UI元素\r\n              </Text>\r\n            </div>\r\n          ),\r\n          children: depthNodes.sort((a, b) => {\r\n            // 在同一深度内，按位置排序\r\n            if (!a.element.bounds || !b.element.bounds) return 0;\r\n            const topDiff = a.element.bounds.top - b.element.bounds.top;\r\n            if (Math.abs(topDiff) > 5) return topDiff; // 按Y坐标排序\r\n            return a.element.bounds.left - b.element.bounds.left; // 按X坐标排序\r\n          })\r\n        };\r\n        \r\n        result.push(groupNode);\r\n      }\r\n    });\r\n\r\n    console.log('🌿 构建完成，层级统计:', {\r\n      总层数: result.length,\r\n      各层分布: sortedDepths.map(d => ({ 深度: d, 元素: depthGroups.get(d)?.length || 0 })),\r\n      最大深度: Math.max(...sortedDepths),\r\n      最小深度: Math.min(...sortedDepths)\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  // 生成树形数据\r\n  const treeData = useMemo(() => {\r\n    const result = buildTreeData(elements);\r\n    console.log('🌳 构建的树形数据:', {\r\n      元素总数: elements.length,\r\n      根节点数: result.length,\r\n      树结构: result.map(node => ({\r\n        key: node.key,\r\n        text: node.element.text,\r\n        children: node.children?.length || 0\r\n      }))\r\n    });\r\n    return result;\r\n  }, [elements, targetElement]);\r\n\r\n  // 自动展开多层\r\n  useEffect(() => {\r\n    if (treeData.length > 0 && expandedKeys.length === 0 && !autoExpanded) {\r\n      const keysToExpand: React.Key[] = [];\r\n      \r\n      const collectExpandableKeys = (nodes: TreeNodeData[], maxDepth: number = 2, currentDepth: number = 0) => {\r\n        if (currentDepth >= maxDepth) return;\r\n        \r\n        for (const node of nodes) {\r\n          if (node.children && node.children.length > 0) {\r\n            keysToExpand.push(node.key);\r\n            collectExpandableKeys(node.children, maxDepth, currentDepth + 1);\r\n          }\r\n        }\r\n      };\r\n      \r\n      collectExpandableKeys(treeData, 3); // 展开前3层\r\n      \r\n      if (keysToExpand.length > 0) {\r\n        console.log('🔄 自动展开多层节点:', keysToExpand.length, '个节点');\r\n        setExpandedKeys(keysToExpand);\r\n        setAutoExpanded(true);\r\n      } else {\r\n        console.log('⚠️ 没有找到可展开的节点');\r\n      }\r\n    }\r\n  }, [treeData, expandedKeys.length, autoExpanded]);\r\n\r\n  // 过滤树数据（搜索功能）\r\n  const filteredTreeData = useMemo(() => {\r\n    if (!searchValue.trim()) return treeData;\r\n\r\n    const filterNodes = (nodes: TreeNodeData[]): TreeNodeData[] => {\r\n      const filtered: TreeNodeData[] = [];\r\n      \r\n      for (const node of nodes) {\r\n        const element = node.element;\r\n        const matches = \r\n          element.text?.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          element.resource_id?.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          element.class_name?.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          element.content_desc?.toLowerCase().includes(searchValue.toLowerCase());\r\n\r\n        if (matches) {\r\n          // 如果节点匹配，包含整个子树\r\n          filtered.push(node);\r\n        } else {\r\n          // 如果节点不匹配，但子节点可能匹配，递归过滤\r\n          const filteredChildren = filterNodes(node.children || []);\r\n          if (filteredChildren.length > 0) {\r\n            filtered.push({\r\n              ...node,\r\n              children: filteredChildren\r\n            });\r\n          }\r\n        }\r\n      }\r\n      \r\n      return filtered;\r\n    };\r\n\r\n    return filterNodes(treeData);\r\n  }, [treeData, searchValue]);\r\n\r\n  // 自动展开匹配节点\r\n  const autoExpandMatching = () => {\r\n    const keysToExpand: React.Key[] = [];\r\n    \r\n    const collectKeys = (nodes: TreeNodeData[]) => {\r\n      for (const node of nodes) {\r\n        if (node.matchScore && node.matchScore > 50) {\r\n          keysToExpand.push(node.key);\r\n        }\r\n        if (node.children && node.children.length > 0) {\r\n          keysToExpand.push(node.key);\r\n          collectKeys(node.children);\r\n        }\r\n      }\r\n    };\r\n\r\n    collectKeys(filteredTreeData);\r\n    setExpandedKeys(keysToExpand);\r\n    setAutoExpanded(true);\r\n  };\r\n\r\n  // 全部展开/收缩\r\n  const toggleExpandAll = () => {\r\n    if (expandedKeys.length > 0) {\r\n      console.log('🔽 收缩所有节点');\r\n      setExpandedKeys([]);\r\n    } else {\r\n      const allKeys: React.Key[] = [];\r\n      const collectKeys = (nodes: TreeNodeData[]) => {\r\n        for (const node of nodes) {\r\n          if (node.children && node.children.length > 0) {\r\n            allKeys.push(node.key);\r\n            collectKeys(node.children);\r\n          }\r\n        }\r\n      };\r\n      collectKeys(filteredTreeData);\r\n      console.log('🔼 展开所有节点:', allKeys.length, '个节点');\r\n      setExpandedKeys(allKeys);\r\n    }\r\n  };\r\n\r\n  // 处理节点选择\r\n  const onSelect = (selectedKeys: React.Key[], info: any) => {\r\n    if (selectedKeys.length > 0 && info.node?.element) {\r\n      setSelectedKeys(selectedKeys);\r\n      onElementSelect?.(info.node.element);\r\n    }\r\n  };\r\n\r\n  // 处理展开/收缩\r\n  const onExpand = (expandedKeys: React.Key[]) => {\r\n    setExpandedKeys(expandedKeys);\r\n  };\r\n\r\n  // 数据为空的处理\r\n  if (!elements || elements.length === 0) {\r\n    return (\r\n      <Card className=\"h-full\">\r\n        <Empty \r\n          description=\"暂无XML层级数据\"\r\n          image={Empty",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 170,
        "end": 437,
        "startLoc": {
          "line": 170,
          "column": 5,
          "position": 1946
        },
        "endLoc": {
          "line": 437,
          "column": 6,
          "position": 4704
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 191,
        "end": 292,
        "startLoc": {
          "line": 191,
          "column": 5,
          "position": 1891
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2914
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "}) => {\r\n  const [expandedKeys, setExpandedKeys] = useState<React.Key[]>([]);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [selectedKeys, setSelectedKeys] = useState<React.Key[]>([]);\r\n  const [autoExpanded, setAutoExpanded] = useState(false);\r\n\r\n  // 计算元素匹配分数",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 47,
        "end": 53,
        "startLoc": {
          "line": 47,
          "column": 1,
          "position": 365
        },
        "endLoc": {
          "line": 53,
          "column": 12,
          "position": 468
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 77,
        "end": 83,
        "startLoc": {
          "line": 77,
          "column": 1,
          "position": 576
        },
        "endLoc": {
          "line": 83,
          "column": 15,
          "position": 679
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "): number => {\r\n    if (!target) return 0;\r\n    \r\n    let score = 0;\r\n    \r\n    // 文本相似度 (35%)\r\n    if (element.text && target.text) {\r\n      if (element.text === target.text) score += 35;\r\n      else if (element.text.includes(target.text) || target.text.includes(element.text)) score += 20;\r\n    }\r\n    \r\n    // resource-id 匹配 (30%)\r\n    if (element.resource_id && target.resource_id) {\r\n      if (element.resource_id === target.resource_id) score += 30;\r\n    }\r\n    \r\n    // class 匹配 (20%)\r\n    if (element.class_name",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 54,
        "end": 71,
        "startLoc": {
          "line": 54,
          "column": 10,
          "position": 490
        },
        "endLoc": {
          "line": 71,
          "column": 11,
          "position": 680
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 168,
        "end": 185,
        "startLoc": {
          "line": 168,
          "column": 18,
          "position": 1554
        },
        "endLoc": {
          "line": 185,
          "column": 13,
          "position": 1744
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ")) score += 10;\r\n    }\r\n    \r\n    // content-desc 匹配 (10%)\r\n    if (element.content_desc && target.content_desc) {\r\n      if (element.content_desc === target.content_desc) score += 10;\r\n    }\r\n    \r\n    // clickable 属性 (5%)\r\n    if (element.is_clickable !== undefined && target.is_clickable !== undefined) {\r\n      if (element.is_clickable === target.is_clickable) score += 5;\r\n    }\r\n    \r\n    return score;\r\n  };\r\n\r\n  // 找到父元素",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 73,
        "end": 89,
        "startLoc": {
          "line": 73,
          "column": 11,
          "position": 743
        },
        "endLoc": {
          "line": 89,
          "column": 9,
          "position": 885
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\HierarchyTreeViewerFixed.tsx",
        "start": 187,
        "end": 203,
        "startLoc": {
          "line": 187,
          "column": 13,
          "position": 1807
        },
        "endLoc": {
          "line": 203,
          "column": 19,
          "position": 1949
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "const areaA = (a.bounds.right - a.bounds.left) * (a.bounds.bottom - a.bounds.top);\r\n      const areaB = (b.bounds.right - b.bounds.left) * (b.bounds.bottom - b.bounds.top);\r\n      return areaB - areaA;\r\n    });\r\n\r\n    // 构建元素节点，不包含子元素（避免递归）",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 125,
        "end": 130,
        "startLoc": {
          "line": 125,
          "column": 7,
          "position": 1331
        },
        "endLoc": {
          "line": 130,
          "column": 23,
          "position": 1436
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 129,
        "end": 134,
        "startLoc": {
          "line": 129,
          "column": 7,
          "position": 1134
        },
        "endLoc": {
          "line": 134,
          "column": 18,
          "position": 1239
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "const buildElementNode = (element: UIElement, index: number): TreeNodeData => {\r\n      const matchScore = calculateMatchScore(element, targetElement);\r\n      const displayText = element.text || element.content_desc || element.resource_id || element.class_name || 'Unknown';\r\n      const isHighMatch = matchScore > 70;\r\n      const isTarget = targetElement && (\r\n        element.id === targetElement.id ||\r\n        (element.resource_id && element.resource_id === targetElement.resource_id) ||\r\n        (element.text && targetElement.text && element.text === targetElement.text)\r\n      );\r\n\r\n      // 计算相对深度\r\n      let depth = 0;\r\n      if (element.bounds) {\r\n        const { left, top, right, bottom } = element.bounds;\r\n        const area = (right - left) * (bottom - top);\r\n        \r\n        // 计算包含当前元素的其他元素数量",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 131,
        "end": 147,
        "startLoc": {
          "line": 131,
          "column": 5,
          "position": 1440
        },
        "endLoc": {
          "line": 147,
          "column": 19,
          "position": 1700
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 135,
        "end": 151,
        "startLoc": {
          "line": 135,
          "column": 5,
          "position": 1243
        },
        "endLoc": {
          "line": 151,
          "column": 4,
          "position": 1503
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "for (const other of elements) {\r\n          if (other === element || !other.bounds) continue;\r\n          const otherBounds = other.bounds;\r\n          const otherArea = (otherBounds.right - otherBounds.left) * (otherBounds.bottom - otherBounds.top);\r\n          \r\n          if (otherBounds.left <= left && \r\n              otherBounds.top <= top && \r\n              otherBounds.right >= right && \r\n              otherBounds.bottom >= bottom &&\r\n              otherArea > area) {\r\n            depth++;\r\n          }\r\n        }\r\n      }\r\n\r\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 148,
        "end": 163,
        "startLoc": {
          "line": 148,
          "column": 9,
          "position": 1704
        },
        "endLoc": {
          "line": 163,
          "column": 7,
          "position": 1874
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 151,
        "end": 166,
        "startLoc": {
          "line": 151,
          "column": 9,
          "position": 1503
        },
        "endLoc": {
          "line": 166,
          "column": 13,
          "position": 1673
        }
      }
    },
    {
      "format": "tsx",
      "lines": 72,
      "fragment": "return {\r\n        key: `element-${index}-${element.id || element.resource_id || Math.random()}`,\r\n        element,\r\n        depth,\r\n        matchScore,\r\n        title: (\r\n          <div className=\"flex items-center justify-between group w-full\">\r\n            <Space size={4} className=\"flex-1\">\r\n              {/* 层级深度指示器 */}\r\n              <Tag color=\"cyan\" style={{ fontSize: '8px', margin: 0, minWidth: '20px' }}>\r\n                L{depth}\r\n              </Tag>\r\n              \r\n              {/* 元素类型标签 */}\r\n              <Tag color={element.class_name ? \"blue\" : \"default\"} style={{ fontSize: '10px', margin: 0 }}>\r\n                {element.class_name?.split('.').pop() || element.element_type?.split('.').pop() || 'Unknown'}\r\n              </Tag>\r\n\r\n              {/* 元素文本 */}\r\n              <Text \r\n                ellipsis={{ \r\n                  tooltip: displayText\r\n                }}\r\n                style={{ \r\n                  maxWidth: '180px',\r\n                  fontSize: '12px',\r\n                  color: isTarget ? '#1890ff' : (isHighMatch ? '#52c41a' : '#666')\r\n                }}\r\n              >\r\n                {displayText}\r\n              </Text>\r\n\r\n              {/* resource-id 显示 */}\r\n              {element.resource_id && (\r\n                <Text \r\n                  type=\"secondary\" \r\n                  style={{ fontSize: '10px' }}\r\n                  code\r\n                >\r\n                  #{element.resource_id.split('/').pop()}\r\n                </Text>\r\n              )}\r\n\r\n              {/* 匹配分数显示 */}\r\n              {matchScore && matchScore > 30 && (\r\n                <Tag color=\"green\" style={{ fontSize: '8px', margin: 0 }}>\r\n                  {matchScore.toFixed(0)}%\r\n                </Tag>\r\n              )}\r\n\r\n              {/* 可点击标识 */}\r\n              {element.is_clickable && (\r\n                <Tag color=\"orange\" style={{ fontSize: '8px', margin: 0 }}>\r\n                  点击\r\n                </Tag>\r\n              )}\r\n\r\n              {/* 位置信息 */}\r\n              {element.bounds && (\r\n                <Text type=\"secondary\" style={{ fontSize: '9px' }}>\r\n                  ({element.bounds.left},{element.bounds.top})\r\n                </Text>\r\n              )}\r\n            </Space>\r\n\r\n            {/* 目标标识 */}\r\n            {isTarget && (\r\n              <AimOutlined style={{ color: '#1890ff', fontSize: '12px' }} />\r\n            )}\r\n          </div>\r\n        ),\r\n        children: []",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 163,
        "end": 234,
        "startLoc": {
          "line": 163,
          "column": 7,
          "position": 1874
        },
        "endLoc": {
          "line": 234,
          "column": 2,
          "position": 2533
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 184,
        "end": 255,
        "startLoc": {
          "line": 184,
          "column": 7,
          "position": 1819
        },
        "endLoc": {
          "line": 255,
          "column": 10,
          "position": 2478
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "};\r\n    };\r\n\r\n    // 构建所有元素节点\r\n    const allNodes = sortedElements.map((element, index) => buildElementNode(element, index));\r\n\r\n    // 按深度分组并构建层级结构\r\n    const depthGroups = new Map<number, TreeNodeData[]>();\r\n    allNodes.forEach(node => {\r\n      const depth = node.depth;",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 235,
        "end": 244,
        "startLoc": {
          "line": 235,
          "column": 7,
          "position": 2539
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 2636
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 256,
        "end": 265,
        "startLoc": {
          "line": 256,
          "column": 7,
          "position": 2485
        },
        "endLoc": {
          "line": 265,
          "column": 3,
          "position": 2583
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ";\r\n      if (!depthGroups.has(depth)) {\r\n        depthGroups.set(depth, []);\r\n      }\r\n      depthGroups.get(depth)!.push(node);\r\n    });\r\n\r\n    // 构建按深度分组的树\r\n    const result: TreeNodeData[] = [];\r\n    const sortedDepths = Array.from(depthGroups.keys()).sort((a, b) => a - b);\r\n    \r\n    sortedDepths.forEach(depth => {\r\n      const depthNodes = depthGroups.get(depth) || [];\r\n      \r\n      if (depthNodes.length > 0) {\r\n        // 创建深度分组节点",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 244,
        "end": 259,
        "startLoc": {
          "line": 244,
          "column": 6,
          "position": 2636
        },
        "endLoc": {
          "line": 259,
          "column": 12,
          "position": 2810
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 265,
        "end": 280,
        "startLoc": {
          "line": 265,
          "column": 2,
          "position": 2586
        },
        "endLoc": {
          "line": 280,
          "column": 6,
          "position": 2760
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "const groupNode: TreeNodeData = {\r\n          key: `depth-group-${depth}`,\r\n          element: depthNodes[0].element,\r\n          depth,\r\n          title: (\r\n            <div className=\"flex items-center gap-2\">\r\n              <Tag color=\"purple\" style={{ fontSize: '10px' }}>\r\n                深度层级 {depth}\r\n              </Tag>\r\n              <Text type=\"secondary\" style={{ fontSize: '11px' }}>\r\n                {depthNodes.length} 个UI元素\r\n              </Text>\r\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 260,
        "end": 272,
        "startLoc": {
          "line": 260,
          "column": 9,
          "position": 2814
        },
        "endLoc": {
          "line": 272,
          "column": 3,
          "position": 2956
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 280,
        "end": 292,
        "startLoc": {
          "line": 280,
          "column": 9,
          "position": 2760
        },
        "endLoc": {
          "line": 292,
          "column": 2,
          "position": 2902
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "})\r\n        };\r\n        \r\n        result.push(groupNode);\r\n      }\r\n    });\r\n\r\n    console.log('🌿 构建完成，层级统计:', {\r\n      总层数: result.length,\r\n      各层分布: sortedDepths.map(d => ({ 深度: d, 元素: depthGroups.get(d)?.length || 0 })),\r\n      最大深度: Math.max(...sortedDepths),\r\n      最小深度: Math.min(...sortedDepths)\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  // 生成树形数据\r\n  const treeData = useMemo(() => {\r\n    const result = buildTreeData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 280,
        "end": 299,
        "startLoc": {
          "line": 280,
          "column": 11,
          "position": 3094
        },
        "endLoc": {
          "line": 299,
          "column": 14,
          "position": 3269
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 302,
        "end": 321,
        "startLoc": {
          "line": 302,
          "column": 11,
          "position": 3066
        },
        "endLoc": {
          "line": 321,
          "column": 22,
          "position": 3241
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "useEffect(() => {\r\n    if (treeData.length > 0 && expandedKeys.length === 0 && !autoExpanded) {\r\n      const keysToExpand: React.Key[] = [];\r\n      \r\n      const collectExpandableKeys = (nodes: TreeNodeData[], maxDepth: number = 2, currentDepth: number = 0) => {\r\n        if (currentDepth >= maxDepth) return;\r\n        \r\n        for (const node of nodes) {\r\n          if (node.children && node.children.length > 0) {\r\n            keysToExpand.push(node.key);\r\n            collectExpandableKeys(node.children, maxDepth, currentDepth + 1);\r\n          }\r\n        }\r\n      };\r\n      \r\n      collectExpandableKeys(treeData, 3",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 313,
        "end": 328,
        "startLoc": {
          "line": 313,
          "column": 3,
          "position": 3401
        },
        "endLoc": {
          "line": 328,
          "column": 2,
          "position": 3614
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 334,
        "end": 349,
        "startLoc": {
          "line": 334,
          "column": 3,
          "position": 3361
        },
        "endLoc": {
          "line": 349,
          "column": 2,
          "position": 3574
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ");\r\n      }\r\n    }\r\n  }, [treeData, expandedKeys.length, autoExpanded]);\r\n\r\n  // 过滤树数据（搜索功能）\r\n  const filteredTreeData = useMemo(() => {\r\n    if (!searchValue.trim()) return treeData;\r\n\r\n    const filterNodes = (nodes: TreeNodeData[]): TreeNodeData[] => {\r\n      const filtered: TreeNodeData[] = [];\r\n      \r\n      for (const node of nodes) {\r\n        const element = node.element;\r\n        const matches = \r\n          element.text?.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          element.resource_id?.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          element.class_name?.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          element.content_desc?.toLowerCase().includes(searchValue.toLowerCase());\r\n\r\n        if (matches) {\r\n          // 如果节点匹配，包含整个子树",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 335,
        "end": 356,
        "startLoc": {
          "line": 335,
          "column": 16,
          "position": 3687
        },
        "endLoc": {
          "line": 356,
          "column": 17,
          "position": 3943
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 354,
        "end": 375,
        "startLoc": {
          "line": 354,
          "column": 5,
          "position": 3629
        },
        "endLoc": {
          "line": 375,
          "column": 9,
          "position": 3885
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "const filteredChildren = filterNodes(node.children || []);\r\n          if (filteredChildren.length > 0) {\r\n            filtered.push({\r\n              ...node,\r\n              children: filteredChildren\r\n            });\r\n          }\r\n        }\r\n      }\r\n      \r\n      return filtered;\r\n    };\r\n\r\n    return filterNodes(treeData);\r\n  }, [treeData, searchValue]);\r\n\r\n  // 自动展开匹配节点",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 360,
        "end": 376,
        "startLoc": {
          "line": 360,
          "column": 11,
          "position": 3969
        },
        "endLoc": {
          "line": 376,
          "column": 12,
          "position": 4087
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 377,
        "end": 393,
        "startLoc": {
          "line": 377,
          "column": 11,
          "position": 3903
        },
        "endLoc": {
          "line": 393,
          "column": 11,
          "position": 4021
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\r\n\r\n  // 全部展开/收缩\r\n  const toggleExpandAll = () => {\r\n    if (expandedKeys.length > 0) {\r\n      console.log('🔽 收缩所有节点');\r\n      setExpandedKeys([]);\r\n    } else {\r\n      const allKeys: React.Key[] = [];\r\n      const collectKeys = (nodes: TreeNodeData[]) => {\r\n        for (const node of nodes) {\r\n          if (node.children && node.children.length > 0) {\r\n            allKeys.push(node.key);\r\n            collectKeys(node.children);\r\n          }\r\n        }\r\n      };\r\n      collectKeys(filteredTreeData);\r\n      console.log('🔼 展开所有节点:', allKeys.length, '个节点');\r\n      setExpandedKeys(allKeys);\r\n    }\r\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-xml-hierarchy\\CachedHierarchyTreeViewer.tsx",
        "start": 395,
        "end": 416,
        "startLoc": {
          "line": 395,
          "column": 2,
          "position": 4288
        },
        "endLoc": {
          "line": 416,
          "column": 2,
          "position": 4509
        }
      },
      "secondFile": {
        "name": "src\\components\\element-xml-hierarchy\\EnhancedHierarchyTreeViewer.tsx",
        "start": 391,
        "end": 412,
        "startLoc": {
          "line": 391,
          "column": 2,
          "position": 4015
        },
        "endLoc": {
          "line": 412,
          "column": 16,
          "position": 4236
        }
      }
    },
    {
      "format": "javascript",
      "lines": 8,
      "fragment": "}>class_name</Tag>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col span={12}>\r\n              <div style={{ textAlign: 'center', padding: '8px' }}>\r\n                <div style={{ fontSize: '24px', marginBottom: '8px' }}>✏️</div>\r\n                <Title level={5} style={{ margin: 0, color: '#faad14'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\element-name-editor\\ElementNameEditor.tsx",
        "start": 246,
        "end": 253,
        "startLoc": {
          "line": 246,
          "column": 2,
          "position": 1850
        },
        "endLoc": {
          "line": 253,
          "column": 10,
          "position": 1960
        }
      },
      "secondFile": {
        "name": "src\\components\\element-name-editor\\ElementNameEditor.tsx",
        "start": 235,
        "end": 239,
        "startLoc": {
          "line": 235,
          "column": 3,
          "position": 1613
        },
        "endLoc": {
          "line": 239,
          "column": 10,
          "position": 1701
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ";\r\n  \r\n  const parts: string[] = [];\r\n  let cur: UiNode | null | undefined = n;\r\n  \r\n  while (cur) {\r\n    let idx = 1;\r\n    if (cur.parent) {\r\n      const siblings = cur.parent.children.filter(c => c.tag === cur!.tag);\r\n      const meIndex = siblings.indexOf(cur) + 1; // 1-based",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\adb-xml-inspector\\utils.ts",
        "start": 58,
        "end": 67,
        "startLoc": {
          "line": 58,
          "column": 3,
          "position": 398
        },
        "endLoc": {
          "line": 67,
          "column": 11,
          "position": 529
        }
      },
      "secondFile": {
        "name": "src\\domain\\inspector\\utils\\xpath.ts",
        "start": 19,
        "end": 27,
        "startLoc": {
          "line": 19,
          "column": 3,
          "position": 99
        },
        "endLoc": {
          "line": 27,
          "column": 4,
          "position": 228
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ");\r\n\r\n    function walk(el: Element, parent: UiNode | null): UiNode {\r\n      const attrs: Record<string, string> = {};\r\n      for (const a of Array.from(el.attributes)) {\r\n        attrs[a.name] = a.value;\r\n      }\r\n      const node: UiNode = {\r\n        tag: el.tagName,\r\n        attrs,\r\n        children: [],\r\n        parent,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\adb-xml-inspector\\utils.ts",
        "start": 87,
        "end": 98,
        "startLoc": {
          "line": 87,
          "column": 11,
          "position": 719
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 855
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\utils.ts",
        "start": 33,
        "end": 40,
        "startLoc": {
          "line": 33,
          "column": 11,
          "position": 433
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 562
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\r\n  if (!n) return;\r\n  const stack: UiNode[] = [n];\r\n  while (stack.length) {\r\n    const cur = stack.pop()!;\r\n    for (const c of cur.children) {\r\n      c.parent = cur;\r\n      stack.push(c);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 节点匹配函数（用于搜索）\r\n * @param n UI节点\r\n * @param keyword 搜索关键词\r\n * @returns 是否匹配\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\adb-xml-inspector\\utils.ts",
        "start": 116,
        "end": 133,
        "startLoc": {
          "line": 116,
          "column": 2,
          "position": 1004
        },
        "endLoc": {
          "line": 133,
          "column": 4,
          "position": 1117
        }
      },
      "secondFile": {
        "name": "src\\components\\universal-ui\\views\\grid-view\\utils.ts",
        "start": 53,
        "end": 65,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 696
        },
        "endLoc": {
          "line": 65,
          "column": 7,
          "position": 809
        }
      }
    },
    {
      "format": "javascript",
      "lines": 38,
      "fragment": " }}>\r\n                {restKeys.map(k => (\r\n                  <div key={k} style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                    <Text type=\"secondary\" style={{ fontSize: '11px', fontWeight: 600 }}>{k}:</Text>\r\n                    <Text style={{ fontSize: '12px', wordBreak: 'break-all' }}>{node.attrs[k]}</Text>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Space>\r\n    </Card>\r\n  );\r\n}\r\n\r\n/** 屏幕预览卡片 */\r\ninterface ScreenPreviewProps {\r\n  root: UiNode | null;\r\n  selected: UiNode | null;\r\n}\r\n\r\nfunction ScreenPreview({ root, selected }: ScreenPreviewProps) {\r\n  // 估计屏幕尺寸\r\n  const screen = useMemo(() => inferScreenSize(root), [root]);\r\n\r\n  // 扁平化所有有bounds的节点\r\n  const boxes = useMemo(() => flattenNodesWithBounds(root), [root]);\r\n\r\n  // 画布尺寸\r\n  const viewW = 220;\r\n  const scale = screen.width > 0 ? viewW / screen.width : 1;\r\n  const viewH = Math.max(80, Math.round(screen.height * scale));\r\n\r\n  return (\r\n    <Card \r\n      title={\r\n        ",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\adb-xml-inspector\\AdbXmlInspector.tsx",
        "start": 266,
        "end": 303,
        "startLoc": {
          "line": 266,
          "column": 6,
          "position": 2224
        },
        "endLoc": {
          "line": 303,
          "column": 9,
          "position": 2620
        }
      },
      "secondFile": {
        "name": "src\\components\\adb-xml-inspector\\AdbXmlInspector.tsx",
        "start": 249,
        "end": 254,
        "startLoc": {
          "line": 249,
          "column": 6,
          "position": 1941
        },
        "endLoc": {
          "line": 254,
          "column": 2,
          "position": 2072
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ";\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // 转换为32位整数\r\n    }\r\n    return Math.abs(hash).toString(16).",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\UnifiedTypeAdapter.ts",
        "start": 226,
        "end": 232,
        "startLoc": {
          "line": 226,
          "column": 2,
          "position": 1923
        },
        "endLoc": {
          "line": 232,
          "column": 2,
          "position": 2029
        }
      },
      "secondFile": {
        "name": "src\\utils\\xpath\\cache\\xpath-precompiler-cache.ts",
        "start": 118,
        "end": 447,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 740
        },
        "endLoc": {
          "line": 447,
          "column": 2,
          "position": 4388
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\r\n        report_date: string;\r\n        summary: {\r\n          new_targets: number;\r\n          new_comments: number;\r\n          tasks_generated: number;\r\n          tasks_completed: number;\r\n          success_rate: number;\r\n        };\r\n        details: {\r\n          follow_tasks: Array<{ target_user: string; status: string; result?: string }>;\r\n          reply_tasks: Array<{ comment_id: string; reply_content: string; status: string }>;\r\n        };\r\n      };",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\prospecting-acquisition-service.ts",
        "start": 509,
        "end": 522,
        "startLoc": {
          "line": 509,
          "column": 2,
          "position": 3982
        },
        "endLoc": {
          "line": 522,
          "column": 2,
          "position": 4120
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\prospecting-acquisition-service.ts",
        "start": 489,
        "end": 502,
        "startLoc": {
          "line": 489,
          "column": 2,
          "position": 3762
        },
        "endLoc": {
          "line": 502,
          "column": 2,
          "position": 3900
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": target.target_type,\r\n      platform: target.platform,\r\n      id_or_url: target.platform_id_or_url,\r\n      title: target.title || '',\r\n      source: target.source,\r\n      industry_tags: target.industry_tags?.join(';') || '',\r\n      region: target.region_tag,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\prospecting-acquisition-service.ts",
        "start": 560,
        "end": 566,
        "startLoc": {
          "line": 560,
          "column": 12,
          "position": 4380
        },
        "endLoc": {
          "line": 566,
          "column": 2,
          "position": 4459
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\candidate-pool\\services\\prospecting-candidate-pool-service.ts",
        "start": 181,
        "end": 187,
        "startLoc": {
          "line": 181,
          "column": 5,
          "position": 1489
        },
        "endLoc": {
          "line": 187,
          "column": 3,
          "position": 1569
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "({\r\n      targetType: payload.target_type,\r\n      platform: payload.platform,\r\n      idOrUrl: payload.id_or_url,\r\n      title: payload.title,\r\n      source: payload.source,\r\n      industryTags: payload.industry_tags ? payload.industry_tags.split(';').filter(Boolean) as IndustryTag[] : [],\r\n      region: payload.region,\r\n      notes: payload.notes\r\n    }))",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionServiceFacade.v2.ts",
        "start": 109,
        "end": 118,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 670
        },
        "endLoc": {
          "line": 118,
          "column": 2,
          "position": 783
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\PreciseAcquisitionServiceFacade.v2.ts",
        "start": 89,
        "end": 98,
        "startLoc": {
          "line": 89,
          "column": 15,
          "position": 463
        },
        "endLoc": {
          "line": 98,
          "column": 2,
          "position": 576
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "{\r\n      id: '',\r\n      target_type: payload.target_type as any,\r\n      platform: payload.platform as any,\r\n      platform_id_or_url: payload.id_or_url,\r\n      title: payload.title,\r\n      source: payload.source as any,\r\n      industry_tags: payload.industry_tags ? payload.industry_tags.split(';') as any[] : [],\r\n      region_tag: payload.region,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionServiceFacade.v2.ts",
        "start": 241,
        "end": 249,
        "startLoc": {
          "line": 241,
          "column": 2,
          "position": 2002
        },
        "endLoc": {
          "line": 249,
          "column": 2,
          "position": 2114
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\candidate-pool\\hooks\\useCandidatePool.ts",
        "start": 123,
        "end": 131,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1377
        },
        "endLoc": {
          "line": 131,
          "column": 3,
          "position": 1490
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ".map(task => ({\r\n        id: task.id,\r\n        task_type: task.task_type,\r\n        comment_id: task.comment_id,\r\n        target_user_id: task.target_user_id,\r\n        assign_account_id: task.assign_account_id,\r\n        status: task.status,\r\n        executor_mode: task.executor_mode,\r\n        result_code: task.result_code,\r\n        error_message: task.error_message,\r\n        dedup_key: task.dedup_key,\r\n        created_at: task.created_at?.toISOString() || new Date().toISOString(),\r\n        executed_at: task.executed_at?.toISOString()\r\n      })),\r\n      total",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionServiceFacade.v2.ts",
        "start": 365,
        "end": 379,
        "startLoc": {
          "line": 365,
          "column": 6,
          "position": 3115
        },
        "endLoc": {
          "line": 379,
          "column": 6,
          "position": 3275
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\PreciseAcquisitionServiceFacade.v2.ts",
        "start": 327,
        "end": 341,
        "startLoc": {
          "line": 327,
          "column": 16,
          "position": 2763
        },
        "endLoc": {
          "line": 341,
          "column": 12,
          "position": 2923
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(targets: EntityCreationParams['watchTarget'][]): Promise<{\r\n    success_count: number;\r\n    failed_count: number;\r\n    errors: Array<{ index: number; error: string }>;\r\n  }> {\r\n    const results = {\r\n      success_count: 0,\r\n      failed_count: 0,\r\n      errors: [] as Array<{ index: number; error: string }>,\r\n    };\r\n\r\n    const validPayloads",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionApplicationService.ts",
        "start": 109,
        "end": 120,
        "startLoc": {
          "line": 109,
          "column": 23,
          "position": 666
        },
        "endLoc": {
          "line": 120,
          "column": 14,
          "position": 796
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\precise-acquisition\\WatchTargetService.ts",
        "start": 49,
        "end": 60,
        "startLoc": {
          "line": 49,
          "column": 11,
          "position": 459
        },
        "endLoc": {
          "line": 60,
          "column": 9,
          "position": 589
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".push(target.toDatabasePayload());\r\n        results.success_count++;\r\n      } catch (error) {\r\n        results.failed_count++;\r\n        results.errors.push({\r\n          index: i,\r\n          error: error instanceof Error ? error.message : String(error),\r\n        });\r\n      }\r\n    }\r\n\r\n    // 批量插入有效的目标",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionApplicationService.ts",
        "start": 138,
        "end": 149,
        "startLoc": {
          "line": 138,
          "column": 14,
          "position": 966
        },
        "endLoc": {
          "line": 149,
          "column": 13,
          "position": 1066
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\precise-acquisition\\WatchTargetService.ts",
        "start": 68,
        "end": 79,
        "startLoc": {
          "line": 68,
          "column": 9,
          "position": 714
        },
        "endLoc": {
          "line": 79,
          "column": 3,
          "position": 814
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "{\r\n      const rows = await invoke('list_watch_targets', {\r\n        limit: params.limit || null,\r\n        offset: params.offset || null,\r\n        platform: params.platform || null,\r\n        targetType: params.target_type || null,\r\n      }) as WatchTargetRow[];\r\n\r\n      return rows.map(row => WatchTarget.fromDatabaseRow(row));\r\n    } catch",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionApplicationService.ts",
        "start": 183,
        "end": 192,
        "startLoc": {
          "line": 183,
          "column": 2,
          "position": 1375
        },
        "endLoc": {
          "line": 192,
          "column": 6,
          "position": 1489
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\precise-acquisition\\WatchTargetService.ts",
        "start": 95,
        "end": 106,
        "startLoc": {
          "line": 95,
          "column": 2,
          "position": 983
        },
        "endLoc": {
          "line": 106,
          "column": 6,
          "position": 1101
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\r\n      const rows = await invoke('list_comments', {\r\n        limit: params.limit || null,\r\n        offset: params.offset || null,\r\n        platform: params.platform || null,\r\n        sourceTargetId: params.source_target_id || null,\r\n        region: params.region || null,\r\n      }) as CommentRow[];\r\n\r\n      return rows.map(row => CommentEntity.fromDatabaseRow(row));\r\n    } catch",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionApplicationService.ts",
        "start": 277,
        "end": 287,
        "startLoc": {
          "line": 277,
          "column": 2,
          "position": 2162
        },
        "endLoc": {
          "line": 287,
          "column": 6,
          "position": 2290
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\precise-acquisition\\CommentService.ts",
        "start": 41,
        "end": 52,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 402
        },
        "endLoc": {
          "line": 52,
          "column": 2,
          "position": 531
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\r\n              byAccount: 'default_account',\r\n            }) as boolean;\r\n            if (reserved && !(await this.isDuplicateTask(task))) {\r\n              generatedTasks.push(task);\r\n            }\r\n          } catch (e) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n            if (!(await this.isDuplicateTask(task))) {\r\n              generatedTasks.push(task);\r\n            }\r\n          }\r\n        }\r\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionApplicationService.ts",
        "start": 365,
        "end": 377,
        "startLoc": {
          "line": 365,
          "column": 2,
          "position": 2952
        },
        "endLoc": {
          "line": 377,
          "column": 2,
          "position": 3068
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\PreciseAcquisitionApplicationService.ts",
        "start": 332,
        "end": 345,
        "startLoc": {
          "line": 332,
          "column": 3,
          "position": 2653
        },
        "endLoc": {
          "line": 345,
          "column": 18,
          "position": 2771
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\r\n      const rows = await invoke('list_tasks', {\r\n        limit: params.limit || null,\r\n        offset: params.offset || null,\r\n        status: params.status || null,\r\n        taskType: params.task_type || null,\r\n        assignAccountId: params.assign_account_id || null,\r\n      }) as TaskRow[];\r\n\r\n      return rows.map(row => TaskEntity.fromDatabaseRow(row));\r\n    } catch",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\PreciseAcquisitionApplicationService.ts",
        "start": 412,
        "end": 422,
        "startLoc": {
          "line": 412,
          "column": 2,
          "position": 3345
        },
        "endLoc": {
          "line": 422,
          "column": 6,
          "position": 3473
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\precise-acquisition\\TaskQueueService.ts",
        "start": 67,
        "end": 79,
        "startLoc": {
          "line": 67,
          "column": 2,
          "position": 627
        },
        "endLoc": {
          "line": 79,
          "column": 6,
          "position": 759
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "attributes: {\r\n        resourceId: node?.attrs?.['resource-id'],\r\n        text: node?.attrs?.['text'],\r\n        contentDesc: node?.attrs?.['content-desc'],\r\n        className: node?.attrs?.['class'],\r\n        packageName: node?.attrs?.['package'],\r\n      },\r\n      bounds: node?.attrs?.['bounds'],\r\n    };\r\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\DistributedInspectorService.ts",
        "start": 100,
        "end": 109,
        "startLoc": {
          "line": 100,
          "column": 7,
          "position": 777
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 890
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\InspectorApplicationService.ts",
        "start": 48,
        "end": 57,
        "startLoc": {
          "line": 48,
          "column": 7,
          "position": 646
        },
        "endLoc": {
          "line": 57,
          "column": 6,
          "position": 759
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "const { isTauri } = await import('@tauri-apps/api/core');\r\n    if (!isTauri()) {\r\n      console.warn('🌐 运行在浏览器环境中，ADB功能将受限');\r\n      store.setInitializing(false);\r\n      store.setDevices([]);\r\n      StoreOperations.clearError();\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      store.setInitializing(true);\r\n      StoreOperations.clearError();\r\n\r\n      // 1. 初始化日志桥接",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\adb-application-service.ts",
        "start": 79,
        "end": 92,
        "startLoc": {
          "line": 79,
          "column": 5,
          "position": 593
        },
        "endLoc": {
          "line": 92,
          "column": 14,
          "position": 704
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\application\\services\\adb-application-service.ts",
        "start": 60,
        "end": 73,
        "startLoc": {
          "line": 60,
          "column": 5,
          "position": 376
        },
        "endLoc": {
          "line": 73,
          "column": 12,
          "position": 487
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "();\r\n\r\n      console.log('✅ [AdbApplicationService] ADB环境初始化完成');\r\n      \r\n    } catch (error) {\r\n      const errorObj = error instanceof Error ? error : new Error(String(error));\r\n      StoreOperations.setError(errorObj);\r\n      console.error('❌ [AdbApplicationService] ADB环境初始化失败:', error);\r\n      throw errorObj;\r\n    } finally {\r\n      store.setInitializing(false);\r\n    }\r\n  }\r\n\r\n  // ===== 设备管理 =====",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\adb-application-service.ts",
        "start": 115,
        "end": 129,
        "startLoc": {
          "line": 115,
          "column": 25,
          "position": 905
        },
        "endLoc": {
          "line": 129,
          "column": 20,
          "position": 1026
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\application\\services\\adb-application-service.ts",
        "start": 80,
        "end": 94,
        "startLoc": {
          "line": 80,
          "column": 15,
          "position": 537
        },
        "endLoc": {
          "line": 94,
          "column": 32,
          "position": 658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "${devices.length} 台设备`);\r\n      return devices;\r\n    }, '刷新设备列表');\r\n  }\r\n\r\n  /**\r\n   * 连接设备\r\n   */\r\n  async connectDevice(address: string): Promise<void> {\r\n    await StoreOperations.withLoadingAndErrorHandling(async () => {\r\n      await this.deviceManager.connectToDevice(address);\r\n      \r\n      // 刷新设备列表\r\n      await this.refreshDevices();\r\n    }, `连接设备 ${address}`);\r\n  }\r\n\r\n  /**\r\n   * 断开设备连接\r\n   */\r\n  async disconnectDevice(deviceId: string): Promise<void> {\r\n    await StoreOperations.withLoadingAndErrorHandling(async () => {\r\n      // 取消该设备的所有查询",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\adb-application-service.ts",
        "start": 139,
        "end": 161,
        "startLoc": {
          "line": 139,
          "column": 40,
          "position": 1109
        },
        "endLoc": {
          "line": 161,
          "column": 14,
          "position": 1274
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\application\\services\\DeviceManagementService.ts",
        "start": 29,
        "end": 51,
        "startLoc": {
          "line": 29,
          "column": 42,
          "position": 176
        },
        "endLoc": {
          "line": 51,
          "column": 6,
          "position": 341
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "await this.deviceManager.disconnectDevice(deviceId);\r\n      \r\n      // 如果断开的是当前选中的设备，清除选择\r\n      const store = StoreOperations.getStore();\r\n      if (store.selectedDeviceId === deviceId) {\r\n        StoreOperations.selectDevice(null);\r\n      }\r\n      \r\n      // 刷新设备列表\r\n      await this.refreshDevices();\r\n    }, `断开设备 ${deviceId}`);\r\n  }\r\n\r\n  /**\r\n   * 选择设备\r\n   */\r\n  selectDevice(deviceId: string | null): void {\r\n    if (deviceId) {\r\n      const store = StoreOperations.getStore();\r\n      const device = store.devices.find(d => d.id === deviceId);\r\n      if (!device) {\r\n        throw new Error(`设备 ${deviceId} 不存在`);\r\n      }\r\n    }\r\n    StoreOperations.selectDevice(deviceId);\r\n  }\r\n\r\n  /**\r\n   * 获取设备详细信息\r\n   */\r\n  async getDeviceInfo(deviceId: string): Promise<Record<string, string> | null> {\r\n    return await this.deviceManager.getDeviceInfo(deviceId);\r\n  }\r\n\r\n  // ===== 连接管理 =====",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\adb-application-service.ts",
        "start": 164,
        "end": 198,
        "startLoc": {
          "line": 164,
          "column": 7,
          "position": 1292
        },
        "endLoc": {
          "line": 198,
          "column": 20,
          "position": 1576
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\application\\services\\DeviceManagementService.ts",
        "start": 51,
        "end": 87,
        "startLoc": {
          "line": 51,
          "column": 7,
          "position": 341
        },
        "endLoc": {
          "line": 87,
          "column": 6,
          "position": 625
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "/**\r\n   * 测试ADB连接\r\n   */\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      return await this.connectionService.testConnection();\r\n    } catch (error) {\r\n      console.error('Connection test failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 启动ADB服务器\r\n   */\r\n  async startAdbServer(): Promise<void> {\r\n    await StoreOperations.withLoadingAndErrorHandling(async () => {\r\n      await this.connectionService.startServer();\r\n      \r\n      // 等待一段时间后刷新设备列表",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\services\\adb-application-service.ts",
        "start": 200,
        "end": 219,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1582
        },
        "endLoc": {
          "line": 219,
          "column": 17,
          "position": 1717
        }
      },
      "secondFile": {
        "name": "src\\modules\\adb\\application\\services\\ConnectionManagementService.ts",
        "start": 32,
        "end": 50,
        "startLoc": {
          "line": 32,
          "column": 3,
          "position": 203
        },
        "endLoc": {
          "line": 50,
          "column": 8,
          "position": 336
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    console",
      "tokens": 0,
      "firstFile": {
        "name": "src\\application\\analysis\\devTracer.ts",
        "start": 80,
        "end": 85,
        "startLoc": {
          "line": 80,
          "column": 13,
          "position": 700
        },
        "endLoc": {
          "line": 85,
          "column": 8,
          "position": 767
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\hooks\\useLayoutVersions.ts",
        "start": 166,
        "end": 171,
        "startLoc": {
          "line": 166,
          "column": 2,
          "position": 1708
        },
        "endLoc": {
          "line": 171,
          "column": 2,
          "position": 1775
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const match = boundsStr.match(/\\[(\\d+),(\\d+)\\]\\[(\\d+),(\\d+)\\]/);\r\n    if (match) {\r\n      return {\r\n        left: parseInt(match[1]),\r\n        top: parseInt(match[2]),\r\n        right: parseInt(match[3]),\r\n        bottom: parseInt(match[4]),",
      "tokens": 0,
      "firstFile": {
        "name": "src\\api\\universal-ui\\UniversalUIAPI.ts",
        "start": 190,
        "end": 196,
        "startLoc": {
          "line": 190,
          "column": 5,
          "position": 1740
        },
        "endLoc": {
          "line": 196,
          "column": 2,
          "position": 1824
        }
      },
      "secondFile": {
        "name": "src\\modules\\intelligent-strategy-system\\optimization\\RegionLimitedSearchOptimizer.ts",
        "start": 368,
        "end": 375,
        "startLoc": {
          "line": 368,
          "column": 7,
          "position": 2556
        },
        "endLoc": {
          "line": 375,
          "column": 2,
          "position": 2643
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "interface SmartExecutionResult {\r\n  success: boolean;\r\n  total_steps: number;\r\n  executed_steps: number;\r\n  failed_steps: number;\r\n  skipped_steps: number;\r\n  duration_ms: number;\r\n  logs: any[];\r\n  final_page_state?: string;\r\n  extracted_data: Record<string, any>;\r\n  message: string;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\types\\smartScript.ts",
        "start": 37,
        "end": 48,
        "startLoc": {
          "line": 37,
          "column": 2,
          "position": 272
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 368
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\helpers\\executeScript.ts",
        "start": 18,
        "end": 29,
        "startLoc": {
          "line": 18,
          "column": 1,
          "position": 115
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\r\n}\r\n\r\nexport interface SmartExecutionResult {\r\n  success: boolean;\r\n  total_steps: number;\r\n  executed_steps: number;\r\n  failed_steps: number;\r\n  skipped_steps: number;\r\n  duration_ms: number;\r\n  logs: any[];\r\n  final_page_state?: string;\r\n  extracted_data: Record<string, any>;\r\n  message: string;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\types\\execution.ts",
        "start": 11,
        "end": 25,
        "startLoc": {
          "line": 11,
          "column": 8,
          "position": 65
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 171
        }
      },
      "secondFile": {
        "name": "src\\types\\smartScript.ts",
        "start": 34,
        "end": 29,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 262
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": (fieldName: string, value: any) => {\r\n    set((state) => ({\r\n      context: {\r\n        ...state.context,\r\n        customFields: {\r\n          ...state.context.customFields,\r\n          [fieldName]: value,\r\n        },\r\n      },\r\n    }));\r\n  },\r\n\r\n  updatePreview",
      "tokens": 0,
      "firstFile": {
        "name": "src\\stores\\ui-element-selection-store.ts",
        "start": 378,
        "end": 390,
        "startLoc": {
          "line": 378,
          "column": 18,
          "position": 3037
        },
        "endLoc": {
          "line": 390,
          "column": 14,
          "position": 3137
        }
      },
      "secondFile": {
        "name": "src\\stores\\ui-element-selection-store.ts",
        "start": 354,
        "end": 366,
        "startLoc": {
          "line": 354,
          "column": 15,
          "position": 2828
        },
        "endLoc": {
          "line": 366,
          "column": 18,
          "position": 2928
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "(\r\n    text: string,\r\n    contentDesc: string,\r\n    bounds: { x: number; y: number; width: number; height: number },\r\n    centerX: number,\r\n    centerY: number,\r\n    clickable: boolean,\r\n    appContext: RealElementAnalysis['appContext']\r\n  ): RealElementAnalysis {\r\n    \r\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\xml-analysis-service.ts",
        "start": 271,
        "end": 281,
        "startLoc": {
          "line": 271,
          "column": 22,
          "position": 2293
        },
        "endLoc": {
          "line": 281,
          "column": 7,
          "position": 2391
        }
      },
      "secondFile": {
        "name": "src\\services\\xml-analysis-service.ts",
        "start": 179,
        "end": 189,
        "startLoc": {
          "line": 179,
          "column": 26,
          "position": 1438
        },
        "endLoc": {
          "line": 189,
          "column": 6,
          "position": 1536
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "export interface CsvValidationResult {\r\n  totalRows: number;\r\n  validRows: number;\r\n  invalidRows: number;\r\n  results: RowValidationResult[];\r\n  globalErrors: ValidationError[];\r\n  stats: {\r\n    byPlatform: Record<Platform, number>;\r\n    byType: Record<TargetType, number>;\r\n    bySource: Record<SourceType, number>;\r\n  };\r\n}\r\n\r\n// ==================== 数据模型 ====================\r\n\r\n/**\r\n * 候选池记录接口（规范化后）\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 68,
        "end": 85,
        "startLoc": {
          "line": 68,
          "column": 1,
          "position": 335
        },
        "endLoc": {
          "line": 85,
          "column": 4,
          "position": 452
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 53,
        "end": 68,
        "startLoc": {
          "line": 53,
          "column": 1,
          "position": 298
        },
        "endLoc": {
          "line": 68,
          "column": 7,
          "position": 415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "export interface CsvRawRecord {\r\n  type?: string;\r\n  platform?: string;\r\n  id_or_url?: string;\r\n  title?: string;\r\n  source?: string;\r\n  industry_tags?: string;\r\n  region?: string;\r\n  notes?: string;\r\n  [key: string]: any; // 允许额外字段",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 101,
        "end": 110,
        "startLoc": {
          "line": 101,
          "column": 1,
          "position": 549
        },
        "endLoc": {
          "line": 110,
          "column": 10,
          "position": 642
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 1,
          "position": 506
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 600
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "/**\r\n   * 验证完整的CSV数据\r\n   */\r\n  async validateCsvData(csvData: CsvRawRecord[]): Promise<CsvValidationResult> {\r\n    const results: RowValidationResult[] = [];\r\n    const globalErrors: ValidationError[] = [];\r\n    const dedupKeys = new Set<string>();\r\n    \r\n    // 统计信息\r\n    const stats = {\r\n      byPlatform: {} as Record<Platform, number>,\r\n      byType: {} as Record<TargetType, number>,\r\n      bySource: {} as Record<SourceType, number>\r\n    };\r\n\r\n    // 初始化统计\r\n    Object.values(Platform).forEach(p => stats.byPlatform[p] = 0);\r\n    Object.values(TargetType).forEach(t => stats.byType[t] = 0);\r\n    Object.values(SourceType).forEach(s => stats.bySource[s] = 0);\r\n\r\n    // 验证表头",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 176,
        "end": 196,
        "startLoc": {
          "line": 176,
          "column": 3,
          "position": 1013
        },
        "endLoc": {
          "line": 196,
          "column": 8,
          "position": 1260
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 116,
        "end": 136,
        "startLoc": {
          "line": 116,
          "column": 3,
          "position": 747
        },
        "endLoc": {
          "line": 136,
          "column": 9,
          "position": 994
        }
      }
    },
    {
      "format": "typescript",
      "lines": 63,
      "fragment": "if (csvData.length === 0) {\r\n      globalErrors.push({\r\n        code: ValidationErrorCode.E_REQUIRED,\r\n        field: 'csv',\r\n        value: '',\r\n        message: 'CSV文件为空',\r\n        suggestion: '请确保CSV文件包含数据行'\r\n      });\r\n    }\r\n\r\n    // 逐行验证\r\n    for (let i = 0; i < csvData.length; i++) {\r\n      const rowResult = await this.validateRow(csvData[i], i + 1, dedupKeys);\r\n      results.push(rowResult);\r\n\r\n      // 更新统计\r\n      if (rowResult.isValid && rowResult.normalizedData) {\r\n        const { platform, type, source } = rowResult.normalizedData;\r\n        stats.byPlatform[platform]++;\r\n        stats.byType[type]++;\r\n        stats.bySource[source]++;\r\n      }\r\n    }\r\n\r\n    const validRows = results.filter(r => r.isValid).length;\r\n\r\n    return {\r\n      totalRows: csvData.length,\r\n      validRows,\r\n      invalidRows: csvData.length - validRows,\r\n      results,\r\n      globalErrors,\r\n      stats\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 验证单行数据\r\n   */\r\n  private async validateRow(\r\n    raw: CsvRawRecord, \r\n    rowIndex: number, \r\n    dedupKeys: Set<string>\r\n  ): Promise<RowValidationResult> {\r\n    const errors: ValidationError[] = [];\r\n    const warnings: ValidationError[] = [];\r\n\r\n    // 1. 必填字段验证\r\n    this.validateRequiredFields(raw, errors);\r\n\r\n    // 2. 枚举字段验证\r\n    const platform = this.validatePlatform(raw.platform, errors);\r\n    const targetType = this.validateTargetType(raw.type, errors);\r\n    const sourceType = this.validateSourceType(raw.source, errors);\r\n\r\n    // 3. URL格式验证\r\n    const normalizedUrl = this.validateUrl(raw.id_or_url, platform, errors);\r\n\r\n    // 4. 标签验证\r\n    const industryTags = this.validateIndustryTags(raw.industry_tags, errors, warnings);\r\n    const regionTag = this.validateRegionTag(raw.region, errors, warnings);\r\n\r\n    // 5. 合规性验证",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 197,
        "end": 259,
        "startLoc": {
          "line": 197,
          "column": 5,
          "position": 1264
        },
        "endLoc": {
          "line": 259,
          "column": 12,
          "position": 1850
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 137,
        "end": 199,
        "startLoc": {
          "line": 137,
          "column": 5,
          "position": 998
        },
        "endLoc": {
          "line": 199,
          "column": 18,
          "position": 1584
        }
      }
    },
    {
      "format": "typescript",
      "lines": 219,
      "fragment": ".push({\r\n          code: ValidationErrorCode.E_DUP,\r\n          field: 'dedup_key',\r\n          value: dedupKey,\r\n          message: '重复记录：相同平台和URL的记录已存在',\r\n          suggestion: '重复记录将被视为更新操作'\r\n        });\r\n      } else {\r\n        dedupKeys.add(dedupKey);\r\n      }\r\n\r\n      // 构建规范化数据\r\n      normalizedData = {\r\n        type: targetType,\r\n        platform,\r\n        id_or_url: normalizedUrl,\r\n        title: raw.title?.trim() || undefined,\r\n        source: sourceType,\r\n        industry_tags: industryTags,\r\n        region: regionTag,\r\n        notes: raw.notes?.trim() || undefined,\r\n        dedup_key: dedupKey\r\n      };\r\n    }\r\n\r\n    return {\r\n      rowIndex,\r\n      originalData: raw,\r\n      normalizedData,\r\n      errors,\r\n      warnings,\r\n      isValid: errors.length === 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 验证必填字段\r\n   */\r\n  private validateRequiredFields(raw: CsvRawRecord, errors: ValidationError[]): void {\r\n    const requiredFields = ['type', 'platform', 'id_or_url', 'source'];\r\n    \r\n    for (const field of requiredFields) {\r\n      if (!raw[field]?.toString().trim()) {\r\n        errors.push({\r\n          code: ValidationErrorCode.E_REQUIRED,\r\n          field,\r\n          value: raw[field],\r\n          message: `必填字段 \"${field}\" 不能为空`,\r\n          suggestion: `请填写 ${field} 字段的值`\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证平台枚举\r\n   */\r\n  private validatePlatform(value: any, errors: ValidationError[]): Platform | null {\r\n    if (!value) return null;\r\n    \r\n    const normalized = value.toString().toLowerCase().trim();\r\n    const platformValue = Object.values(Platform).find(p => p === normalized);\r\n    \r\n    if (!platformValue) {\r\n      errors.push({\r\n        code: ValidationErrorCode.E_ENUM,\r\n        field: 'platform',\r\n        value,\r\n        message: `平台值 \"${value}\" 不在允许范围内`,\r\n        suggestion: `请使用: ${Object.values(Platform).join(', ')}`\r\n      });\r\n      return null;\r\n    }\r\n    \r\n    return platformValue;\r\n  }\r\n\r\n  /**\r\n   * 验证目标类型枚举\r\n   */\r\n  private validateTargetType(value: any, errors: ValidationError[]): TargetType | null {\r\n    if (!value) return null;\r\n    \r\n    const normalized = value.toString().toLowerCase().trim();\r\n    const typeValue = Object.values(TargetType).find(t => t === normalized);\r\n    \r\n    if (!typeValue) {\r\n      errors.push({\r\n        code: ValidationErrorCode.E_ENUM,\r\n        field: 'type',\r\n        value,\r\n        message: `目标类型 \"${value}\" 不在允许范围内`,\r\n        suggestion: `请使用: ${Object.values(TargetType).join(', ')}`\r\n      });\r\n      return null;\r\n    }\r\n    \r\n    return typeValue;\r\n  }\r\n\r\n  /**\r\n   * 验证来源类型枚举\r\n   */\r\n  private validateSourceType(value: any, errors: ValidationError[]): SourceType | null {\r\n    if (!value) return null;\r\n    \r\n    const normalized = value.toString().toLowerCase().trim();\r\n    const sourceValue = Object.values(SourceType).find(s => s === normalized);\r\n    \r\n    if (!sourceValue) {\r\n      errors.push({\r\n        code: ValidationErrorCode.E_ENUM,\r\n        field: 'source',\r\n        value,\r\n        message: `来源类型 \"${value}\" 不在允许范围内`,\r\n        suggestion: `请使用: ${Object.values(SourceType).join(', ')}`\r\n      });\r\n      return null;\r\n    }\r\n    \r\n    return sourceValue;\r\n  }\r\n\r\n  /**\r\n   * 验证URL格式\r\n   */\r\n  private validateUrl(value: any, platform: Platform | null, errors: ValidationError[]): string | null {\r\n    if (!value || !platform) return null;\r\n    \r\n    const url = value.toString().trim();\r\n    \r\n    // 基础URL格式检查\r\n    try {\r\n      new URL(url);\r\n    } catch {\r\n      errors.push({\r\n        code: ValidationErrorCode.E_URL,\r\n        field: 'id_or_url',\r\n        value,\r\n        message: 'URL格式无效',\r\n        suggestion: '请提供完整的HTTP/HTTPS URL'\r\n      });\r\n      return null;\r\n    }\r\n\r\n    // 平台特定格式检查\r\n    const patterns = URL_PATTERNS[platform];\r\n    if (patterns && !patterns.some(pattern => pattern.test(url))) {\r\n      errors.push({\r\n        code: ValidationErrorCode.E_URL,\r\n        field: 'id_or_url',\r\n        value,\r\n        message: `URL格式不符合 ${platform} 平台规范`,\r\n        suggestion: `请检查URL格式是否正确`\r\n      });\r\n      return null;\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * 验证行业标签\r\n   */\r\n  private validateIndustryTags(\r\n    value: any, \r\n    errors: ValidationError[], \r\n    warnings: ValidationError[]\r\n  ): IndustryTag[] {\r\n    if (!value?.toString().trim()) {\r\n      return [];\r\n    }\r\n\r\n    const tagsString = value.toString().trim();\r\n    const { valid, invalid } = parseIndustryTagsString(tagsString);\r\n\r\n    // 处理无效标签\r\n    for (const invalidTag of invalid) {\r\n      // 尝试映射外部标签\r\n      const mapped = mapExternalTagToInternal(invalidTag);\r\n      if (mapped) {\r\n        valid.push(mapped);\r\n        warnings.push({\r\n          code: ValidationErrorCode.E_TAG_INVALID,\r\n          field: 'industry_tags',\r\n          value: invalidTag,\r\n          message: `标签 \"${invalidTag}\" 已自动映射为 \"${getIndustryTagLabel(mapped)}\"`,\r\n          suggestion: '建议使用标准标签名称'\r\n        });\r\n      } else {\r\n        errors.push({\r\n          code: ValidationErrorCode.E_TAG_INVALID,\r\n          field: 'industry_tags',\r\n          value: invalidTag,\r\n          message: `无效的行业标签: \"${invalidTag}\"`,\r\n          suggestion: '请使用标准行业标签或联系管理员添加新标签'\r\n        });\r\n      }\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  /**\r\n   * 验证地域标签\r\n   */\r\n  private validateRegionTag(\r\n    value: any, \r\n    errors: ValidationError[], \r\n    warnings: ValidationError[]\r\n  ): RegionTag | undefined {\r\n    if (!value?.toString().trim()) {\r\n      return undefined;\r\n    }\r\n\r\n    const regionString = value.toString().trim();\r\n    \r\n    // 直接匹配标准枚举\r\n    const directMatch = Object.values(RegionTag).find(r => r === regionString.",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 272,
        "end": 490,
        "startLoc": {
          "line": 272,
          "column": 7,
          "position": 1987
        },
        "endLoc": {
          "line": 490,
          "column": 2,
          "position": 3814
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 207,
        "end": 425,
        "startLoc": {
          "line": 207,
          "column": 9,
          "position": 1676
        },
        "endLoc": {
          "line": 425,
          "column": 2,
          "position": 3503
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": ");\r\n    if (directMatch) {\r\n      return directMatch;\r\n    }\r\n\r\n    // 尝试映射外部标签\r\n    const mapped = mapExternalRegionToInternal(regionString);\r\n    if (mapped) {\r\n      warnings.push({\r\n        code: ValidationErrorCode.E_TAG_INVALID,\r\n        field: 'region',\r\n        value: regionString,\r\n        message: `地域标签 \"${regionString}\" 已自动映射为 \"${getRegionTagLabel(mapped)}\"`,\r\n        suggestion: '建议使用标准地域标签名称'\r\n      });\r\n      return mapped;\r\n    }\r\n\r\n    errors.push({\r\n      code: ValidationErrorCode.E_TAG_INVALID,\r\n      field: 'region',\r\n      value: regionString,\r\n      message: `无效的地域标签: \"${regionString}\"`,\r\n      suggestion: '请使用标准地域标签'\r\n    });\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * 验证公开来源的合规性\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 490,
        "end": 521,
        "startLoc": {
          "line": 490,
          "column": 2,
          "position": 3818
        },
        "endLoc": {
          "line": 521,
          "column": 6,
          "position": 4027
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 425,
        "end": 456,
        "startLoc": {
          "line": 425,
          "column": 13,
          "position": 3503
        },
        "endLoc": {
          "line": 456,
          "column": 6,
          "position": 3712
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "}\r\n\r\n  /**\r\n   * 生成去重键\r\n   */\r\n  private generateDedupKey(platform: Platform, url: string): string {\r\n    return `${platform}:${url}`;\r\n  }\r\n\r\n  /**\r\n   * 生成CSV模板\r\n   */\r\n  generateCsvTemplate(): string {\r\n    const headers = [\r\n      'type',\r\n      'platform', \r\n      'id_or_url',\r\n      'title',\r\n      'source',\r\n      'industry_tags',\r\n      'region',\r\n      'notes'\r\n    ];\r\n\r\n    const examples = [\r\n      [\r\n        'video',\r\n        'douyin',\r\n        'https://www.douyin.com/video/xxxx',\r\n        '示例视频',\r\n        'csv',\r\n        'oral-care;medical-health'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 574,
        "end": 605,
        "startLoc": {
          "line": 574,
          "column": 3,
          "position": 4469
        },
        "endLoc": {
          "line": 605,
          "column": 27,
          "position": 4633
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 452,
        "end": 483,
        "startLoc": {
          "line": 452,
          "column": 3,
          "position": 3706
        },
        "endLoc": {
          "line": 483,
          "column": 10,
          "position": 3870
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ",\r\n        '美妆博主账号'\r\n      ]\r\n    ];\r\n\r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...examples.map(row => row.join(','))\r\n    ].join('\\n');\r\n\r\n    return csvContent;\r\n  }\r\n\r\n  /**\r\n   * 格式化验证错误为用户友好的消息\r\n   */\r\n  formatValidationErrors(errors: ValidationError[]): string {\r\n    return errors.map(error => {\r\n      let message = `[${error.code}] ${error.field}: ${error.message}`;\r\n      if (error.suggestion) {\r\n        message += ` (${error.suggestion})`;\r\n      }\r\n      return message;\r\n    }).join('\\n');\r\n  }\r\n\r\n  /**\r\n   * 更新白名单配置\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\validation-csv-import-service.ts",
        "start": 616,
        "end": 644,
        "startLoc": {
          "line": 616,
          "column": 13,
          "position": 4687
        },
        "endLoc": {
          "line": 644,
          "column": 6,
          "position": 4889
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\SimplifiedCsvValidationService.ts",
        "start": 494,
        "end": 519,
        "startLoc": {
          "line": 494,
          "column": 5,
          "position": 3924
        },
        "endLoc": {
          "line": 519,
          "column": 2,
          "position": 4123
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "];\r\n            try {\r\n              const result = await this.executeActionOnElement(element, action);\r\n              results.push({ elementId: element.id, success: true, result });\r\n            } catch (error) {\r\n              results.push({ \r\n                elementId: element.id, \r\n                success: false, \r\n                error: error instanceof Error ? error.message : 'Unknown error'\r\n              });\r\n            }\r\n          }\r\n          break;\r\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\matching-integration.ts",
        "start": 268,
        "end": 281,
        "startLoc": {
          "line": 268,
          "column": 12,
          "position": 2257
        },
        "endLoc": {
          "line": 281,
          "column": 2,
          "position": 2395
        }
      },
      "secondFile": {
        "name": "src\\services\\matching-integration.ts",
        "start": 250,
        "end": 264,
        "startLoc": {
          "line": 250,
          "column": 2,
          "position": 2055
        },
        "endLoc": {
          "line": 264,
          "column": 5,
          "position": 2195
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "/**\r\n * UI元素原始数据结构（从XML解析）\r\n */\r\ninterface RawUIElement {\r\n  text: string;\r\n  'resource-id': string;\r\n  class: string;\r\n  'content-desc': string;\r\n  bounds: string; // \"[left,top][right,bottom]\" 格式\r\n  clickable: string;\r\n  enabled: string;\r\n  focusable: string;\r\n  focused: string;\r\n  selected: string;\r\n  scrollable: string;\r\n  'long-clickable': string;\r\n  checkable: string;\r\n  checked: string;\r\n  password: string;\r\n  [key: string]: string;\r\n}\r\n\r\n// ========== 类型定义 ==========",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\matching-batch-engine.ts",
        "start": 15,
        "end": 37,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 57
        },
        "endLoc": {
          "line": 37,
          "column": 30,
          "position": 207
        }
      },
      "secondFile": {
        "name": "src\\services\\matching-custom-engine.ts",
        "start": 24,
        "end": 46,
        "startLoc": {
          "line": 24,
          "column": 1,
          "position": 103
        },
        "endLoc": {
          "line": 46,
          "column": 7,
          "position": 253
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\r\n      conditions: {\r\n        className: {\r\n          mode: 'contains' as const,\r\n          value: 'Button'\r\n        },\r\n        attributes: {\r\n          clickable: true,\r\n          enabled: true\r\n        }\r\n      },\r\n      options: {\r\n        maxMatches: 0,\r\n        order: 'document' as const,\r\n        deduplicate: true\r\n      }\r\n    },\r\n    example",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\matching-batch-engine.ts",
        "start": 134,
        "end": 151,
        "startLoc": {
          "line": 134,
          "column": 5,
          "position": 940
        },
        "endLoc": {
          "line": 151,
          "column": 8,
          "position": 1056
        }
      },
      "secondFile": {
        "name": "src\\types\\customMatching.ts",
        "start": 234,
        "end": 252,
        "startLoc": {
          "line": 234,
          "column": 15,
          "position": 1302
        },
        "endLoc": {
          "line": 252,
          "column": 13,
          "position": 1420
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\r\n      bounds,\r\n      attributes: {\r\n        clickable: raw.clickable === 'true',\r\n        enabled: raw.enabled === 'true',\r\n        focusable: raw.focusable === 'true',\r\n        focused: raw.focused === 'true',\r\n        selected: raw.selected === 'true',\r\n        scrollable: raw.scrollable === 'true',\r\n        longClickable: raw['long-clickable'] === 'true',\r\n        checkable: raw.checkable === 'true',\r\n        checked: raw.checked === 'true',\r\n        password: raw.password === 'true'\r\n      },\r\n      confidence: 1.0",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\matching-batch-engine.ts",
        "start": 318,
        "end": 332,
        "startLoc": {
          "line": 318,
          "column": 2,
          "position": 2438
        },
        "endLoc": {
          "line": 332,
          "column": 4,
          "position": 2602
        }
      },
      "secondFile": {
        "name": "src\\services\\matching-custom-engine.ts",
        "start": 285,
        "end": 299,
        "startLoc": {
          "line": 285,
          "column": 3,
          "position": 2334
        },
        "endLoc": {
          "line": 299,
          "column": 2,
          "position": 2498
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "private chunkArray<T>(array: T[], size: number): T[][] {\r\n    const chunks: T[][] = [];\r\n    for (let i = 0; i < array.length; i += size) {\r\n      chunks.push(array.slice(i, i + size));\r\n    }\r\n    return chunks;\r\n  }\r\n\r\n  /**\r\n   * 延迟函数\r\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\matching-batch-engine.ts",
        "start": 633,
        "end": 643,
        "startLoc": {
          "line": 633,
          "column": 3,
          "position": 5284
        },
        "endLoc": {
          "line": 643,
          "column": 6,
          "position": 5406
        }
      },
      "secondFile": {
        "name": "src\\services\\matching-integration.ts",
        "start": 352,
        "end": 359,
        "startLoc": {
          "line": 352,
          "column": 3,
          "position": 3034
        },
        "endLoc": {
          "line": 359,
          "column": 2,
          "position": 3153
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\r\n      const result: VcfImportResult = {\r\n        success: !!res?.success,\r\n        totalContacts: Number(res?.total_contacts ?? 0),\r\n        importedContacts: Number(res?.imported_contacts ?? 0),\r\n        failedContacts: Number(res?.failed_contacts ?? 0),\r\n        message: res?.message ?? \"\",\r\n        details: undefined,\r\n      };\r\n      console.log(\"VCF导入完成（多品牌）:\"",
      "tokens": 0,
      "firstFile": {
        "name": "src\\services\\contact-vcf-import-service.ts",
        "start": 109,
        "end": 118,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 876
        },
        "endLoc": {
          "line": 118,
          "column": 16,
          "position": 997
        }
      },
      "secondFile": {
        "name": "src\\services\\contact-vcf-import-service.ts",
        "start": 49,
        "end": 58,
        "startLoc": {
          "line": 49,
          "column": 2,
          "position": 348
        },
        "endLoc": {
          "line": 58,
          "column": 19,
          "position": 469
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ": React.FC = () => {\r\n  const { selectedDevice } = useAdb();\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [isClicking, setIsClicking] = useState(false);\r\n  const [detectionResult, setDetectionResult] = useState<any>(null);\r\n  const [",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\TestCommandFix.tsx",
        "start": 17,
        "end": 22,
        "startLoc": {
          "line": 17,
          "column": 15,
          "position": 145
        },
        "endLoc": {
          "line": 22,
          "column": 2,
          "position": 241
        }
      },
      "secondFile": {
        "name": "src\\components\\debug\\QuickAppSelectorTest.tsx",
        "start": 15,
        "end": 21,
        "startLoc": {
          "line": 15,
          "column": 21,
          "position": 111
        },
        "endLoc": {
          "line": 21,
          "column": 9,
          "position": 209
        }
      }
    },
    {
      "format": "javascript",
      "lines": 41,
      "fragment": "={{\r\n      padding: '20px',\r\n      background: '#0F172A',\r\n      minHeight: '100vh',\r\n      color: '#F8FAFC'\r\n    }}>\r\n      <div style={{\r\n        maxWidth: '800px',\r\n        margin: '0 auto'\r\n      }}>\r\n        <h1 style={{ \r\n          marginBottom: '20px',\r\n          color: '#6E8BFF',\r\n          textAlign: 'center'\r\n        }}>\r\n          🚀 策略选择器真实后端集成演示\r\n        </h1>\r\n        \r\n        <div style={{ marginBottom: '20px' }}>\r\n          <h2 style={{ fontSize: '18px', marginBottom: '10px' }}>真实后端功能：</h2>\r\n          <ul style={{ \r\n            fontSize: '14px', \r\n            lineHeight: '1.6',\r\n            color: '#CBD5E1',\r\n            listStyle: 'none',\r\n            padding: 0\r\n          }}>\r\n            <li>🔗 <strong>Tauri 后端集成</strong>：调用 Rust 后端的智能分析服务</li>\r\n            <li>📊 <strong>实时进度监控</strong>：通过事件监听获取真实分析进度</li>\r\n            <li>🧠 <strong>智能候选生成</strong>：Step1~Step6 真实分析结果</li>\r\n            <li>📌 <strong>静态策略管理</strong>：与用户策略库真实交互</li>\r\n            <li>✨ <strong>推荐算法</strong>：基于置信度的智能推荐</li>\r\n            <li>⚡ <strong>任务管理</strong>：支持取消、重试等完整任务控制</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div style={{\r\n          background: '#1E293B',\r\n          borderRadius: '12px',\r\n          padding: '20px',\r\n          border: '1px solid #334155',",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\StrategyBackendDemo.tsx",
        "start": 66,
        "end": 106,
        "startLoc": {
          "line": 66,
          "column": 6,
          "position": 551
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 892
        }
      },
      "secondFile": {
        "name": "src\\pages\\StrategyDemo.tsx",
        "start": 196,
        "end": 236,
        "startLoc": {
          "line": 196,
          "column": 6,
          "position": 1652
        },
        "endLoc": {
          "line": 236,
          "column": 9,
          "position": 1974
        }
      }
    },
    {
      "format": "javascript",
      "lines": 49,
      "fragment": "\r\n          }}>\r\n            <div><strong>XPath:</strong> {mockElement.xpath}</div>\r\n            <div><strong>Text:</strong> {mockElement.text}</div>\r\n            <div><strong>Resource ID:</strong> {mockElement.resource_id}</div>\r\n            <div><strong>Class:</strong> {mockElement.class_name}</div>\r\n            <div><strong>Bounds:</strong> {JSON.stringify(mockElement.bounds)}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{\r\n          background: '#1E293B',\r\n          borderRadius: '12px',\r\n          padding: '20px',\r\n          border: '1px solid #334155'\r\n        }}>\r\n          <SmartStepCardWithBackend\r\n            step={mockStep}\r\n            index={0}\r\n            devices={mockDevices}\r\n            currentDeviceId=\"device1\"\r\n            element={mockElement}\r\n            onEdit={(step) => {\r\n              console.log('编辑步骤:', step);\r\n              setMockStep(step);\r\n            }}\r\n            onDelete={(id) => console.log('删除步骤:', id)}\r\n            onToggle={(id) => {\r\n              console.log('切换启用状态:', id);\r\n              setMockStep(prev => ({ ...prev, enabled: !prev.enabled }));\r\n            }}\r\n            onStepUpdate={handleStepUpdate}\r\n          />\r\n        </div>\r\n\r\n        <div style={{\r\n          marginTop: '20px',\r\n          padding: '15px',\r\n          background: '#334155',\r\n          borderRadius: '8px',\r\n          fontSize: '14px',\r\n          color: '#E2E8F0'\r\n        }}>\r\n          <h3 style={{ margin: '0 0 10px 0', color: '#F8FAFC' }}>🔧 后端集成特性：</h3>\r\n          <p style={{ margin: '5px 0' }}>• <strong>真实分析</strong>：点击\"🔄 重新分析\"调用 Rust 后端智能分析</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>实时进度</strong>：分析进度通过 Tauri 事件实时更新</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>候选策略</strong>：智能和静态策略来自真实后端分析</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>推荐系统</strong>：基于置信度的智能推荐算法</p>\r\n          <p style={{ margin: '5px 0' }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\StrategyBackendDemo.tsx",
        "start": 121,
        "end": 169,
        "startLoc": {
          "line": 121,
          "column": 12,
          "position": 975
        },
        "endLoc": {
          "line": 169,
          "column": 2,
          "position": 1554
        }
      },
      "secondFile": {
        "name": "src\\pages\\StrategyDemo.tsx",
        "start": 221,
        "end": 270,
        "startLoc": {
          "line": 221,
          "column": 2,
          "position": 1822
        },
        "endLoc": {
          "line": 270,
          "column": 2,
          "position": 2365
        }
      }
    },
    {
      "format": "javascript",
      "lines": 10,
      "fragment": " }}>• <strong>真实分析</strong>：点击\"🔄 重新分析\"调用 Rust 后端智能分析</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>实时进度</strong>：分析进度通过 Tauri 事件实时更新</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>候选策略</strong>：智能和静态策略来自真实后端分析</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>推荐系统</strong>：基于置信度的智能推荐算法</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>任务控制</strong>：支持取消正在进行的分析任务</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>策略保存</strong>：将智能策略保存为用户静态策略</p>\r\n        </div>\r\n\r\n        <div style={{\r\n          marginTop",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\StrategyBackendDemo.tsx",
        "start": 165,
        "end": 174,
        "startLoc": {
          "line": 165,
          "column": 8,
          "position": 1418
        },
        "endLoc": {
          "line": 174,
          "column": 20,
          "position": 1618
        }
      },
      "secondFile": {
        "name": "src\\pages\\StrategyDemo.tsx",
        "start": 265,
        "end": 170,
        "startLoc": {
          "line": 265,
          "column": 10,
          "position": 2239
        },
        "endLoc": {
          "line": 170,
          "column": 8,
          "position": 1579
        }
      }
    },
    {
      "format": "javascript",
      "lines": 8,
      "fragment": " }}>\r\n            ✅ 与演示版本的区别：\r\n          </h3>\r\n          <p style={{ margin: '5px 0' }}>• <strong>数据来源</strong>：真实后端分析 vs 模拟数据</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>进度更新</strong>：事件驱动 vs 定时器模拟</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>策略质量</strong>：算法生成 vs 随机生成</p>\r\n          <p style={{ margin: '5px 0' }}>• <strong>任务管理</strong>：真实job管理 vs 前端状态</p>\r\n          <p style={{ margin: '5px 0' }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\StrategyBackendDemo.tsx",
        "start": 181,
        "end": 188,
        "startLoc": {
          "line": 181,
          "column": 10,
          "position": 1670
        },
        "endLoc": {
          "line": 188,
          "column": 2,
          "position": 1842
        }
      },
      "secondFile": {
        "name": "src\\pages\\StrategyDemo.tsx",
        "start": 265,
        "end": 270,
        "startLoc": {
          "line": 265,
          "column": 10,
          "position": 2239
        },
        "endLoc": {
          "line": 270,
          "column": 2,
          "position": 2365
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "}\r\n            onDelete={(id) => console.log('删除步骤:', id)}\r\n            onToggle={(id) => {\r\n              console.log('切换启用状态:', id);\r\n              setMockStep(prev => ({ ...prev, enabled: !prev.enabled }));\r\n            }}\r\n            onStepUpdate",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\StrategyBackendDemo.tsx",
        "start": 146,
        "end": 152,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1229
        },
        "endLoc": {
          "line": 152,
          "column": 13,
          "position": 1314
        }
      },
      "secondFile": {
        "name": "src\\pages\\StrategyDemo.tsx",
        "start": 242,
        "end": 248,
        "startLoc": {
          "line": 242,
          "column": 2,
          "position": 2034
        },
        "endLoc": {
          "line": 248,
          "column": 17,
          "position": 2119
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "const handleToggleStep = (stepId: string) => {\r\n    setSteps((prev) =>\r\n      prev.map((s) => (s.id === stepId ? { ...s, enabled: !s.enabled } : s))\r\n    );\r\n  };\r\n\r\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartScriptBuilderPage_New.tsx",
        "start": 255,
        "end": 261,
        "startLoc": {
          "line": 255,
          "column": 3,
          "position": 2498
        },
        "endLoc": {
          "line": 261,
          "column": 6,
          "position": 2584
        }
      },
      "secondFile": {
        "name": "src\\pages\\SmartScriptBuilderPage\\components\\StepListPanel.tsx",
        "start": 57,
        "end": 63,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 508
        },
        "endLoc": {
          "line": 63,
          "column": 18,
          "position": 594
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "const loadDevices = async () => {\r\n            try {\r\n                await refreshDevices(); // 使用统一的刷新方法\r\n                if (devices.length > 0) {\r\n                    setSelectedDevice(devices[0].id);\r\n                }\r\n            } catch (error) {\r\n                console.error('获取设备列表失败:', error);\r\n            }\r\n        };\r\n\r\n        loadDevices",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\SmartElementFinderTestPage.tsx",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 9,
          "position": 291
        },
        "endLoc": {
          "line": 38,
          "column": 12,
          "position": 394
        }
      },
      "secondFile": {
        "name": "src\\pages\\app-launch-test\\AppLaunchTestPageModular.tsx",
        "start": 45,
        "end": 56,
        "startLoc": {
          "line": 45,
          "column": 3,
          "position": 445
        },
        "endLoc": {
          "line": 56,
          "column": 6,
          "position": 548
        }
      }
    },
    {
      "format": "javascript",
      "lines": 25,
      "fragment": "}} title=\"功能说明\">\r\n          <Space direction=\"vertical\" size=\"middle\" style={{ width: '100%' }}>\r\n            <div>\r\n              <Text strong>🎯 基本操作：</Text>\r\n              <ul style={{ marginTop: 8, marginBottom: 0 }}>\r\n                <li>点击左侧\"添加步骤\"创建新的脚本步骤</li>\r\n                <li>点击步骤卡片进行选择，使用更多操作菜单编辑或删除</li>\r\n                <li>拖拽步骤卡片可以调整执行顺序</li>\r\n                <li>切换步骤的启用/禁用状态</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div>\r\n              <Text strong>⚙️ 步骤编辑：</Text>\r\n              <ul style={{ marginTop: 8, marginBottom: 0 }}>\r\n                <li>支持点击、输入、滑动、等待、截图、循环等多种步骤类型</li>\r\n                <li>每种步骤类型都有专门的参数配置界面</li>\r\n                <li>实时参数验证和错误提示</li>\r\n                <li>高级设置包括延迟、超时、重试等选项</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div>\r\n              <Text strong>🚀 执行控制：</Text>\r\n              <ul style={{ marginTop: 8, marginBottom: 0 }}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\ScriptBuilderTestPage.tsx",
        "start": 290,
        "end": 314,
        "startLoc": {
          "line": 290,
          "column": 10,
          "position": 2341
        },
        "endLoc": {
          "line": 314,
          "column": 2,
          "position": 2619
        }
      },
      "secondFile": {
        "name": "src\\modules\\universal-ui\\pages\\auto-fill-demo.tsx",
        "start": 307,
        "end": 347,
        "startLoc": {
          "line": 307,
          "column": 2,
          "position": 2456
        },
        "endLoc": {
          "line": 347,
          "column": 2,
          "position": 2837
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "const [employees, setEmployees] = useState<EmployeeData[]>([]);\r\n  const [editingEmployee, setEditingEmployee] = useState<EmployeeData | null>(null);\r\n  const [isShowingForm, setIsShowingForm] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isFormLoading, setIsFormLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // 采用原生 AntD 样式：不做额外 token 配色与内联主题覆盖",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\EmployeePage.tsx",
        "start": 20,
        "end": 27,
        "startLoc": {
          "line": 20,
          "column": 3,
          "position": 190
        },
        "endLoc": {
          "line": 27,
          "column": 37,
          "position": 326
        }
      },
      "secondFile": {
        "name": "src\\pages\\EmployeePageBrandNew.tsx",
        "start": 38,
        "end": 45,
        "startLoc": {
          "line": 38,
          "column": 3,
          "position": 240
        },
        "endLoc": {
          "line": 45,
          "column": 30,
          "position": 376
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "const loadEmployees = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const data = await EmployeeAPI.getEmployees();\r\n      setEmployees(data);\r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : '加载员工列表失败');\r\n      console.error('Failed to load employees:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // 组件挂载时加载数据\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  // 处理添加员工",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\EmployeePage.tsx",
        "start": 30,
        "end": 49,
        "startLoc": {
          "line": 30,
          "column": 3,
          "position": 336
        },
        "endLoc": {
          "line": 49,
          "column": 10,
          "position": 508
        }
      },
      "secondFile": {
        "name": "src\\pages\\EmployeePageBrandNew.tsx",
        "start": 52,
        "end": 71,
        "startLoc": {
          "line": 52,
          "column": 3,
          "position": 440
        },
        "endLoc": {
          "line": 71,
          "column": 12,
          "position": 612
        }
      }
    },
    {
      "format": "tsx",
      "lines": 228,
      "fragment": ";\r\n\r\n// 模拟的XML数据来测试调试功能\r\nconst mockXmlData = `<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>\r\n<hierarchy rotation=\"0\">\r\n  <node index=\"0\" text=\"\" resource-id=\"\" class=\"android.widget.FrameLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,0][1080,2340]\">\r\n    <node index=\"0\" text=\"\" resource-id=\"\" class=\"android.widget.LinearLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,0][1080,2340]\">\r\n      <node index=\"0\" text=\"\" resource-id=\"\" class=\"android.widget.FrameLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,0][1080,2280]\">\r\n        <node index=\"0\" text=\"\" resource-id=\"com.xiaohongshu.app:id/fragment_container\" class=\"android.widget.FrameLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,0][1080,2280]\">\r\n          <node index=\"0\" text=\"\" resource-id=\"\" class=\"android.widget.RelativeLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,0][1080,2280]\">\r\n            <node index=\"0\" text=\"\" resource-id=\"com.xiaohongshu.app:id/title_bar\" class=\"android.widget.RelativeLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,90][1080,180]\">\r\n              <node index=\"0\" text=\"联系人\" resource-id=\"com.xiaohongshu.app:id/left_btn\" class=\"android.widget.TextView\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"true\" enabled=\"true\" focusable=\"true\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[30,120][120,150]\" />\r\n              <node index=\"1\" text=\"添加联系人\" resource-id=\"com.xiaohongshu.app:id/title\" class=\"android.widget.TextView\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[480,120][600,150]\" />\r\n              <node index=\"2\" text=\"完成\" resource-id=\"com.xiaohongshu.app:id/right_btn\" class=\"android.widget.TextView\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"true\" enabled=\"true\" focusable=\"true\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[960,120][1050,150]\" />\r\n            </node>\r\n            <node index=\"1\" text=\"\" resource-id=\"com.xiaohongshu.app:id/content_container\" class=\"android.widget.LinearLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,180][1080,2280]\">\r\n              <node index=\"0\" text=\"\" resource-id=\"\" class=\"android.widget.ScrollView\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"true\" focused=\"false\" scrollable=\"true\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,180][1080,2280]\">\r\n                <node index=\"0\" text=\"\" resource-id=\"\" class=\"android.widget.LinearLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[0,180][1080,1800]\">\r\n                  <node index=\"0\" text=\"\" resource-id=\"\" class=\"android.widget.LinearLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[40,240][1040,360]\">\r\n                    <node index=\"0\" text=\"姓名\" resource-id=\"\" class=\"android.widget.TextView\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[40,260][120,280]\" />\r\n                    <node index=\"1\" text=\"\" resource-id=\"com.xiaohongshu.app:id/name_input\" class=\"android.widget.EditText\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"true\" enabled=\"true\" focusable=\"true\" focused=\"false\" scrollable=\"false\" long-clickable=\"true\" password=\"false\" selected=\"false\" bounds=\"[40,300][1040,340]\" />\r\n                  </node>\r\n                  <node index=\"1\" text=\"\" resource-id=\"\" class=\"android.widget.LinearLayout\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[40,380][1040,500]\">\r\n                    <node index=\"0\" text=\"电话\" resource-id=\"\" class=\"android.widget.TextView\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"false\" enabled=\"true\" focusable=\"false\" focused=\"false\" scrollable=\"false\" long-clickable=\"false\" password=\"false\" selected=\"false\" bounds=\"[40,400][120,420]\" />\r\n                    <node index=\"1\" text=\"\" resource-id=\"com.xiaohongshu.app:id/phone_input\" class=\"android.widget.EditText\" package=\"com.xiaohongshu.app\" content-desc=\"\" checkable=\"false\" checked=\"false\" clickable=\"true\" enabled=\"true\" focusable=\"true\" focused=\"false\" scrollable=\"false\" long-clickable=\"true\" password=\"false\" selected=\"false\" bounds=\"[40,440][1040,480]\" />\r\n                  </node>\r\n                </node>\r\n              </node>\r\n            </node>\r\n          </node>\r\n        </node>\r\n      </node>\r\n    </node>\r\n  </node>\r\n</hierarchy>`;\r\n\r\n// 模拟元素数据 \r\nconst mockElements = [\r\n  {\r\n    id: 'elem_1',\r\n    element_type: 'button',\r\n    text: '联系人',\r\n    bounds: { left: 30, top: 120, right: 120, bottom: 150 },\r\n    xpath: '//android.widget.TextView[@resource-id=\"com.xiaohongshu.app:id/left_btn\"]',\r\n    resource_id: 'com.xiaohongshu.app:id/left_btn',\r\n    class_name: 'android.widget.TextView',\r\n    is_clickable: true,\r\n    is_scrollable: false,\r\n    is_enabled: true,\r\n    is_focused: false,\r\n    checkable: false,\r\n    checked: false,\r\n    selected: false,\r\n    password: false,\r\n    content_desc: ''\r\n  },\r\n  {\r\n    id: 'elem_2', \r\n    element_type: 'text',\r\n    text: '添加联系人',\r\n    bounds: { left: 480, top: 120, right: 600, bottom: 150 },\r\n    xpath: '//android.widget.TextView[@resource-id=\"com.xiaohongshu.app:id/title\"]',\r\n    resource_id: 'com.xiaohongshu.app:id/title',\r\n    class_name: 'android.widget.TextView',\r\n    is_clickable: false,\r\n    is_scrollable: false,\r\n    is_enabled: true,\r\n    is_focused: false,\r\n    checkable: false,\r\n    checked: false,\r\n    selected: false,\r\n    password: false,\r\n    content_desc: ''\r\n  },\r\n  {\r\n    id: 'elem_3',\r\n    element_type: 'button',\r\n    text: '完成',\r\n    bounds: { left: 960, top: 120, right: 1050, bottom: 150 },\r\n    xpath: '//android.widget.TextView[@resource-id=\"com.xiaohongshu.app:id/right_btn\"]',\r\n    resource_id: 'com.xiaohongshu.app:id/right_btn', \r\n    class_name: 'android.widget.TextView',\r\n    is_clickable: true,\r\n    is_scrollable: false,\r\n    is_enabled: true,\r\n    is_focused: false,\r\n    checkable: false,\r\n    checked: false,\r\n    selected: false,\r\n    password: false,\r\n    content_desc: ''\r\n  },\r\n  {\r\n    id: 'elem_4',\r\n    element_type: 'text',\r\n    text: '姓名',\r\n    bounds: { left: 40, top: 260, right: 120, bottom: 280 },\r\n    xpath: '//android.widget.TextView[1]',\r\n    resource_id: '',\r\n    class_name: 'android.widget.TextView',\r\n    is_clickable: false,\r\n    is_scrollable: false,\r\n    is_enabled: true,\r\n    is_focused: false,\r\n    checkable: false,\r\n    checked: false,\r\n    selected: false,\r\n    password: false,\r\n    content_desc: ''\r\n  },\r\n  {\r\n    id: 'elem_5',\r\n    element_type: 'input',\r\n    text: '',\r\n    bounds: { left: 40, top: 300, right: 1040, bottom: 340 },\r\n    xpath: '//android.widget.EditText[@resource-id=\"com.xiaohongshu.app:id/name_input\"]',\r\n    resource_id: 'com.xiaohongshu.app:id/name_input',\r\n    class_name: 'android.widget.EditText',\r\n    is_clickable: true,\r\n    is_scrollable: false,\r\n    is_enabled: true,\r\n    is_focused: false,\r\n    checkable: false,\r\n    checked: false,\r\n    selected: false,\r\n    password: false,\r\n    content_desc: ''\r\n  },\r\n  {\r\n    id: 'elem_6',\r\n    element_type: 'text',\r\n    text: '电话',\r\n    bounds: { left: 40, top: 400, right: 120, bottom: 420 },\r\n    xpath: '//android.widget.TextView[2]',\r\n    resource_id: '',\r\n    class_name: 'android.widget.TextView', \r\n    is_clickable: false,\r\n    is_scrollable: false,\r\n    is_enabled: true,\r\n    is_focused: false,\r\n    checkable: false,\r\n    checked: false,\r\n    selected: false,\r\n    password: false,\r\n    content_desc: ''\r\n  },\r\n  {\r\n    id: 'elem_7',\r\n    element_type: 'input',\r\n    text: '',\r\n    bounds: { left: 40, top: 440, right: 1040, bottom: 480 },\r\n    xpath: '//android.widget.EditText[@resource-id=\"com.xiaohongshu.app:id/phone_input\"]',\r\n    resource_id: 'com.xiaohongshu.app:id/phone_input',\r\n    class_name: 'android.widget.EditText',\r\n    is_clickable: true,\r\n    is_scrollable: false,\r\n    is_enabled: true,\r\n    is_focused: false,\r\n    checkable: false,\r\n    checked: false,\r\n    selected: false,\r\n    password: false,\r\n    content_desc: ''\r\n  }\r\n];\r\n\r\nexport const ElementDiscoveryTestPage: React.FC = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleOpenModal = () => {\r\n    console.log('🧪 测试：开始打开发现元素模态框');\r\n    console.log('🧪 测试：模拟元素数据', mockElements);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    console.log('🧪 测试：关闭发现元素模态框');\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleElementSelect = (element: any) => {\r\n    console.log('🧪 测试：选择了元素', element);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '24px' }}>\r\n      <Card>\r\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n          <Title level={2}>🧪 元素发现调试测试页面</Title>\r\n          <Text>\r\n            这个页面用于测试\"发现元素\"功能的调试日志。\r\n            点击下面的按钮将打开ElementDiscoveryModal，\r\n            并在控制台中显示我们添加的调试信息。\r\n          </Text>\r\n          \r\n          <Button \r\n            type=\"primary\" \r\n            size=\"large\"\r\n            onClick={handleOpenModal}\r\n          >\r\n            🔍 测试发现元素功能\r\n          </Button>\r\n          \r\n          <Text type=\"secondary\">\r\n            请打开浏览器开发者工具的控制台查看调试信息：\r\n            <br />\r\n            • 🔍 buildGeneralParentChildRelations: 文本元素统计\r\n            <br />\r\n            • 🏗️ ArchitectureDiagram: 元素统计\r\n            <br />\r\n            • 📊 buildHierarchyTree: 层次构建统计\r\n          </Text>\r\n        </Space>\r\n      </Card>\r\n\r\n      <ElementDiscoveryModal\r\n        open={modalVisible}\r\n        allElements={mockElements}\r\n        targetElement={null}\r\n        onClose={handleCloseModal}\r\n        onElementSelect={handleElementSelect}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ElementDiscoveryTestPage;",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\ElementDiscoveryTestPage.tsx",
        "start": 9,
        "end": 236,
        "startLoc": {
          "line": 9,
          "column": 11,
          "position": 81
        },
        "endLoc": {
          "line": 236,
          "column": 2,
          "position": 1715
        }
      },
      "secondFile": {
        "name": "src\\pages\\ElementDiscoveryTestPage_backup.tsx",
        "start": 17,
        "end": 244,
        "startLoc": {
          "line": 17,
          "column": 7,
          "position": 158
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 1792
        }
      }
    },
    {
      "format": "javascript",
      "lines": 31,
      "fragment": ": 'var(--space-4)' }}>\r\n              <li>禁止使用 .ant-* 选择器覆盖</li>\r\n              <li>禁止使用 强制优先级 声明</li>\r\n              <li>所有样式通过 CSS 变量管理</li>\r\n              <li>ThemeBridge 统一集成 AntD</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div>\r\n            <Title level={4} style={{ color: 'var(--text-1)' }}>🔧 技术栈</Title>\r\n            <ul style={{ color: 'var(--text-2)', paddingLeft: 'var(--space-4)' }}>\r\n              <li>CSS Variables (设计令牌)</li>\r\n              <li>Tailwind CSS v4 (工具类)</li>\r\n              <li>AntD v5 ConfigProvider (主题)</li>\r\n              <li>React Context (状态管理)</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div>\r\n            <Title level={4} style={{ color: 'var(--text-1)' }}>📊 当前状态</Title>\r\n            <Space direction=\"vertical\">\r\n              <Tag color=\"success\">✅ Design Tokens 已建立</Tag>\r\n              <Tag color=\"success\">✅ ThemeBridge 已集成</Tag>\r\n              <Tag color=\"success\">✅ 主题切换功能完整</Tag>\r\n              <Tag color=\"processing\">🔄 清理遗留覆盖中</Tag>\r\n            </Space>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <Divider style={{ margin",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\DesignTokensDemo.tsx",
        "start": 291,
        "end": 321,
        "startLoc": {
          "line": 291,
          "column": 13,
          "position": 2443
        },
        "endLoc": {
          "line": 321,
          "column": 8,
          "position": 2822
        }
      },
      "secondFile": {
        "name": "src\\pages\\DesignTokensDemo.tsx",
        "start": 287,
        "end": 301,
        "startLoc": {
          "line": 287,
          "column": 5,
          "position": 2382
        },
        "endLoc": {
          "line": 301,
          "column": 7,
          "position": 2569
        }
      }
    },
    {
      "format": "javascript",
      "lines": 38,
      "fragment": "={{ width: '100%' }}>\r\n      <div>\r\n        <Typography.Title level={3} style={{ margin: 0 }}>\r\n          应用启动状态检测测试\r\n        </Typography.Title>\r\n        <Typography.Paragraph type=\"secondary\" style={{ marginTop: 8 }}>\r\n          测试新的智能应用启动检测功能，确保应用真正就绪后再执行自动化操作\r\n        </Typography.Paragraph>\r\n      </div>\r\n\r\n      <Row gutter={[16, 16]}>\r\n        <Col xs={24} lg={12}>\r\n          <Card title=\"控制面板\">\r\n            <Form layout=\"vertical\">\r\n              <Form.Item label=\"选择设备\">\r\n                <Select\r\n                  placeholder=\"请选择设备\"\r\n                  value={selectedDevice}\r\n                  onChange={setSelectedDevice}\r\n                  options={devices.map((d: any) => ({ value: d.id, label: `${d.name} (${d.id})` }))}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"选择应用\">\r\n                <Select\r\n                  placeholder=\"请选择应用\"\r\n                  value={selectedApp}\r\n                  onChange={setSelectedApp}\r\n                  showSearch\r\n                  filterOption={(input, option) =>\r\n                    ((option?.label as string) || '').toLowerCase().includes(input.toLowerCase())\r\n                  }\r\n                  options={apps.map((app) => ({ value: app.package_name, label: `${app.app_name} (${app.package_name})` }))}\r\n                />\r\n              </Form.Item>\r\n\r\n              {selectedAppInfo && (\r\n                <Descriptions size=\"small\" column={1",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\AppLaunchTestPage.tsx",
        "start": 157,
        "end": 194,
        "startLoc": {
          "line": 157,
          "column": 6,
          "position": 1501
        },
        "endLoc": {
          "line": 194,
          "column": 2,
          "position": 1934
        }
      },
      "secondFile": {
        "name": "src\\pages\\statistics\\StatisticsPage.tsx",
        "start": 68,
        "end": 79,
        "startLoc": {
          "line": 68,
          "column": 6,
          "position": 655
        },
        "endLoc": {
          "line": 79,
          "column": 2,
          "position": 792
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "const [selectedDevice, setSelectedDevice] = useState<string>('');\r\n  const [apps, setApps] = useState<AppInfo[]>([]);\r\n  const [selectedApp, setSelectedApp] = useState<string>('');\r\n  const [isLaunching, setIsLaunching] = useState(false);\r\n  const [launchResult, setLaunchResult] = useState<AppLaunchResult | null>(null);\r\n  const [launchHistory, setLaunchHistory] = useState<AppLaunchResult[]>([]);\r\n\r\n  useEffect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\AppLaunchTestPage.tsx",
        "start": 55,
        "end": 62,
        "startLoc": {
          "line": 55,
          "column": 3,
          "position": 384
        },
        "endLoc": {
          "line": 62,
          "column": 10,
          "position": 525
        }
      },
      "secondFile": {
        "name": "src\\pages\\app-launch-test\\AppLaunchTestPageModular.tsx",
        "start": 26,
        "end": 33,
        "startLoc": {
          "line": 26,
          "column": 3,
          "position": 221
        },
        "endLoc": {
          "line": 33,
          "column": 10,
          "position": 362
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ");\r\n    }\r\n  };\r\n\r\n  const handleLaunchApp = async () => {\r\n    if (!selectedDevice || !selectedApp) return;\r\n    setIsLaunching(true);\r\n    setLaunchResult(null);\r\n    try {\r\n      const result = await invoke<AppLaunchResult>('launch_device_app', {\r\n        deviceId: selectedDevice,\r\n        packageName: selectedApp,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\AppLaunchTestPage.tsx",
        "start": 92,
        "end": 103,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 889
        },
        "endLoc": {
          "line": 103,
          "column": 2,
          "position": 993
        }
      },
      "secondFile": {
        "name": "src\\pages\\app-launch-test\\AppLaunchTestPageModular.tsx",
        "start": 77,
        "end": 91,
        "startLoc": {
          "line": 77,
          "column": 6,
          "position": 764
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 875
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "={{ padding: 24, background: '#f0f2f5', minHeight: '100vh' }}>\r\n      <div style={{ maxWidth: 1200, margin: '0 auto' }}>\r\n        <div style={{ marginBottom: 24 }}>\r\n          <Title level={2} style={{ margin: 0, color: '#1890ff' }}>\r\n            🔄 高级循环控制系统\r\n          </Title>\r\n          <Paragraph type=\"secondary\">\r\n            第6步优化：实现复杂循环控制，支持嵌套循环、条件判断和动态参数调整\r\n          </Paragraph>\r\n        </div>\r\n\r\n        <Alert\r\n          message=\"循环控制增强完成\"\r\n          description=\"本页面实现了脚本自动化的高级循环控制功能，这是我们6步优化计划的最后一步。现在您可以创建复杂的循环逻辑，包括嵌套循环、条件判断和动态参数调整。\"\r\n          type=\"success\"\r\n          style={{ marginBottom: 24 }}\r\n          showIcon\r\n        />\r\n\r\n        <Card title=\"功能特点\" style={{ marginBottom: 24 }}>\r\n          <div style={{",
      "tokens": 0,
      "firstFile": {
        "name": "src\\pages\\AdvancedLoopPage.tsx",
        "start": 13,
        "end": 33,
        "startLoc": {
          "line": 13,
          "column": 6,
          "position": 106
        },
        "endLoc": {
          "line": 33,
          "column": 2,
          "position": 315
        }
      },
      "secondFile": {
        "name": "src\\components\\loop-control\\LoopBuilder.tsx",
        "start": 399,
        "end": 422,
        "startLoc": {
          "line": 399,
          "column": 6,
          "position": 3597
        },
        "endLoc": {
          "line": 422,
          "column": 13,
          "position": 3798
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\r\n  /** 🆕 父元素信息 */\r\n  parent?: {\r\n    element_type?: string;\r\n    resource_id?: string;\r\n    class_name?: string;\r\n    text?: string;\r\n  };\r\n  /** 🆕 兄弟元素信息 */\r\n  siblings?: Array<{\r\n    element_type?: string;\r\n    resource_id?: string;\r\n    text?: string;\r\n    position?: 'before' | 'after';\r\n  }>;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\modules\\ElementNameMapper.ts",
        "start": 115,
        "end": 130,
        "startLoc": {
          "line": 115,
          "column": 4,
          "position": 631
        },
        "endLoc": {
          "line": 130,
          "column": 2,
          "position": 747
        }
      },
      "secondFile": {
        "name": "src\\modules\\ElementNameMapper.ts",
        "start": 59,
        "end": 74,
        "startLoc": {
          "line": 59,
          "column": 8,
          "position": 270
        },
        "endLoc": {
          "line": 74,
          "column": 14,
          "position": 387
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : String(error);\r\n      setState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: errorMessage,\r\n      }));\r\n      throw error;\r\n    }\r\n  }, [loadTasks",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useTaskManagement.ts",
        "start": 132,
        "end": 142,
        "startLoc": {
          "line": 132,
          "column": 7,
          "position": 1096
        },
        "endLoc": {
          "line": 142,
          "column": 10,
          "position": 1195
        }
      },
      "secondFile": {
        "name": "src\\hooks\\useTaskManagement.ts",
        "start": 108,
        "end": 118,
        "startLoc": {
          "line": 108,
          "column": 6,
          "position": 883
        },
        "endLoc": {
          "line": 118,
          "column": 15,
          "position": 982
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "({\r\n      tasks: [],\r\n      loading: false,\r\n      stats: {\r\n        total: 0,\r\n        new: 0,\r\n        ready: 0,\r\n        executing: 0,\r\n        done: 0,\r\n        failed: 0,\r\n      },\r\n      rateLimitConfig: preciseAcquisitionService.getDefaultRateLimitConfig(),\r\n      error: null,\r\n    });\r\n    setCurrentFilters",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useTaskManagement.ts",
        "start": 253,
        "end": 267,
        "startLoc": {
          "line": 253,
          "column": 9,
          "position": 2215
        },
        "endLoc": {
          "line": 267,
          "column": 18,
          "position": 2323
        }
      },
      "secondFile": {
        "name": "src\\hooks\\useTaskManagement.ts",
        "start": 49,
        "end": 64,
        "startLoc": {
          "line": 49,
          "column": 2,
          "position": 305
        },
        "endLoc": {
          "line": 64,
          "column": 6,
          "position": 415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 71,
      "fragment": "import { useState, useCallback } from 'react';\r\n\r\n/**\r\n * 通用的步骤卡片编辑状态管理\r\n * 直接适配现有组件的接口模式\r\n */\r\nexport const useStepCardEdit = (initialName: string, initialDescription: string) => {\r\n  // 标题编辑状态\r\n  const [editingName, setEditingName] = useState(false);\r\n  const [nameDraft, setNameDraft] = useState(initialName);\r\n\r\n  // 描述编辑状态  \r\n  const [editingDescription, setEditingDescription] = useState(false);\r\n  const [descriptionDraft, setDescriptionDraft] = useState(initialDescription);\r\n\r\n  // 标题编辑方法（适配 StepCardHeader 接口）\r\n  const beginEditName = useCallback((e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    setNameDraft(initialName);\r\n    setEditingName(true);\r\n  }, [initialName]);\r\n\r\n  const saveName = useCallback(() => {\r\n    setEditingName(false);\r\n    return nameDraft.trim();\r\n  }, [nameDraft]);\r\n\r\n  const cancelName = useCallback(() => {\r\n    setEditingName(false);\r\n    setNameDraft(initialName);\r\n  }, [initialName]);\r\n\r\n  // 描述编辑方法\r\n  const beginEditDescription = useCallback(() => {\r\n    setDescriptionDraft(initialDescription);\r\n    setEditingDescription(true);\r\n  }, [initialDescription]);\r\n\r\n  const saveDescription = useCallback(() => {\r\n    setEditingDescription(false);\r\n    return descriptionDraft.trim();\r\n  }, [descriptionDraft]);\r\n\r\n  const cancelDescription = useCallback(() => {\r\n    setEditingDescription(false);\r\n    setDescriptionDraft(initialDescription);\r\n  }, [initialDescription]);\r\n\r\n  return {\r\n    // 名称编辑状态\r\n    editingName,\r\n    nameDraft,\r\n    setNameDraft,\r\n    beginEditName,\r\n    saveName,\r\n    cancelName,\r\n    \r\n    // 描述编辑状态\r\n    editingDescription,\r\n    descriptionDraft,\r\n    setDescriptionDraft,\r\n    beginEditDescription,\r\n    saveDescription,\r\n    cancelDescription\r\n  };\r\n};\r\n\r\n/**\r\n * 通用的步骤卡片操作按钮逻辑\r\n * 统一处理编辑、删除、测试等操作\r\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useStepCardCommon.ts",
        "start": 5,
        "end": 75,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 75,
          "column": 4,
          "position": 538
        }
      },
      "secondFile": {
        "name": "src\\hooks\\useStepCardCommonFixed.ts",
        "start": 5,
        "end": 75,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 11
        },
        "endLoc": {
          "line": 75,
          "column": 4,
          "position": 538
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "{\r\n  report_date: string;\r\n  summary: {\r\n    new_targets: number;\r\n    new_comments: number;\r\n    tasks_generated: number;\r\n    tasks_completed: number;\r\n    success_rate: number;\r\n  };\r\n  details: {\r\n    follow_tasks: Array<{ target_user: string; status: string; result?: string }>;\r\n    reply_tasks: Array<{ comment_id: string; reply_content: string; status: string }>;\r\n  };\r\n}\r\n\r\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\usePreciseAcquisition.ts",
        "start": 42,
        "end": 57,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 219
        },
        "endLoc": {
          "line": 57,
          "column": 7,
          "position": 360
        }
      },
      "secondFile": {
        "name": "src\\application\\services\\prospecting-acquisition-service.ts",
        "start": 489,
        "end": 502,
        "startLoc": {
          "line": 489,
          "column": 2,
          "position": 3762
        },
        "endLoc": {
          "line": 502,
          "column": 2,
          "position": 3900
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "const rows: CsvRowData[] = [];\r\n    for (let i = 1; i < lines.length; i++) {\r\n      if (lines[i].trim() === '') continue; // 跳过空行\r\n\r\n      const values = lines[i].split(',').map(v => v.trim().replace(/\"/g, ''));\r\n      const row: any = {};\r\n\r\n      headers.forEach((header, index) => {\r\n        row[header] = values[index] || '';\r\n      });\r\n\r\n      rows.push(row as CsvRowData);\r\n    }\r\n\r\n    return rows;\r\n  },",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useCsvImport.ts",
        "start": 111,
        "end": 126,
        "startLoc": {
          "line": 111,
          "column": 5,
          "position": 856
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1057
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\shared\\utils\\validation\\csvValidation.ts",
        "start": 329,
        "end": 348,
        "startLoc": {
          "line": 329,
          "column": 3,
          "position": 2842
        },
        "endLoc": {
          "line": 348,
          "column": 4,
          "position": 3046
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ",\r\n            pageSize: pagination.pageSize,\r\n            total: pagination.total,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => \r\n              `第 ${range[0]}-${range[1]} 条，共 ${total} 条`\r\n          }}\r\n          scroll",
      "tokens": 0,
      "firstFile": {
        "name": "src\\examples\\UnifiedTaskEngineExample.tsx",
        "start": 412,
        "end": 420,
        "startLoc": {
          "line": 412,
          "column": 5,
          "position": 3274
        },
        "endLoc": {
          "line": 420,
          "column": 7,
          "position": 3355
        }
      },
      "secondFile": {
        "name": "src\\modules\\precise-acquisition\\candidate-pool\\components\\CandidatePoolManager.tsx",
        "start": 457,
        "end": 464,
        "startLoc": {
          "line": 457,
          "column": 8,
          "position": 3807
        },
        "endLoc": {
          "line": 464,
          "column": 9,
          "position": 3886
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ", { deviceId, params });\r\n      \r\n      const clickResult = await invoke<UniversalClickResult>('execute_universal_ui_click', {\r\n        deviceId,\r\n        params,\r\n      });\r\n\r\n      console.log('✅ 测试成功:', clickResult);\r\n      setResult(clickResult);\r\n      \r\n    } catch (err: any) {\r\n      console.error('❌ 测试失败:', err);\r\n      setError(err.message || err.toString());\r\n    } finally {\r\n      setIsTesting(false);\r\n    }\r\n  };\r\n\r\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\examples\\TestUniversalUIClick.tsx",
        "start": 89,
        "end": 107,
        "startLoc": {
          "line": 89,
          "column": 15,
          "position": 731
        },
        "endLoc": {
          "line": 107,
          "column": 7,
          "position": 882
        }
      },
      "secondFile": {
        "name": "src\\examples\\TestUniversalUIClick.tsx",
        "start": 58,
        "end": 76,
        "startLoc": {
          "line": 58,
          "column": 16,
          "position": 472
        },
        "endLoc": {
          "line": 76,
          "column": 6,
          "position": 623
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "XIAOHONGSHU = 'xiaohongshu',\r\n}\r\n\r\nexport const PLATFORM_OPTIONS = [\r\n  { label: '抖音', value: Platform.DOUYIN },\r\n  { label: '巨量引擎', value: Platform.OCEANENGINE },\r\n  { label: '公开来源', value: Platform.PUBLIC },\r\n  { label: '小红书', value: Platform.XIAOHONGSHU },\r\n];\r\n\r\n// ==================== 目标类型枚举 ====================\r\n\r\nexport enum TargetType {\r\n  VIDEO = 'video',\r\n  ACCOUNT = 'account',\r\n  USER",
      "tokens": 0,
      "firstFile": {
        "name": "src\\constants\\precise-acquisition-enums.ts",
        "start": 18,
        "end": 33,
        "startLoc": {
          "line": 18,
          "column": 3,
          "position": 58
        },
        "endLoc": {
          "line": 33,
          "column": 5,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 18,
        "end": 33,
        "startLoc": {
          "line": 18,
          "column": 3,
          "position": 62
        },
        "endLoc": {
          "line": 33,
          "column": 11,
          "position": 205
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "USER = 'user',\r\n  CONTENT = 'content',\r\n}\r\n\r\nexport const TARGET_TYPE_OPTIONS = [\r\n  { label: '视频', value: TargetType.VIDEO },\r\n  { label: '账号', value: TargetType.ACCOUNT },\r\n  { label: '用户', value: TargetType.USER },\r\n  { label: '内容', value: TargetType.CONTENT },\r\n];\r\n\r\n// ==================== 来源类型枚举 ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src\\constants\\precise-acquisition-enums.ts",
        "start": 33,
        "end": 44,
        "startLoc": {
          "line": 33,
          "column": 3,
          "position": 201
        },
        "endLoc": {
          "line": 44,
          "column": 52,
          "position": 320
        }
      },
      "secondFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 34,
        "end": 45,
        "startLoc": {
          "line": 34,
          "column": 3,
          "position": 209
        },
        "endLoc": {
          "line": 45,
          "column": 52,
          "position": 328
        }
      }
    },
    {
      "format": "typescript",
      "lines": 68,
      "fragment": "},\r\n];\r\n\r\n// ==================== 来源类型枚举 ====================\r\n\r\nexport enum SourceType {\r\n  MANUAL = 'manual',\r\n  CSV = 'csv',\r\n  WHITELIST = 'whitelist',\r\n  ADS = 'ads',\r\n}\r\n\r\nexport const SOURCE_TYPE_OPTIONS = [\r\n  { label: '人工添加', value: SourceType.MANUAL },\r\n  { label: 'CSV导入', value: SourceType.CSV },\r\n  { label: '白名单来源', value: SourceType.WHITELIST },\r\n  { label: '广告回流', value: SourceType.ADS },\r\n];\r\n\r\n// ==================== 行业标签枚举 ====================\r\n\r\nexport enum IndustryTag {\r\n  // 医疗健康类\r\n  ORAL_CARE = '口腔',\r\n  ORAL_ORTHODONTICS = '口腔正畸',\r\n  MATERNAL_BABY = '母婴',\r\n  MEDICAL_HEALTH = '医疗健康',\r\n  FITNESS = '健身',\r\n\r\n  // 美妆生活类\r\n  BEAUTY = '美妆',\r\n  SKINCARE = '护肤',\r\n  HOME_FURNISHING = '家居',\r\n  FOOD_BEVERAGE = '食品饮料',\r\n\r\n  // 教育培训类\r\n  EDUCATION_TRAINING = '教育培训',\r\n  LANGUAGE_LEARNING = '语言学习',\r\n  SKILL_TRAINING = '技能培训',\r\n\r\n  // 科技数码类\r\n  DIGITAL_3C = '3C',\r\n  SOFTWARE_APPS = '软件应用',\r\n  AI_TECH = 'AI科技',\r\n\r\n  // 汽车交通类\r\n  AUTOMOTIVE = '汽车',\r\n  NEW_ENERGY_VEHICLE = '新能源汽车',\r\n\r\n  // 旅游娱乐类\r\n  TRAVEL = '旅游',\r\n  ENTERTAINMENT = '娱乐',\r\n  GAMES = '游戏',\r\n\r\n  // 宠物服饰类\r\n  PETS = '宠物',\r\n  FASHION = '服饰',\r\n\r\n  // 金融服务类\r\n  FINANCE = '金融',\r\n  INSURANCE = '保险',\r\n  REAL_ESTATE = '房产',\r\n\r\n  // 其他\r\n  OTHER = '其他'\r\n}\r\n\r\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src\\constants\\precise-acquisition-enums.ts",
        "start": 41,
        "end": 108,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 310
        },
        "endLoc": {
          "line": 108,
          "column": 7,
          "position": 776
        }
      },
      "secondFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 84,
        "end": 95,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 758
        },
        "endLoc": {
          "line": 95,
          "column": 4,
          "position": 489
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "// ==================== 地域标签枚举 ====================\r\n\r\nexport enum RegionTag {\r\n  // 全国和大区\r\n  NATIONWIDE = '全国',\r\n  EAST_CHINA = '华东',\r\n  NORTH_CHINA = '华北', \r\n  SOUTH_CHINA = '华南',\r\n  CENTRAL_CHINA = '华中',\r\n  SOUTHWEST_CHINA = '西南',\r\n  NORTHWEST_CHINA = '西北',\r\n  NORTHEAST_CHINA = '东北',\r\n\r\n  // 主要省份（可扩展）\r\n  BEIJING = '北京',\r\n  SHANGHAI = '上海',\r\n  GUANGDONG = '广东',\r\n  ZHEJIANG = '浙江',\r\n  JIANGSU = '江苏',\r\n  SHANDONG = '山东',\r\n  SICHUAN = '四川',\r\n  HUBEI = '湖北',\r\n  HUNAN = '湖南',\r\n  FUJIAN = '福建',\r\n  HEBEI = '河北',\r\n  HENAN = '河南',\r\n  ANHUI = '安徽',\r\n  LIAONING = '辽宁',\r\n  JILIN = '吉林',\r\n  HEILONGJIANG = '黑龙江'\r\n}\r\n\r\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "src\\constants\\precise-acquisition-enums.ts",
        "start": 154,
        "end": 186,
        "startLoc": {
          "line": 154,
          "column": 1,
          "position": 1365
        },
        "endLoc": {
          "line": 186,
          "column": 7,
          "position": 1609
        }
      },
      "secondFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 151,
        "end": 128,
        "startLoc": {
          "line": 151,
          "column": 1,
          "position": 1224
        },
        "endLoc": {
          "line": 128,
          "column": 4,
          "position": 731
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "LIKE = 'like',\r\n  COMMENT = 'comment',\r\n  SHARE = 'share',\r\n  VIEW = 'view',\r\n}\r\n\r\nexport const TASK_TYPE_OPTIONS = [\r\n  { label: '回复', value: TaskType.REPLY },\r\n  { label: '关注', value: TaskType.FOLLOW },\r\n  { label: '点赞', value: TaskType.LIKE },\r\n  { label: '评论', value: TaskType.COMMENT },\r\n  { label: '分享', value: TaskType.SHARE },\r\n  { label: '浏览', value: TaskType.VIEW },\r\n];\r\n\r\n// ==================== 任务状态枚举 ====================",
      "tokens": 0,
      "firstFile": {
        "name": "src\\constants\\precise-acquisition-enums.ts",
        "start": 212,
        "end": 227,
        "startLoc": {
          "line": 212,
          "column": 3,
          "position": 1969
        },
        "endLoc": {
          "line": 227,
          "column": 52,
          "position": 2146
        }
      },
      "secondFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 72,
        "end": 87,
        "startLoc": {
          "line": 72,
          "column": 3,
          "position": 591
        },
        "endLoc": {
          "line": 87,
          "column": 52,
          "position": 768
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "}\r\n\r\nexport const TASK_STATUS_OPTIONS = [\r\n  { label: '新建', value: TaskStatus.NEW },\r\n  { label: '就绪', value: TaskStatus.READY },\r\n  { label: '待执行', value: TaskStatus.PENDING },\r\n  { label: '执行中', value: TaskStatus.EXECUTING },\r\n  { label: '进行中'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\constants\\precise-acquisition-enums.ts",
        "start": 241,
        "end": 248,
        "startLoc": {
          "line": 241,
          "column": 1,
          "position": 2254
        },
        "endLoc": {
          "line": 248,
          "column": 6,
          "position": 2356
        }
      },
      "secondFile": {
        "name": "src\\shared\\types\\unified-enums.ts",
        "start": 55,
        "end": 62,
        "startLoc": {
          "line": 55,
          "column": 1,
          "position": 412
        },
        "endLoc": {
          "line": 62,
          "column": 5,
          "position": 514
        }
      }
    },
    {
      "format": "javascript",
      "lines": 16,
      "fragment": ", color: '#e5e7eb' }}><strong>功能:</strong> {element.description}</p>\r\n                    <p style={{ margin: 0, color: '#e5e7eb' }}><strong>位置:</strong> ({element.position.x}, {element.position.y})</p>\r\n                    <p style={{ margin: 0, color: '#e5e7eb' }}><strong>大小:</strong> {element.position.width} × {element.position.height}</p>\r\n                    {element.text && <p style={{ margin: 0, color: '#e5e7eb' }}><strong>文本:</strong> {element.text}</p>}\r\n                  </div>\r\n                </Card>\r\n              );\r\n            })}\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n\r\n    {/* 🆕 元素名称编辑器 */}\r\n    <ElementNameEditor\r\n      visible={showElementNameEditor",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\VisualPageAnalyzer.tsx",
        "start": 537,
        "end": 552,
        "startLoc": {
          "line": 537,
          "column": 2,
          "position": 5917
        },
        "endLoc": {
          "line": 552,
          "column": 22,
          "position": 6160
        }
      },
      "secondFile": {
        "name": "src\\components\\VisualPageAnalyzer.tsx",
        "start": 536,
        "end": 540,
        "startLoc": {
          "line": 536,
          "column": 3,
          "position": 5894
        },
        "endLoc": {
          "line": 540,
          "column": 2,
          "position": 6064
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "{result.page_state && (\r\n            <div>\r\n              <Text type=\"secondary\" className=\"text-xs\">页面状态: </Text>\r\n              <Tag color=\"blue\">{result.page_state}</Tag>\r\n            </div>\r\n          )}\r\n\r\n          {result",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\TestResultsDisplay.tsx",
        "start": 89,
        "end": 96,
        "startLoc": {
          "line": 89,
          "column": 11,
          "position": 782
        },
        "endLoc": {
          "line": 96,
          "column": 7,
          "position": 857
        }
      },
      "secondFile": {
        "name": "src\\components\\step-card\\TestResultDetail.tsx",
        "start": 70,
        "end": 77,
        "startLoc": {
          "line": 70,
          "column": 9,
          "position": 596
        },
        "endLoc": {
          "line": 77,
          "column": 13,
          "position": 670
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 20,\r\n    total: 0,\r\n  });\r\n\r\n  // 筛选条件\r\n  const [filters, setFilters] = useState({\r\n    status",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\TaskManagementCenter.tsx",
        "start": 57,
        "end": 68,
        "startLoc": {
          "line": 57,
          "column": 11,
          "position": 359
        },
        "endLoc": {
          "line": 68,
          "column": 7,
          "position": 486
        }
      },
      "secondFile": {
        "name": "src\\components\\WatchTargetList.tsx",
        "start": 49,
        "end": 60,
        "startLoc": {
          "line": 49,
          "column": 12,
          "position": 308
        },
        "endLoc": {
          "line": 60,
          "column": 9,
          "position": 435
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "(result);\r\n      setPagination(prev => ({\r\n        ...prev,\r\n        current: page,\r\n        pageSize,\r\n        total: result.length, // TODO: 后端应该返回总数\r\n      }));\r\n    } catch (error) {\r\n      message.error(`加载失败: ${error instanceof Error ? error.message : String(error)}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 刷新列表\r\n   */\r\n  const handleRefresh = () => {\r\n    loadTasks",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\TaskManagementCenter.tsx",
        "start": 95,
        "end": 113,
        "startLoc": {
          "line": 95,
          "column": 9,
          "position": 755
        },
        "endLoc": {
          "line": 113,
          "column": 10,
          "position": 897
        }
      },
      "secondFile": {
        "name": "src\\components\\WatchTargetList.tsx",
        "start": 78,
        "end": 96,
        "startLoc": {
          "line": 78,
          "column": 11,
          "position": 601
        },
        "endLoc": {
          "line": 96,
          "column": 12,
          "position": 743
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ",\r\n      width: 150,\r\n      render: (date: Date | null) => \r\n        date ? date.toLocaleString() : '-',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'actions',\r\n      width: 150,\r\n      fixed: 'right' as const,\r\n      render: (record: TaskEntity",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\TaskManagementCenter.tsx",
        "start": 285,
        "end": 295,
        "startLoc": {
          "line": 285,
          "column": 13,
          "position": 2763
        },
        "endLoc": {
          "line": 295,
          "column": 11,
          "position": 2862
        }
      },
      "secondFile": {
        "name": "src\\components\\WatchTargetList.tsx",
        "start": 234,
        "end": 244,
        "startLoc": {
          "line": 234,
          "column": 12,
          "position": 2018
        },
        "endLoc": {
          "line": 244,
          "column": 12,
          "position": 2117
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "<Button \r\n                type=\"text\" \r\n                size=\"small\" \r\n                icon={<DeleteOutlined />}\r\n                danger\r\n              />\r\n            </Tooltip>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 行选择配置\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: setSelectedRowKeys,\r\n    getCheckboxProps: (record: TaskEntity",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\TaskManagementCenter.tsx",
        "start": 346,
        "end": 363,
        "startLoc": {
          "line": 346,
          "column": 15,
          "position": 3281
        },
        "endLoc": {
          "line": 363,
          "column": 11,
          "position": 3380
        }
      },
      "secondFile": {
        "name": "src\\components\\WatchTargetList.tsx",
        "start": 269,
        "end": 286,
        "startLoc": {
          "line": 269,
          "column": 15,
          "position": 2323
        },
        "endLoc": {
          "line": 286,
          "column": 12,
          "position": 2422
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "rowSelection={rowSelection}\r\n            loading={loading}\r\n            pagination={{\r\n              ...pagination,\r\n              showSizeChanger: true,\r\n              showQuickJumper: true,\r\n              showTotal: (total, range) => \r\n                `第 ${range[0]}-${range[1]} 条，共 ${total} 条数据`,\r\n              onChange: (page, pageSize) => {\r\n                loadTasks",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\TaskManagementCenter.tsx",
        "start": 573,
        "end": 582,
        "startLoc": {
          "line": 573,
          "column": 13,
          "position": 5095
        },
        "endLoc": {
          "line": 582,
          "column": 10,
          "position": 5193
        }
      },
      "secondFile": {
        "name": "src\\components\\WatchTargetList.tsx",
        "start": 420,
        "end": 429,
        "startLoc": {
          "line": 420,
          "column": 13,
          "position": 3461
        },
        "endLoc": {
          "line": 429,
          "column": 12,
          "position": 3559
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "const handleSaveLoopConfig = () => {\r\n    if (onUpdateStepParameters) {\r\n      const parameters = {\r\n        ...step.parameters,\r\n        loop_count: isInfiniteLoop ? -1 : loopCount,\r\n        is_infinite_loop: isInfiniteLoop\r\n      };\r\n      onUpdateStepParameters(step.id, parameters);\r\n    }\r\n    setIsLoopConfigVisible(false);\r\n  };\r\n\r\n  // 显示循环配置模态框",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\LoopEndCard.tsx",
        "start": 67,
        "end": 79,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 569
        },
        "endLoc": {
          "line": 79,
          "column": 13,
          "position": 673
        }
      },
      "secondFile": {
        "name": "src\\components\\LoopEndCardNative.tsx",
        "start": 46,
        "end": 58,
        "startLoc": {
          "line": 46,
          "column": 3,
          "position": 393
        },
        "endLoc": {
          "line": 58,
          "column": 6,
          "position": 497
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "/>\r\n            <Text type=\"secondary\">\r\n              {isInfiniteLoop \r\n                ? '已启用无限循环模式 ∞' \r\n                : `当前设置为执行 ${loopCount} 次`\r\n              }\r\n            </Text>\r\n          </div>\r\n          \r\n          <div style={{ marginTop: '16px', padding: '12px', backgroundColor: '#f0f9ff', borderRadius: '6px', border: '1px solid #bae6fd' }}>\r\n            <Text type=\"secondary\" style={{ fontSize: '12px' }}>\r\n              💡 提示：{isInfiniteLoop \r\n                ? '无限循环模式下，循环体内的步骤将不断重复执行，直到手动停止或出现错误。' \r\n                : '当执行到循环结束卡片时，如果还未达到设定次数，将返回循环开始处继续执行。'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\LoopEndCard.tsx",
        "start": 272,
        "end": 285,
        "startLoc": {
          "line": 272,
          "column": 13,
          "position": 2314
        },
        "endLoc": {
          "line": 285,
          "column": 39,
          "position": 2447
        }
      },
      "secondFile": {
        "name": "src\\components\\DraggableStepCard\\components\\LoopConfigModal.tsx",
        "start": 91,
        "end": 101,
        "startLoc": {
          "line": 91,
          "column": 11,
          "position": 847
        },
        "endLoc": {
          "line": 101,
          "column": 9,
          "position": 973
        }
      }
    },
    {
      "format": "css",
      "lines": 24,
      "fragment": "/* EnhancedDraggableToolbar.module.css */\r\n\r\n.toolbar {\r\n  display: flex;\r\n  gap: 8px;\r\n  padding: 8px;\r\n  background: white;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.toolGroup {\r\n  display: flex;\r\n  gap: 4px;\r\n  align-items: center;\r\n}\r\n\r\n.divider {\r\n  width: 1px;\r\n  height: 20px;\r\n  background: #d9d9d9;\r\n  margin: 0 8px;\r\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\EnhancedDraggableToolbar.module.css",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 163
        }
      },
      "secondFile": {
        "name": "src\\modules\\contact-import\\ui\\components\\grid-layout\\components\\EnhancedDraggableToolbar.module.css",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 163
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ",\r\n                fontSize: STEP_CARD_DESIGN_TOKENS.typography.fontSize.base,\r\n                transition: `all ${STEP_CARD_DESIGN_TOKENS.animations.duration.fast} ${STEP_CARD_DESIGN_TOKENS.animations.easing.easeOut}`\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.background = STEP_CARD_DESIGN_TOKENS.colors.bg.secondary;\r\n              }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\DraggableStepCard.tsx",
        "start": 692,
        "end": 698,
        "startLoc": {
          "line": 692,
          "column": 6,
          "position": 5586
        },
        "endLoc": {
          "line": 698,
          "column": 2,
          "position": 5670
        }
      },
      "secondFile": {
        "name": "src\\components\\DraggableStepCard.tsx",
        "start": 663,
        "end": 669,
        "startLoc": {
          "line": 663,
          "column": 10,
          "position": 5268
        },
        "endLoc": {
          "line": 669,
          "column": 2,
          "position": 5352
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ": STEP_CARD_DESIGN_TOKENS.colors.text.muted,\r\n                fontSize: STEP_CARD_DESIGN_TOKENS.typography.fontSize.base,\r\n                transition: `all ${STEP_CARD_DESIGN_TOKENS.animations.duration.fast} ${STEP_CARD_DESIGN_TOKENS.animations.easing.easeOut}`\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.background = 'rgba(239, 68, 68, 0.1)'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\components\\DraggableStepCard.tsx",
        "start": 717,
        "end": 722,
        "startLoc": {
          "line": 717,
          "column": 6,
          "position": 5833
        },
        "endLoc": {
          "line": 722,
          "column": 25,
          "position": 5915
        }
      },
      "secondFile": {
        "name": "src\\components\\DraggableStepCard.tsx",
        "start": 692,
        "end": 668,
        "startLoc": {
          "line": 692,
          "column": 19,
          "position": 5577
        },
        "endLoc": {
          "line": 668,
          "column": 24,
          "position": 5341
        }
      }
    }
  ]
}